[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "test {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Launcher\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "run {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 24,
      "-": 15
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "T . 0 . abcd"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "T . 1 . whatever"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.util.GregorianCalendar;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " * Handles adding tasks to the TaskList."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    protected static String title;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    protected static String details;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @param s String containing Task title."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @param det String containing Task timing."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public AddCommand(String s, String det) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        title \u003d s;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        details \u003d det;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        type \u003d \"add\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Executes the AddCommand and adds a corresponding Task to the TaskList."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     *  @param t TaskList."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @param u Ui."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @param s Storage."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public String execute(TaskList t, Ui u, Storage s) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Task task \u003d new Task(\"null\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        if (title.equals(\"todo\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            task \u003d new ToDo(details);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        } else if (title.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            String[] arr \u003d details.split(\"/by\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            Date date \u003d convertToDate(arr[1].trim());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            task \u003d new Deadline(arr[0].trim(), date);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        } else if (title.equals(\"event\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            String[] arr \u003d details.split(\"/at\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            Date date \u003d convertToDate(arr[1].trim());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            task \u003d new Event(arr[0].trim(), date);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        t.list.add(task);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            String text \u003d task.getType() + \" . 0 . \" + task.getFullDescription() + \"\\n\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            s.update(true, text, t);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            System.out.println(\"Something went wrong\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return u.addLine(task.toString(), t.list.size());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Converts String to Date."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @param str String containing date information."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @return Date of Task."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public static Date convertToDate(String str) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        String[] arr \u003d str.split(\" \");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        String[] dateArray \u003d arr[0].split(\"/\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        int day \u003d Integer.parseInt(dateArray[0]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        int month \u003d Integer.parseInt(dateArray[1]) - 1;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        int year \u003d Integer.parseInt(dateArray[2]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        int hour \u003d Integer.parseInt(arr[1].substring(0, 2));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        int minute \u003d Integer.parseInt(arr[1].substring(2));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Date d \u003d new GregorianCalendar(year, month, day, hour, minute).getTime();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return d;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 74
    }
  },
  {
    "path": "src/main/java/seedu/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " * Abstract base Command class for Command objects."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /** Boolean representing if the user has decided to exit the application.*/"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    protected static boolean isExit;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /** String representing the type of command.*/"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    protected static String type;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    protected static TaskList task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    protected static Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    protected static Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /** Constructor.*/"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Abstract method for executing Commands."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @param t TaskList."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @param u Ui."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @param s Storage."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public abstract String execute(TaskList t, Ui u, Storage s);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Returns whether Task is done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @return boolean representing whether Task is done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public static boolean isExit() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 36
    }
  },
  {
    "path": "src/main/java/seedu/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " * Class for creating Deadline objects."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /** Date representing the deadline details (date and time)*/"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /** Constructor. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public Deadline(String description, Date by) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Returns String that represents the Deadline information to be documented in File."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @return String of Deadline information."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public String getFullDescription() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return description + \" . \" + by.getTime();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Returns String representing type of Task object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @return String representing Deadline type."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Establishes String representation of object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @return String representing the object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd MMMMM yyyy hh:mm a\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        String date \u003d formatter.format(by);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 47
    }
  },
  {
    "path": "src/main/java/seedu/duke/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " * Handles deleting tasks from the TaskList."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /** An integer representing the position of the task in the TaskList to delete.*/"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    protected static int delete;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /** Constructor. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public DeleteCommand(int d) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        delete \u003d d;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        type \u003d \"delete\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Deletes the Task in the corresponding position in the TaskList."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @param t TaskList."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @param u Ui."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @param s Storage."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public String execute(TaskList t, Ui u, Storage s) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Task task \u003d t.list.get(delete);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        t.list.remove(delete);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            s.update(false, \"\", t);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return u.deleteLine(task.toString(), t.list.size());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 36
    }
  },
  {
    "path": "src/main/java/seedu/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 61
    }
  },
  {
    "path": "src/main/java/seedu/duke/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " * Handles marking tasks in the TaskList as done."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /** An integer representing the position of the task in the TaskList to mark as done.*/"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    protected static int done;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /** Constructor.*/"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public DoneCommand(int d) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        done \u003d d;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        type \u003d \"done\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Marks task in the corresponding position in the TaskList as done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @param t TaskList."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @param u Ui."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @param s Storage."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public String execute(TaskList t, Ui u, Storage s) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Task task \u003d t.list.get(done);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        task.done();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            s.update(false, \"\", t);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            u.showError(e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            return u.doneLine(task.toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 37
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " * The main class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    private static TaskList tasks;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    private static boolean isExit;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /** Constructor.*/"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public Duke(String filepath) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * While user has yet to input the exit command, each user-inputted command is parsed and executed."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        ui.intro();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Runs process."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        //Step 1. Formatting the window to look as expected."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        });"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        });"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        });"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        });"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        String userText \u003d userInput.getText();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        String dukeText \u003d getResponse(userInput.getText());"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                DialogBox.getUserDialog(userText, user),"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, duke)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        );"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            return c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 184,
      "-": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " * Custom exception class handling exceptions unique to Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /** Constructor.*/"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " * Class for creating Event objects."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /** Date representing the Event details (date and time)*/"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /** Constructor.*/"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public Event(String description, Date at) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Returns String that represents the Event information to be documented in File."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @return String of Event information."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public String getFullDescription() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return description + \" . \" + at.getTime();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Returns String representing type of Task object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @return String representing Event type."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Establishes String representation of object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @return String representing the object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd MMMMM yyyy hh:mm a\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        String date \u003d formatter.format(at);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 47
    }
  },
  {
    "path": "src/main/java/seedu/duke/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " * Handles exiting the application by setting isExit as true."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "public class ExitCommand extends Command{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /** Constructor.*/"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        type \u003d \"exit\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Prints the exit greeting."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @param t TaskList."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @param u Ui."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @param s Storage."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public String execute(TaskList t, Ui u, Storage s) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return u.exitLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 26
    }
  },
  {
    "path": "src/main/java/seedu/duke/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    protected static String toFind;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public FindCommand(String str) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        toFind \u003d str;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public String execute(TaskList t, Ui u, Storage s) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        for (Task task: t.list) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            String title \u003d task.description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            if (title.contains(toFind)) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                list.add(task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return ui.listMatching(list);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 22
    }
  },
  {
    "path": "src/main/java/seedu/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " * Handles calling for the Ui to list TaskList Tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Calls for Ui to print the TaskList."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @param t TaskList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @param u Ui."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @param s Storage."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public String execute(TaskList t, Ui u, Storage s) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return u.list(t);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 19
    }
  },
  {
    "path": "src/main/java/seedu/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    private Duke duke \u003d new Duke(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 31
    }
  },
  {
    "path": "src/main/java/seedu/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 51
    }
  },
  {
    "path": "src/main/java/seedu/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " * Handles the parsing of user input"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Parses user input and returns a command corresponding to user input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @param str String containing user input."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @return Command corresponding to user input."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @throws DukeException if user input is invalid or does not correspond to any existing command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public static Command parse(String str) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        String full \u003d str;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        String[] arr \u003d full.split(\" \", 2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        String s \u003d arr[0];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Command c \u003d null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        validateInput(full);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        if (s.equals(\"done\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            c \u003d new DoneCommand(Integer.valueOf(arr[1]) - 1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        else if (s.equals(\"delete\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            c \u003d new DeleteCommand(Integer.valueOf(arr[1]) - 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        else if (s.equals(\"todo\") || s.equals(\"deadline\") || s.equals(\"event\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            c \u003d new AddCommand(s, arr[1].trim());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        else if (s.toLowerCase().equals(\"list\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            c \u003d new ListCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        else if (s.equals(\"find\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            c \u003d new FindCommand(arr[1].trim());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            if (s.equals(\"bye\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                c \u003d new ExitCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return c;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Parses user input and detects if it corresponds to existing commands."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @param input String containing user input."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @throws DukeException if user input is invalid."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public static void validateInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        String[] array \u003d input.trim().split(\" \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        String first \u003d array[0];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Boolean task \u003d false;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        if (first.equals(\"todo\") || first.equals(\"deadline\") || first.equals(\"event\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            task \u003d true;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        if (array.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            //if to do, event or deadline are missing a description"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            if (task) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                throw new DukeException(\"The description of a \" + first + \" cannot be empty.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            //if done, delete or find are not followed by a number"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            else if (first.equals(\"done\") || first.equals(\"delete\") || first.equals(\"find\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                throw new DukeException(\"Please specify a task.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            //if it is not a single-worded valid input"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            else if (!first.equals(\"bye\") \u0026\u0026 !first.equals(\"list\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            //if it is an invalid input containing multiple words"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            if (!task \u0026\u0026 !first.equals(\"done\") \u0026\u0026 !first.equals(\"delete\") \u0026\u0026 !first.equals(\"find\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            //if event or deadline do not have details"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            else if ((first.equals(\"event\") \u0026\u0026 !input.contains(\"/at\")) ||"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                    (first.equals(\"deadline\") \u0026\u0026 !input.contains(\"/by\"))) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                throw new DukeException(\"The details of a \" + first + \" cannot be missing.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 95
    }
  },
  {
    "path": "src/main/java/seedu/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " * Handles the storage of Task information in Files."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /** String representing the filepath for storage.*/"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    protected static String filepath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /** Constructor.*/"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Loads Tasks into the TaskList using information from Files upon starting the application."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @return ArrayList to be used to create a new TaskList."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @throws FileNotFoundException if File is not found."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public static ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        ArrayList\u003cTask\u003e arrlist \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            findFile();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            Ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            File f \u003d new File(filepath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                String full \u003d sc.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                String[] arr \u003d full.split(\" . \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                Task t;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                String type \u003d arr[0];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                int done \u003d Integer.parseInt(arr[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                    t \u003d new ToDo(arr[2]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                    long time \u003d Long.parseLong(arr[3]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                    Date date \u003d new Date(time);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                    if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                        t \u003d new Deadline(arr[2], date);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                        t \u003d new Event(arr[2], date);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                if (done \u003d\u003d 1) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                    t.done();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                arrlist.add(t);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            return arrlist;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Creates a File if the File does not exist."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public static void findFile() throws IOException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        File f \u003d new File(filepath);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        f.getParentFile().mkdir();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        f.createNewFile();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Updates and stores information into the Files when TaskList changes or gains new information."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @param append Boolean representing if File can be appended, or must be overwritten."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @param str If appending, it is a String containing the information to be appended."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @param t TaskList."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public static void update(boolean append, String str, TaskList t) throws IOException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        FileWriter fw;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        if (!append) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            fw \u003d new FileWriter(filepath);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            String tasks \u003d \"\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            for (Task task : t.list) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                int done \u003d task.isDone ? 1 : 0;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                tasks +\u003d task.getType() + \" . \" + done + \" . \" + task.getFullDescription() + \"\\n\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            fw.write(tasks);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            fw \u003d new FileWriter(filepath, true);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            fw.append(str);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 97
    }
  },
  {
    "path": "src/main/java/seedu/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " * Base class used for Task objects."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /** String representing the description of the Task.*/"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /** Boolean representing whether the task has been done.*/"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /** Constructor.*/"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Returns Task description."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @return Task description."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public String getFullDescription() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Base method for returning Task type."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @return null Task type."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return \"null\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Returns String representing done status of Task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @return String representing done status of Task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Sets isDone to true."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public void done() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Establishes String representation of object."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @return String representing the object."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 57
    }
  },
  {
    "path": "src/main/java/seedu/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " * Class for storing Tasks in an ArrayList."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    protected static ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /** Constructor for blank TaskList.*/"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**Constructor for TaskList using existing ArrayList of Tasks.*/"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e l) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        this.list \u003d l;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 20
    }
  },
  {
    "path": "src/main/java/seedu/duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " * Class for creating Task objects representing things to be done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /** Constructor.*/"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Returns String representing type of Task object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @return String representing type of Task representing things to be done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Establishes String representation of object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @return String representing the object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 30
    }
  },
  {
    "path": "src/main/java/seedu/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " * Handles the user interface."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /** Scanner for parsing user input.*/"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    protected static Scanner sc;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /** String of a line for formatting.*/"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    private static String line \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /** Constructor.*/"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Prints the intro when starting the application."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public static void intro() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        System.out.println(format(logo + \"\\n Hello! I\u0027m Duke\\n What can I do for you?\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Handles the formatting when required."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @param s String of content to be printed."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @return formatted String."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public static String format(String s) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return line + \"\\n \" + s + \"\\n\" + line;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Prints the line for formatting."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public static void showLine() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Prints error message."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @param str String containing error message."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public static void showError(String str) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        System.out.println(format(str));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Reads user input."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @return String containing user input."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public static String readCommand() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Prints message if there is a problem with loading."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public static void showLoadingError() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        System.out.println(format(\"There seems to be a problem with loading\"));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Prints message when marking a task as done."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @param str String representing Task done."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public static String doneLine(String str) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        String message \u003d \"Nice! I\u0027ve marked this task as done:\\n \" + str;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Prints message when deleting a task."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @param str String representing Task deleted."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @param size integer representing the current size of the TaskList."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public static String deleteLine(String str, int size) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        String result \u003d \"Noted. I\u0027ve removed this task: \\n   \" + str + \"\\n Now you have \" +"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        size + \" tasks in the list.\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Prints message when adding a task."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @param str String representing Task added."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @param size integer representing the current size of the TaskList."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public static String addLine(String str, int size) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        String message \u003d \"Got it. I\u0027ve added this task:\\n \" + str +"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                \"\\nNow you have \" + size + \" tasks in the list.\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Prints exit message."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public static String exitLine() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        String message \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * Prints the list of all Tasks in the TaskList."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @param tl Current TaskList."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public static String list(TaskList tl) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        if (tl.list.size() !\u003d 0) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            message +\u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d tl.list.size(); i++) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                message +\u003d \" \" + i + \". \" + tl.list.get(i - 1).toString() + \"\\n\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            message \u003d \"You have no tasks in your list.\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public static String listMatching(ArrayList\u003cTask\u003e tl) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        if (tl.size() !\u003d 0) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            result +\u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d tl.size(); i++) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                result +\u003d \" \" + i + \". \" + tl.get(i - 1).toString() + \"\\n\";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            result \u003d \"You have no matching tasks in your list.\";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 144
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"seedu.duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 19
    }
  },
  {
    "path": "src/test/java/seedu/duke/AddCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.util.GregorianCalendar;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "public class AddCommandTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public void test1() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Date date \u003d new GregorianCalendar(2019, 2, 3, 1, 0).getTime();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Event event \u003d new Event(\"CS2103T project\", date);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        TaskList tl \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        list.add(event);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        TaskList other \u003d new TaskList(list);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Command c \u003d new AddCommand(\"event\", \"CS2103T project /at 3/3/2019 0100\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        c.execute(tl, new Ui(), new Storage(\"\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        assertEquals(other.list.get(0).toString(), tl.list.get(0).toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 24
    }
  },
  {
    "path": "src/test/java/seedu/duke/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.util.GregorianCalendar;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public void test1() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Date date \u003d new GregorianCalendar(2019, 7, 28, 23, 59).getTime();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"CS2103T project\", date);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        assertEquals(\"CS2103T project\", deadline.description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public void test2() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Date date \u003d new GregorianCalendar(2019, 7, 28, 23, 59).getTime();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"CS2103T project\", date);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        String expected \u003d \"[D][\\u2718] CS2103T project (by: 28 August 2019 11:59 PM)\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        assertEquals(expected, deadline.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public void test3() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Date date \u003d new GregorianCalendar(2019, 7, 28, 23, 59).getTime();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"CS2103T project\", date);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        String dateString \u003d date.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        assertEquals(dateString, deadline.by.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 33
    }
  },
  {
    "path": "src/test/java/seedu/duke/DeleteCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.util.GregorianCalendar;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "public class DeleteCommandTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public void test1() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Date date \u003d new GregorianCalendar(2019, 2, 3, 1, 0).getTime();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Event event \u003d new Event(\"CS2103T project\", date);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        String expected \u003d \"[E][\\u2718] CS2103T project (at: 03 March 2019 01:00 AM)\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        list.add(event);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        TaskList tl \u003d new TaskList(list);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        assertEquals(expected, tl.list.get(0).toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public void test2() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Date date \u003d new GregorianCalendar(2019, 2, 3, 1, 0).getTime();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Event event \u003d new Event(\"CS2103T project\", date);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        list.add(event);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        TaskList tl \u003d new TaskList(list);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Command c \u003d new DeleteCommand(0);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        c.execute(tl, new Ui(), new Storage(\"\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        assertEquals(0, tl.list.size());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public void test3() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Date date \u003d new GregorianCalendar(2019, 2, 3, 1, 0).getTime();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Event event \u003d new Event(\"CS2103T project\", date);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        list.add(event);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        list.add(new ToDo(\"one\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        list.add(new ToDo(\"two\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        list.add(new ToDo(\"three\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        TaskList tl \u003d new TaskList(list);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Command c \u003d new DeleteCommand(0);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        c.execute(tl, new Ui(), new Storage(\"\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        assertEquals(3, tl.list.size());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 49
    }
  },
  {
    "path": "src/test/java/seedu/duke/DoneCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.util.GregorianCalendar;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "public class DoneCommandTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public void test1() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Date date \u003d new GregorianCalendar(2019, 7, 28, 23, 59).getTime();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Event event \u003d new Event(\"CS2103T project\", date);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        event.done();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        String expected \u003d \"[E][\\u2713] CS2103T project (at: 28 August 2019 11:59 PM)\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        assertEquals(expected, event.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public void test2() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Date date \u003d new GregorianCalendar(2019, 2, 3, 1, 0).getTime();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Event event \u003d new Event(\"CS2103T project\", date);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        String expected \u003d \"[E][\\u2718] CS2103T project (at: 03 March 2019 01:00 AM)\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        assertEquals(expected, event.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public void test3() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Date date \u003d new GregorianCalendar(2019, 2, 3, 1, 0).getTime();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Event event \u003d new Event(\"CS2103T project\", date);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        String expected \u003d \"[E][\\u2713] CS2103T project (at: 03 March 2019 01:00 AM)\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        list.add(event);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        TaskList tl \u003d new TaskList(list);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Command c \u003d new DoneCommand(0);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        c.execute(tl, new Ui(), new Storage(\"\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        assertEquals(expected, tl.list.get(0).toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 41
    }
  },
  {
    "path": "src/test/java/seedu/duke/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.util.GregorianCalendar;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public void test1() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Date date \u003d new GregorianCalendar(2019, 7, 28, 23, 59).getTime();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Event event \u003d new Event(\"CS2103T project\", date);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        assertEquals(\"CS2103T project\", event.description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public void test2() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Date date \u003d new GregorianCalendar(2019, 7, 28, 23, 59).getTime();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Event event \u003d new Event(\"CS2103T project\", date);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        String expected \u003d \"[E][\\u2718] CS2103T project (at: 28 August 2019 11:59 PM)\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        assertEquals(expected, event.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public void test3() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Date date \u003d new GregorianCalendar(2019, 7, 28, 23, 59).getTime();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Event Event \u003d new Event(\"CS2103T project\", date);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        String dateString \u003d date.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        assertEquals(dateString, Event.at.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 33
    }
  },
  {
    "path": "src/test/java/seedu/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public void test1() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            Command actual \u003d Parser.parse(\"done 1\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            assertEquals(\"done\", actual.type);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        } catch (DukeException d) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            System.out.println(\"Something went wrong\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public void test2() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            Command actual \u003d Parser.parse(\"delete 1\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            assertEquals(\"delete\", actual.type);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        } catch (DukeException d) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            System.out.println(\"Something went wrong\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public void test3() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            Command actual \u003d Parser.parse(\"todo whatever\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            assertEquals(\"add\", actual.type);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        } catch (DukeException d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            System.out.println(\"Something went wrong\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public void test4() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            Command actual \u003d Parser.parse(\"bye\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            assertEquals(\"exit\", actual.type);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        } catch (DukeException d) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            System.out.println(\"Something went wrong\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 47
    }
  },
  {
    "path": "src/test/java/seedu/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.util.GregorianCalendar;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public void test1() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        ToDo thing \u003d new ToDo(\"make lunch\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        list.add(thing);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        TaskList tasklist \u003d new TaskList(list);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        assertEquals(thing, tasklist.list.get(0));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public void test2() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        TaskList tasklist \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        assertEquals(list, tasklist.list);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public void test3() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        list.add(new ToDo(\"one\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        list.add(new ToDo(\"two\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        list.add(new ToDo(\"three\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        list.add(new ToDo(\"four\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        TaskList taskList \u003d new TaskList(list);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        assertEquals(4, taskList.list.size());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public void test4() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Date date \u003d new GregorianCalendar(2019, 8, 30, 16, 0).getTime();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Event event \u003d new Event(\"CS2103T lecture\", date);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        list.add(event);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        TaskList tasklist \u003d new TaskList(list);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        assertEquals(event, tasklist.list.get(0));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public void test5() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Date date \u003d new GregorianCalendar(2019, 8, 28, 23, 59).getTime();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"CS2103T project\", date);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        list.add(deadline);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        TaskList tasklist \u003d new TaskList(list);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        assertEquals(deadline, tasklist.list.get(0));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 58
    }
  },
  {
    "path": "src/test/java/seedu/duke/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public void test1() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        ToDo thing \u003d new ToDo(\"many many things\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        assertEquals(\"many many things\", thing.description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public void test2() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        ToDo thing \u003d new ToDo(\"1234567890!@#$%^\u0026*()qwertyuiop\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        assertEquals(\"1234567890!@#$%^\u0026*()qwertyuiop\", thing.description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 19
    }
  }
]
