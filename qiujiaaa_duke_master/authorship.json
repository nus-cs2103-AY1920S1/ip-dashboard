[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    mainClassName \u003d \"duke.ui.Launcher\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "run {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 26,
      "-": 13
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "T 1 lecture "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "T 1 ip project"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "T 0 homework"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "D 0 work | 10th of Oct 2019, 11.59pm"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 4
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Constructor. Creates Ui, Storage and TaskList object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * If the file does not exist, an error will be shown."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param filePath Directory to the data file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        storage \u003d new Storage(filePath, ui);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Returns the welcome message and gets Ui to show the current tasks in the list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String getWelcomeMessage() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return ui.showWelcome(taskList.getTasks());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param input User\u0027s input."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            response \u003d c.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            storage.updateData(taskList.getTasks());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            response \u003d e.getMessage();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 60,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.ui.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    private Duke duke \u003d new Duke(\"data/duke.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().showWelcomeMessage();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 33
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    String command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Constructor to create an AddCommand object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param command User\u0027s command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public AddCommand(String command) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Get the TaskList object to add the task into the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param taskList TaskList object containing the current tasks list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param ui The Ui object we are currently using."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param storage The Storage object we are currently using."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            response \u003d taskList.addTask(command, ui);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            response \u003d e.getMessage();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Checks if the command is an ExitCommand."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 52
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Execute the corresponding commands."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param taskList TaskList object containing the current tasks list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param ui The Ui object we are currently using."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param storage The Storage object we are currently using."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public abstract String execute(TaskList taskList, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Checks if the command is an ExitCommand."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return True if it is an ExitCommand, false if otherwise."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 27
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    String command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Constructor to create an DeleteCommand object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param command User\u0027s command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public DeleteCommand(String command) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Get the TaskList object to delete the task in the list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param taskList TaskList object containing the current tasks list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param ui The Ui object we are currently using."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param storage The Storage object we are currently using."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            response \u003d taskList.deleteTask(command, ui);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            response \u003d e.getMessage();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Checks if the command is an ExitCommand."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 51
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    String command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Constructor to create an DoneCommand object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param command User\u0027s command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public DoneCommand(String command) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Get the TaskList object to mark the task in the list as done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param taskList TaskList object containing the current tasks list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param ui The Ui object we are currently using."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param storage The Storage object we are currently using."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            response \u003d taskList.doneTask(command, ui);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            response \u003d e.getMessage();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Checks if the command is an ExitCommand."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 51
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Exit the chatbot. Get Ui to show the exit message."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param taskList TaskList object containing the current tasks list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param ui The Ui object we are currently using."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param storage The Storage object we are currently using."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return ui.showExit();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Checks if the command is an ExitCommand."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return True."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 32
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    String keyword;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Constructor to create a FindCommand object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param keyword The user\u0027s search keyword."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Get Ui to print the matching tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param taskList The TaskList object containing the list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param ui The Ui object we are currently using."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param storage The Storage object we are currently using."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return ui.printMatchingTasks(taskList.getTasks(), keyword);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Check if it is a ExitCommand object."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 43
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Get the TaskList object to list out all the tasks in the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param taskList TaskList object containing the current tasks list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param ui The Ui object we are currently using."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param storage The Storage object we are currently using."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return ui.printTasks(taskList.getTasks());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Checks if the command is an ExitCommand."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 32
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class DukeException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    String message;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Constructor to create a DukeException object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param message The error message for this exception."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Gets the error message."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return The error message of the exception."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 26
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Parses the user\u0027s commands."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param command User\u0027s command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return Command object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @throws DukeException If the input cannot be recognised."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public static Command parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        if (command.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } else if (command.equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } else if (command.length() \u003e\u003d 4 \u0026\u0026 command.substring(0, 4).equalsIgnoreCase(\"done\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            return new DoneCommand(command);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } else if (command.length() \u003e\u003d 6 \u0026\u0026 command.substring(0, 6).equalsIgnoreCase(\"delete\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            return new DeleteCommand(command);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } else if (command.length() \u003e\u003d 4 \u0026\u0026 command.substring(0, 4).equalsIgnoreCase(\"find\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            return new FindCommand(command);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } else {  // add task or wrong command"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            String[] temp \u003d command.split(\" \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            if (temp[0].equalsIgnoreCase(\"deadline\")"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    || temp[0].equalsIgnoreCase(\"event\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    || temp[0].equalsIgnoreCase(\"todo\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                return new AddCommand(command);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 44
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    Ui ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Constructor to create a Storage object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param filePath The directory of our database."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param ui The Ui object we are currently using."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public Storage(String filePath, Ui ui) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Gets the current task list in the database if any."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return Returns a list of tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public List\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        List\u003cTask\u003e list \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            // read existing tasks into the list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                String description \u003d line.substring(4);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                if (line.substring(0, 1).equals(\"T\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    task \u003d new Todo(description);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    String[] temp \u003d description.split(\" \\\\| \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    if (line.substring(0, 1).equals(\"D\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                        task \u003d new Deadline(temp[0], temp[1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                        task \u003d new Event(temp[0], temp[1]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                if (line.substring(2, 3).equals(\"1\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                list.add(task);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            ui.showError(\"Data file does not exist.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Updates the database."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param list The most updated list of tasks."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void updateData(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            for (Task task: list) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                if (task instanceof Todo) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    sb.append(\"T \");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    sb.append(\"D \");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    sb.append(\"E \");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                if (task.isCompleted()) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    sb.append(\"1 \");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    sb.append(\"0 \");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                sb.append(task.getDescription());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                fw.write(sb.toString() + \"\\n\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            ui.showError(\"Data file does not exist.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 109
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    protected int date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    protected int month;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    protected int year;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    protected int time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Constructor to create the Deadline object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param description The task description."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param by The date and time it is due."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @throws DukeException If the input format is incorrect."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            date \u003d Integer.valueOf(by.substring(0, 2));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            month \u003d Integer.valueOf(by.substring(3, 5));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            year \u003d Integer.valueOf(by.substring(6, 10));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            String[] temp \u003d by.split(\" \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            time \u003d Integer.valueOf(temp[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            this.by \u003d formatDateAndTime(year, month, date, time);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw new DukeException(\"OOPS!!! Wrong input format. \\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    + \"\\\"Deadline \u003cdescription\u003e /by \u003cDD/MM/YYYY\u003e \u003cXX:XX\u003e\\\"\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw new DukeException(\"OOPS!!! Wrong input format. \\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    + \"\\\"Deadline \u003cdescription\u003e /by \u003cDD/MM/YYYY\u003e \u003cXX:XX\u003e\\\"\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Gets the description of the Deadline task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return The description of the Deadline task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return super.description + \" | \" + by;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * The proper representation of the task, with [D], icon and description."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return The output representation of the Deadline task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 62
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    int date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    int month;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    int year;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    int time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Constructor to create the Event object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param description The task description."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param at The date and time it is due."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @throws DukeException If the input format is incorrect."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            date \u003d Integer.valueOf(at.substring(0, 2));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            month \u003d Integer.valueOf(at.substring(3, 5));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            year \u003d Integer.valueOf(at.substring(6, 10));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            String[] temp \u003d at.split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            time \u003d Integer.valueOf(temp[1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            this.at \u003d formatDateAndTime(year, month, date, time);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw new DukeException(\"OOPS!!! Wrong input format.\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    + \"\\\"Event \u003cdescription\u003e /at \u003cDD/MM/YYYY\u003e \u003cXX:XX\u003e\\\"\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw new DukeException(\"OOPS!!! Wrong input format.\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    + \"\\\"Event \u003cdescription\u003e /at \u003cDD/MM/YYYY\u003e \u003cXX:XX\u003e\\\"\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Gets the description of the Event task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return The description of the Event task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return super.description + \" | \" + at;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * The proper representation of the task, with [E], icon and description."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return The output representation of the Event task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 60
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Constructor to create a Task object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param description The task description."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Gets the tick / cross icon for the status."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return The current status icon of the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Mark the task as done."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Gets the current completion status of the task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return True if done, false if the task is yet to be completed."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public boolean isCompleted() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Gets the description of the task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return The description of the task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Format the date and time."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param year Year."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param month Month."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param date Date."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param time Time."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return The correct date and time format."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String formatDateAndTime(int year, int month, int date, int time) throws DukeException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        if (date \u003e 31 || month \u003e 12 || time \u003e 2400) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw new DukeException(\"OOPS!!! Incorrect date or time.\\n\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        String[] months \u003d {\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\","
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                           \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"};"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        sb.append(date);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        switch (date) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            sb.append(\"st\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            sb.append(\"nd\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            sb.append(\"rd\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            sb.append(\"th\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        sb.append(\" of \" + months[month - 1] + \" \" + year + \", \");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        if (time \u003e\u003d 1200) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            if ((time / 100) \u003d\u003d 12) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                sb.append(\"12.\" + (time % 100) + \"pm\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                sb.append((time / 100 - 12) + \".\" + (time % 100) + \"pm\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            if ((time / 100) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                sb.append(\"12.\" + (time % 100) + \"am\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                sb.append((time / 100) + \".\" + (time % 100) + \"am\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * The proper representation of the task, with Task type, icon and description."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return The output representation of the task."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 110
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Constructor to create a TaskList object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        tasks \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Constructor to create a TaskList object with an existing Task list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param tasks Existing tasks list in the database."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Gets the current tasks list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return The list containing the Task objects."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Adds a Task into the list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param command User\u0027s command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param ui The Ui object we are currently using."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @throws DukeException If the input format is incorrect."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String addTask(String command, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        String[] words \u003d command.split(\" \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        String type \u003d words[0];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            if (type.equalsIgnoreCase(\"todo\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                task \u003d new Todo(command.substring(5));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                int index \u003d command.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                if (type.equalsIgnoreCase(\"deadline\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    task \u003d new Deadline(command.substring(9, index - 1), command.substring(index + 4));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                } else if (type.equalsIgnoreCase(\"event\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    task \u003d new Event(command.substring(6, index - 1), command.substring(index + 4));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    throw new IllegalArgumentException(\"OOPS!!!No such task type.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            return ui.addedTask(task, tasks.size());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw new DukeException(\"OOPS!!! Wrong input format. \\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    + \"\\\"Todo \u003cdescription\u003e\\\" or\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    + \"\\\"Deadline \u003cdescription\u003e /by \u003cDD/MM/YYYY\u003e \u003cXX:XX\u003e\\\" or\\n\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    + \"\\\"Event \u003cdescription\u003e /at \u003cDD/MM/YYYY\u003e \u003cXX:XX\u003e\\\"\\n\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Deletes a Task in the list."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param command User\u0027s command."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param ui The Ui object we are currently using."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @throws DukeException If the input format is incorrect."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String deleteTask(String command, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            String[] done \u003d command.split(\" \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            int number \u003d Integer.valueOf(done[1]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            Task task \u003d tasks.get(number - 1);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            tasks.remove(number - 1);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            return ui.deletedTask(task, tasks.size());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw new DukeException(\"OOPS!!! The task number cannot be empty.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw new DukeException(\"OOPS!!! The task number does not exist.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Marks a Task in the list as done."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param command User\u0027s command."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param ui The Ui object we are currently using."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @throws DukeException If the input format is incorrect or if the task is already done."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String doneTask(String command, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            String[] done \u003d command.split(\" \");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            int number \u003d Integer.valueOf(done[1]);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            if (tasks.get(number - 1).isCompleted()) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                throw new DukeException(\"OOPS!!! The task is already marked as done.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                tasks.get(number - 1).markAsDone();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                return ui.doneTask(tasks, number);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw new DukeException(\"OOPS!!! The task number cannot be empty.\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw new DukeException(\"OOPS!!! The task number does not exist.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 120
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Constructor to create the Todo object."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param description The task description."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * The proper representation of the task, with [T], icon and description."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return The output representation of the Todo task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 23
    }
  },
  {
    "path": "src/main/java/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Get the User Dialog."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param text Text to be shown."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param img Image to be shown."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return The Dialog object."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Get the Duke Dialog."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param text Text to be shown."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param img Image to be shown."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return The Dialog object."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 73
    }
  },
  {
    "path": "src/main/java/duke/ui/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.Main;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 13
    }
  },
  {
    "path": "src/main/java/duke/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Snufkin.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Moomin.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void showWelcomeMessage() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                DialogBox.getDukeDialog(duke.getWelcomeMessage(), dukeImage));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        );"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 58
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    private StringBuilder sb;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Constructor of Ui object. Creates scanner object for the instance."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Reads the user input and returns it."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return The user command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Returns error message."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param error Error message to be reflected to the user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String showError(String error) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return error;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Returns the welcome message and the existing tasks if any."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param tasks The existing task list in the database."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String showWelcome(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        //showLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        sb.append(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            if (!tasks.isEmpty()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                sb.append(printTasks(tasks));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                sb.append(\"There are no tasks in the list right now.\\n\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            sb.append(showError(e.getMessage()));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Returns the exit message."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String showExit() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        sb.append(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Returns the available tasks."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param tasks Current task list to be printed."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @throws DukeException If the current task list is empty."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String printTasks(List\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw new DukeException(\"OOPS!!! The list is empty.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        sb.append(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            sb.append(\"  \" + count + \".\" + task + \"\\n\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Returns the tasks that match the user\u0027s keyword."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param tasks The list of tasks."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param keyword User\u0027s keyword."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @throws DukeException If there are no tasks in the list or no search results."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String printMatchingTasks(List\u003cTask\u003e tasks, String keyword) throws DukeException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            keyword \u003d keyword.substring(4).trim();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            if (keyword.isEmpty()) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                throw new DukeException(\"OOPS!!! Search keyword cannot be empty.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw new DukeException(\"OOPS!!! Search keyword cannot be empty.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw new DukeException(\"OOPS!!! The list is empty.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        sb.append(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                sb.append(\"  \" + count + \".\" + task + \"\\n\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        if (count \u003d\u003d 0) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw new DukeException(\"OOPS!!! There are no matching tasks.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Return error if there is no database."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        sb.append(\"No existing task list available!\\n\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Return the set of sentences after successfully adding a task."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param task The task that was added."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param size The current number of tasks in the list."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String addedTask(Task task, int size) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        sb.append(\"Got it. I\u0027ve added this task: \\n\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        sb.append(\"  \" + task + \"\\n\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        sb.append(\"Now you have \" + size + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Return the set of sentences after successfully deleting a task."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param task The task that was deleted."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param size The current number of tasks in the list."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String deletedTask(Task task, int size) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        sb.append(\"Noted. I\u0027ve removed this task: \\n\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        sb.append(\"  \" + task + \"\\n\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        sb.append(\"Now you have \" + size + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Returns the set of sentences after successfully marking a task as done."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param tasks The task that was marked as done."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param number The index of the task in the list."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String doneTask(List\u003cTask\u003e tasks, int number) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        sb.append(\"Nice! I\u0027ve marked this task as done: \\n\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        sb.append(\"  \" + tasks.get(number - 1) + \"\\n\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Prints the horizontal line."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 180
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 19
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void test_parse_bye() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        Command bye \u003d Parser.parse(\"BYE\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        assertEquals(true, bye instanceof ExitCommand);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void test_parse_add() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        Command add \u003d Parser.parse(\"deadLINE\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        assertEquals(true, add instanceof AddCommand);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void test_parse_delete() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        Command bye \u003d Parser.parse(\"deLetE\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        assertEquals(true, bye instanceof DeleteCommand);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void test_parse_list() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        Command bye \u003d Parser.parse(\"LIst\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        assertEquals(true, bye instanceof ListCommand);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void test_parse_error() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            Command bye \u003d Parser.parse(\"LALALA\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            assertEquals(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", e.getMessage());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 49
    }
  },
  {
    "path": "src/test/java/duke/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void test_markAsDone() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        Todo todo \u003d new Todo(\"do work\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        todo.markAsDone();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        assertEquals(true, todo.isCompleted());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void test_getDescription() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        Todo todo \u003d new Todo(\"do work\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        assertEquals(\"do work\", todo.getDescription());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 23
    }
  },
  {
    "path": "tutorials/javaFxTutorialPart3.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# JavaFX Tutorial 3 – Interacting with the user"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Picking up from where we left off last tutorial, we have successfully achieved the desired layout. Now let’s make the application respond to user input. "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Rather than to do everything in one try, let’s iterate and build up towards our final goal. "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "## Iteration 1 – Echoing the User"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "JavaFX has an _event-driven architecture style_. As such, we programmatically define _handler_ methods to execute as a response to certain _events_. When an event is detected, JavaFX will call the respective handlers."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "For Duke, there are two events that we want to respond to, namely the user pressing `Enter` in the `TextField` and left-clicking the `Button`. These are the `onAction` event for the `TextField` and the `onMouseClicked` event for the `Button`."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "For now, let’s have the application add a new `Label` with the text from the `TextField`. Update the `Main` class as follows. You\u0027ll need to add an `import javafx.scene.control.Label;` too."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "@Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public void start(Stage stage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    // Step 1 code here"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    //Step 2 code here"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": " * Iteration 1:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": " * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": " * @param text String containing text to add"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": " * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    return textToAdd;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "Run the program and give it a whirl!"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "![Echo not scrolling as intended](assets/EchoNotScrolling.png)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "At first glance everything appears to work perfectly. However, when the `VBox` stretches beyond the confines of the `ScrollPane`, the `ScrollPane` does not scroll down automatically as expected. We can remedy this by attaching a handler on the `VBox` to react to its own size changing and scrolling the `ScrollPane` down."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "Update the `start` method as shown below."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "public void start(Stage stage) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    // current code ..."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "Verify that the `ScrollPane` scrolls as intended."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "## Iteration 2 – Adding Dialog Boxes"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "In the mockup of the UI, notice that the dialog boxes are composed of two different controls (`ImageView` and `Label`) and reused multiple times. In situations like this, it is often beneficial to create our own custom control."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "Let’s create our custom control `DialogBox`:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "We use the code in our main class just like any other control. Here are the steps to update the code to use the custom control in `Main.java`."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "First, add these imports:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "Next, add two images to the `main/resources/images` folder."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "For this tutorial, we have two images `DaUser.png` and `DaDuke.png` to represent the user avatar and Duke\u0027s avatar respectively but you can use any image you want."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "Image|Filename"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "---|---"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "![DaDuke](../src/main/resources/images/DaUser.png) | `DaUser.png`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "![DaUser](../src/main/resources/images/DaDuke.png) | `DaDuke.png`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    // ..."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    // ..."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "Add a new method to handle user input:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": " * Iteration 2:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": " * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": " * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "private void handleUserInput() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            new DialogBox(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            new DialogBox(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    userInput.clear();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": " * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": " * Replace this stub with your completed method."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "private String getResponse(String input) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    return \"Duke heard: \" + input;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "Update the event handler code in the `start` method to use the new `handleUserInput` method:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "@Override"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "public void start(Stage stage) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        handleUserInput();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        handleUserInput();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "Run the program and see how it works."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "![DialogBoxes Iteration 2](assets/DialogBoxesIteration2.png) "
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "## Iteration 3 – Adding custom behavior to DialogBox"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "One additional benefit of defining a custom control is that we can add behavior specific to our `DialogBox`. Let’s add a method to flip a dialog box such that the image on the left to differentiate between user input and Duke’s output."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": " * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "private void flip() {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    db.flip();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    return db;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "You\u0027ll need to update the imports as follows:"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "Now, we can go back to the `Main` class and change the event handler to use our new `DialogBox`. "
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "private void handleUserInput() {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "    userInput.clear();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "Run the application and play around with it. "
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "![DialogBoxes Iteration 3](assets/DialogBoxesIteration3.png)"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "Congratulations! "
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "You have successfully implemented a fully functional GUI for Duke!  "
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "## Exercises"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "1. While the GUI looks similar to the mockup, there are still parts that need to be refined. Try your hand at some of these tasks:"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "   * Add padding between each DialogBox"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "   * Add padding between each ImageView and its Label"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "   * Clip the ImageView into a circle"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "   * Add background color to each dialog box"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "1. After attempting the changes, reflect critically on the following:"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "   * What was the development workflow like?"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "   * Is the code base well-organized?"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 2,
      "-": 241
    }
  }
]
