[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        super(description.trim());"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        super.tag \u003d \"[D]\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        super.information \u003d \"(by: \" + by.trim() + \")\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShuTingY": 8
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        Listing list \u003d new Listing();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        Message.greeting();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                String[] msg \u003d sc.nextLine().trim().split(\" \", 2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                if (msg[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                    Message.leavingMsg();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                } else if (msg[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                    list.listing(msg);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                } else if (msg[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                    list.mark(msg);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                } else if (msg[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                    list.addTodo(msg);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                } else if (msg[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                    list.addDeadline(msg);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                } else if (msg[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                    list.addEvent(msg);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                } else if (msg[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                    list.delete(msg);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                    list.invalidInput();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "            }catch (DukeException ex) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShuTingY": 31,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    public DukeException(String message)  {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShuTingY": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        super(description.trim());"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        super.tag \u003d \"[E]\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        super.information \u003d \"(at: \" + at.trim() + \")\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShuTingY": 7
    }
  },
  {
    "path": "src/main/java/Listing.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "public class Listing {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    public Listing() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    public void add(String msg) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        Task task \u003d new Task(msg);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        System.out.println(String.format(\"added: %s\", msg));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    // msg[0] \u003d event, msg[1] \u003d description"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    // throw exception when"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    // the description is empty"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    public void addTodo(String[] msg) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        if(msg.length \u003d\u003d 2 \u0026\u0026 !msg[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "            Task task \u003d new Todo(msg[1]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "            list.add(task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "            System.out.println(String.format("
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                \"Got it. I\\\u0027ve added this task:\\n  \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                + task + \"\\nNow you have %s tasks in the list\", Task.getNoOfTask()));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        }else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "            throw new DukeException(\"\\u1F65 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    // msg[0] \u003d event, msg[1] \u003d description"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    // throw exception when"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    // 1. description is empty"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    // 2. timeDate leaved empty"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    public void addDeadline(String[] msg) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        if(msg.length \u003e 1) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "            String[] msgs \u003d msg[1].split(\"/by\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "            //check is the description correct."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "            if(msgs.length \u003d\u003d 2 \u0026\u0026 !msgs[1].equals(\" \") \u0026\u0026 !msgs[0].equals(\"\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                Task task \u003d new Deadline(msgs[0], msgs[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                list.add(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                System.out.println(String.format("
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                        \"Got it. I\\\u0027ve added this task:\\n  \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                        + task + \"\\nNow you have %s tasks in the list\", Task.getNoOfTask()));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "            }else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                throw new DukeException(\"\\u1F65 OOPS!!! The format of the description of a deadline is wrong\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        }else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "            throw new DukeException(\"\\u1F65 OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    //msg[0] \u003d event, msg[1] \u003d description"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    //throw exception when"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    // throw exception when"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    //    // 1. description is empty"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    //    // 2. timeDate leaved empty"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    public void addEvent (String[] msg) throws DukeException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        if(msg.length \u003e 1) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "            String[] msgs \u003d msg[1].split(\"/at\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "            if(msgs.length \u003d\u003d 2 \u0026\u0026 !msgs[1].equals(\" \") \u0026\u0026 !msgs[0].equals(\"\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                Task task \u003d new Event(msgs[0], msgs[1]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                list.add(task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                System.out.println(String.format("
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                        \"Got it. I\\\u0027ve added this task:\\n  \""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                                + task + \"\\nNow you have %s tasks in the list\", Task.getNoOfTask()));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "            }else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                throw new DukeException(\"\\u1F65 OOPS!! The format of the description of a deadline is wrong.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        }else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "            throw new DukeException(\"\\u1F65 OOPS!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    //when the input is invalid"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    public void invalidInput() throws DukeException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        throw new DukeException(\"\\u1F65 OOPS!! I\\\u0027m sorry, but I don\\\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    //msg[0] \u003d done msg[1] \u003d integer"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    //throw exception when msg[1] is not an num"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    //throw exception when msg[1] is out of list range"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    //throw exception when the format is wrong"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    public void mark(String[] msg) throws  DukeException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        if(msg.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                int index \u003d Integer.parseInt(msg[1].trim());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                if(index \u003e list.size()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                    throw new DukeException(\"\\u1F65 OOPS! the Number you\\\u0027ve key in is to big\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                } else if (index \u003c 1) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                    throw new DukeException(\"OOPS!! The number should be larger than 0\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                    Task tk \u003d list.get(index - 1);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                    tk.markAsDone();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                    System.out.println("
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                            String.format(\"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                                    + \"  \" + tk));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "            } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                throw new DukeException(\"\\u1F65 OOPS! Invalid number as input\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "            throw new DukeException(\"\\u1F65 OOPS!! The format of the input is wrong\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    //msg should only contain \"list\" and no other things"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    public void listing(String[] msg) throws DukeException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        if(msg.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "            for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                Task tk \u003d list.get(i);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                System.out.println(i + 1 + \".\" + tk);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "            throw new DukeException(\"\\u1F65 OOPS!! I\\\u0027m sorry, but I don\\\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    //msg[0] \u003d delete msg[1] \u003d integer"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    //throw exception when msg[1] is not an num"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    //throw exception when msg[1] is out of list range"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    //throw exception when the format is wrong"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    public void delete(String[] msg) throws DukeException {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        if(msg.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                int index \u003d Integer.parseInt(msg[1].trim());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                if(index \u003e list.size()) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                    throw new DukeException(\"\\u1F65 OOPS! the Number you\\\u0027ve key in is to big\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                } else if (index \u003c 1) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                    throw new DukeException(\"OOPS!! The number should be larger than 0\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                    Task tk \u003d list.get(index - 1);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                    list.remove(index - 1);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                    Task.reduceByOne();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                    System.out.println(String.format("
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                            \"Noted. I\\\u0027ve removed this task: \\n  \""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                                    + tk + \"\\nNow you have %d tasks in the list.\", Task.noOfTask));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "            } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                throw new DukeException(\"\\u1F65 OOPS! Invalid number as input\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "            throw new DukeException(\"\\u1F65 OOPS!! The format of the input is wrong\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShuTingY": 148
    }
  },
  {
    "path": "src/main/java/Message.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "public class Message {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    public static void greeting() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        System.out.println(\"Hello! I\\\u0027m Duke\\n\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                + \"What can I do for you?\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    public static void echo(String msg) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    public static void leavingMsg() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShuTingY": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    protected  String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    protected String tag \u003d \"\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    protected String information \u003d \"\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    protected static int noOfTask \u003d 0;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        noOfTask++;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    public static int getNoOfTask() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        return noOfTask;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    public static void reduceByOne() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        noOfTask--;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "            return tag + \"[\" + getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "                    + description + information;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShuTingY": 40
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        super(description.trim());"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "        super.tag \u003d \"[T]\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShuTingY"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShuTingY": 6
    }
  }
]
