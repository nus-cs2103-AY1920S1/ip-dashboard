[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "run {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    standardInput \u003d System.in;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "test {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "lyskevin": 38,
      "-": 14
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.commands.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * Implements the Duke chat bot."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * @author Lim Yong Shen, Kevin"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static final String DATA_FILE_PATH \u003d \"src/main/java/duke/data/tasks.txt\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private TextUi ui;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Constructs a new Duke chat bot with the specified data file name."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param fileName The specified data file name."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private Duke(String fileName) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        ui \u003d new TextUi();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        storage \u003d new Storage(fileName);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            tasks \u003d storage.load();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Constructs a Duke instance (used for the Launcher class)."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Processes the specified input and returns the appropriate message."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param input The specified input."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return The appropriate message."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private String processInput(String input) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        Command command \u003d getCommand(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        assert tasks !\u003d null;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        command.setTaskListToExecuteOn(tasks);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        CommandResult commandResult \u003d command.execute();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return commandResult.getMessage();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Parses the specified input and returns the appropriate command."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param input The specified input."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return The appropriate command."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private Command getCommand(String input) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return Parser.parse(input);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Returns Duke\u0027s response based on the specified input."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param input The specified input."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return Duke\u0027s response based on the specified input."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public String execute(String input) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return new Duke(DATA_FILE_PATH).processInput(input);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyskevin": 87
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * @author Lim Yong Shen, Kevin"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyskevin": 13
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.ui.MainWindow;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyskevin": 34
    }
  },
  {
    "path": "src/main/java/duke/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * Provides a framework for commands to be built upon,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * specifically those that add to the list of tasks."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * @author Lim Yong Shen, Kevin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "public abstract class AddCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    protected static final String SUCCESS_MESSAGE \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            + \"%s\\nNow you have %d task(s) in the list.\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyskevin": 13
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * Provides a framework for commands to be built upon."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * @author Lim Yong Shen, Kevin"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    protected TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Executes this command and returns its command result."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return This command\u0027s command result."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public abstract CommandResult execute();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Returns true if this command is an exit command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return true if this command is an exit command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Sets this command to execute on the specified task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param tasks The specified task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public void setTaskListToExecuteOn(TaskList tasks) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyskevin": 35
    }
  },
  {
    "path": "src/main/java/duke/commands/CommandResult.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * Represents the result of executing a command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * @author Lim Yong Shen, Kevin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private String result;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Constructs a command result with the specified result."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param result The specified result."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public CommandResult(String result) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        this.result \u003d result;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Returns this command result\u0027s message."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return This command result\u0027s message."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyskevin": 27
    }
  },
  {
    "path": "src/main/java/duke/commands/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.data.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * Implements the deadline command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * @author Lim Yong Shen, Kevin"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "public class DeadlineCommand extends AddCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private Deadline deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"deadline\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Constructs a deadline command with the specified deadline task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param deadline The specified deadline task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public DeadlineCommand(Deadline deadline) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Executes this deadline command and returns its command result."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return This deadline command\u0027s command result."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        tasks.add(deadline);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return new CommandResult(String.format(SUCCESS_MESSAGE, deadline.toString(), tasks.size()));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyskevin": 32
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.data.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * Implements the delete command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * @author Lim Yong Shen, Kevin"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static final String SUCCESS_MESSAGE \u003d \"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            + \"%s\\nNow you have %d task(s) in the list.\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Constructs a delete command with the specified task number."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param taskNumber The specified task number."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public DeleteCommand(int taskNumber) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Executes this delete command and returns its command result."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return This delete command\u0027s command result."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        Task task \u003d tasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return new CommandResult(String.format(SUCCESS_MESSAGE, task.toString(), tasks.size()));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyskevin": 34
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.data.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * Implements the done command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * @author Lim Yong Shen, Kevin"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "public class DoneCommand extends ListCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private Task taskToSetAsDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static final String SUCCESS_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:\\n%s\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Constructs a done command with the specified task number."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param taskNumber The specified task number."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public DoneCommand(int taskNumber) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Executes this done command and returns its command result."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return This done command\u0027s command result."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        taskToSetAsDone \u003d tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        assert taskToSetAsDone !\u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        taskToSetAsDone.setAsDone();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return new CommandResult(String.format(SUCCESS_MESSAGE, taskToSetAsDone.toString()));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyskevin": 36
    }
  },
  {
    "path": "src/main/java/duke/commands/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.data.tasks.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * Implements the event command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * @author Lim Yong Shen, Kevin"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "public class EventCommand extends AddCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private Event event;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"event\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Constructs an event command with the specified event task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param event The specified event task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public EventCommand(Event event) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        this.event \u003d event;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Executes this event command and returns its command result."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return This event command\u0027s command result."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        tasks.add(event);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return new CommandResult(String.format(SUCCESS_MESSAGE, event.toString(), tasks.size()));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyskevin": 32
    }
  },
  {
    "path": "src/main/java/duke/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * Implements the exit command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * @author Lim Yong Shen, Kevin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Executes this exit command and returns its command result."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return This exit command\u0027s command result."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        String exitMessage \u003d \"Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return new CommandResult(exitMessage);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Returns true."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return true."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyskevin": 30
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import java.lang.StringBuilder;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * Implements the find command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * @author Lim Yong Shen, Kevin"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static final String EMPTY_TASK_LIST_MESSAGE \u003d \"No matching tasks found.\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static final String FILLED_TASK_LIST_MESSAGE \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Constructs a find command with the specified keyword."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param keyword The specified keyword."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Executes this find command and returns its command result."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return This find command\u0027s command result."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        StringBuilder message \u003d new StringBuilder();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        TaskList subTaskList \u003d tasks.subTaskListContainingKeyWord(keyword);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        if (subTaskList.isEmpty()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            appendEmptyTaskListMessage(message);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            appendFilledTaskListMessage(message, subTaskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return new CommandResult(message.toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Appends the empty task list message to the specified StringBuilder."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param message The specified StringBuilder."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private void appendEmptyTaskListMessage(StringBuilder message) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        message.append(EMPTY_TASK_LIST_MESSAGE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Appends the filled task list message and the specified task list\u0027s"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * items to the specified StringBuilder."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param message The specified StringBuilder."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private void appendFilledTaskListMessage(StringBuilder message, TaskList tasks) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        message.append(FILLED_TASK_LIST_MESSAGE);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            message.append((i + 1) + \". \" + tasks.get(i) + \"\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyskevin": 63
    }
  },
  {
    "path": "src/main/java/duke/commands/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * Implements the HelpCommand."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * @author Lim Yong Shen, Kevin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static final String LIST_OF_COMMANDS \u003d \"List of commands:\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            + \"deadline command format: deadline \u003cdescription\u003e /by \u003cdate\u003e\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            + \"delete command format: delete \u003ctask number\u003e\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            + \"done command format: done \u003ctask number\u003e\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            + \"exit command format: bye\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            + \"event command format: event \u003cdescription\u003e /at \u003cdateAndTime\u003e\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            + \"find command format: find \u003ckeyword\u003e\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            + \"help command format: help\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            + \"list command format: list\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            + \"todo command format: todo \u003cdescription\u003e\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"help\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Executes this help command and returns its command result."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return This help command\u0027s command result."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return new CommandResult(LIST_OF_COMMANDS);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyskevin": 30
    }
  },
  {
    "path": "src/main/java/duke/commands/IncorrectCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * Implements the incorrect command, which handles invalid user input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * @author Lim Yong Shen, Kevin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "public class IncorrectCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static final String DEFAULT_MESSAGE \u003d \"OOPS!!! I\u0027m sorry,\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        + \" but I don\u0027t know what that means :-(\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        + \"Enter \u003chelp\u003e for a list of commands\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private boolean hasErrorMessage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Constructs an incorrect command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public IncorrectCommand() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        hasErrorMessage \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Constructs an incorrect command with the specified error message."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param errorMessage The specified error message."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public IncorrectCommand(String errorMessage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        hasErrorMessage \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Executes this incorrect command and returns its command result."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return This incorrect command\u0027s command result."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        if (hasErrorMessage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            return new CommandResult(errorMessage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            return new CommandResult(DEFAULT_MESSAGE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyskevin": 44
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import java.lang.StringBuilder;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * Implements the list command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * @author Lim Yong Shen, Kevin"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static final String EMPTY_TASK_LIST_MESSAGE \u003d \"You have 0 tasks in the list.\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static final String FILLED_TASK_LIST_MESSAGE \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Executes this list command and returns its command result."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return This list command\u0027s command result."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        StringBuilder message \u003d new StringBuilder();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            appendEmptyTaskListMessage(message);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            appendFilledTaskListMessage(message);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return new CommandResult(message.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Appends the empty task list message to the specified StringBuilder."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param message The specified StringBuilder."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private void appendEmptyTaskListMessage(StringBuilder message) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        message.append(EMPTY_TASK_LIST_MESSAGE);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Appends the filled task list message and the specified task list\u0027s"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * items to the specified StringBuilder."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param message The specified StringBuilder."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private void appendFilledTaskListMessage(StringBuilder message) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        message.append(FILLED_TASK_LIST_MESSAGE);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            message.append((i + 1) + \". \" + tasks.get(i) + \"\\n\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyskevin": 52
    }
  },
  {
    "path": "src/main/java/duke/commands/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.data.tasks.Todo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * Implements the todo command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * @author Lim Yong Shen, Kevin"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "public class TodoCommand extends AddCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private Todo todo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"todo\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Constructs a todo command with the specified todo task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param todo The specified todo task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public TodoCommand(Todo todo) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        this.todo \u003d todo;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Executes this todo command and returns its command result."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return This todo command\u0027s command result."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        tasks.add(todo);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return new CommandResult(String.format(SUCCESS_MESSAGE, todo.toString(), tasks.size()));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyskevin": 32
    }
  },
  {
    "path": "src/main/java/duke/data/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.data.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * Implements a list for storing tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * @author Lim Yong Shen, Kevin"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Constructs an empty task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Adds the specified task to the task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param task The specified task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Returns true if this task list is empty."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return true if this task list is empty."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return tasks.isEmpty();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Returns the task at the specified index of this task list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param index The specified index."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return The task at the specified index of this task list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Removes and returns the task at the specified index of this task list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param index The specified index."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return The task at the specified index of this task list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public Task remove(int index) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return tasks.remove(index);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Returns the size of this task list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return The size of this task list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Returns a sub task list withs tasks containing the specified keyword."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param keyword The specified keyword."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return A sub task list with tasks containing the specified keyword."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public TaskList subTaskListContainingKeyWord(String keyword) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        TaskList subTaskList \u003d new TaskList();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        Stream\u003cTask\u003e allTasks \u003d tasks.stream();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        allTasks.filter(task -\u003e task.getDescription().contains(keyword))"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                .forEach(task -\u003e subTaskList.add(task));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return subTaskList;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyskevin": 79
    }
  },
  {
    "path": "src/main/java/duke/data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "todo read book | 1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "todo stuff | 0"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "deadline return book /by 28/08/2019 12:00:00 | 0"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "event cook food /at 28/08/2019 13:00:00 | 0"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "deadline buy groceries /by 01/09/2019 15:00:00 | 0"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "todo sleep | 0"
      }
    ],
    "authorContributionMap": {
      "lyskevin": 6
    }
  },
  {
    "path": "src/main/java/duke/data/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "package duke.data.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * Implements a deadline task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * @author Lim Yong Shen, Kevin"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private Date dateAndTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private SimpleDateFormat dateFormat;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Constructs a deadline task with the specified description."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param description The specified description."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public Deadline(String description, String dateAndTime) throws ParseException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            dateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm:ss\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            dateFormat.setLenient(false);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            this.dateAndTime \u003d dateFormat.parse(dateAndTime);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Returns the command String (user input) used to create this deadline task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return The command String (user input) used to create this deadline task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public String getCommandString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return String.format(\"deadline %s /by %s\", description, dateFormat.format(dateAndTime));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Returns the String representation of this deadline task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return The String representation of this deadline task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), dateFormat.format(dateAndTime));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyskevin": 50
    }
  },
  {
    "path": "src/main/java/duke/data/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "package duke.data.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * Implements an event task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * @author Lim Yong Shen, Kevin"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private Date dateAndTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private SimpleDateFormat dateFormat;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Constructs an event task with the specified description."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param description The specified description."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public Event(String description, String dateAndTime) throws ParseException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            dateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm:ss\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            dateFormat.setLenient(false);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            this.dateAndTime \u003d dateFormat.parse(dateAndTime);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Returns the command String (user input) used to create this event task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return The command String (user input) used to create this event task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public String getCommandString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return String.format(\"event %s /at %s\", description, dateFormat.format(dateAndTime));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Returns the String representation of this event task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return The String representation of this event task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), dateFormat.format(dateAndTime));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyskevin": 51
    }
  },
  {
    "path": "src/main/java/duke/data/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "package duke.data.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * Implements a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * @author Lim Yong Shen, Kevin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Constructs a task with the specified description."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param description The specified description."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Returns true if this task is done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return true if this task is done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Returns the command String (user input) used to create this task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return The command String (user input) used to create this task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public abstract String getCommandString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Returns this task\u0027s description."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return This task\u0027s description."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Sets this task as done."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public void setAsDone() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Returns the string representation of this task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return The string representation of this task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        String statusIcon \u003d isDone ? \"Done\" : \"Not Done\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return String.format(\"[%s] %s\", statusIcon, description);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyskevin": 60
    }
  },
  {
    "path": "src/main/java/duke/data/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "package duke.data.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * Implements a todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * @author Lim Yong Shen, Kevin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Constructs a todo task with the specified description."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param description The specified description."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Returns the command String (user input) used to create this todo task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return The command String (user input) used to create this todo task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public String getCommandString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return String.format(\"todo %s\", description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Returns the string representation of this todo task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return The string representation of this todo task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyskevin": 35
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * Implements a custom exception for handling Duke-specific exceptions."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * @author Lim Yong Shen, Kevin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Constructs a Duke exception."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Constructs a Duke exception with the specified error message."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param errorMessage The specified error message."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyskevin": 24
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.commands.DeadlineCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.commands.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.commands.EventCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.commands.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.commands.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.commands.HelpCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.commands.IncorrectCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.commands.ListCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.commands.TodoCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.data.tasks.Deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.data.tasks.Event;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.data.tasks.Todo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * Implements the Parser class which parses user input and returns commands to execute."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * @author Lim Yong Shen, Kevin"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static final String BASIC_COMMAND_FORMAT \u003d \"[\\\\w\\\\/\\\\:\\\\-\\\\s]+\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static final int COMMAND_WORD_INDEX \u003d 0;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static final int ARGUMENTS_INDEX \u003d 1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static final int INPUT_STRING_SPLIT_LENGTH_LIMIT \u003d 2;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Parses the specified input and returns the appropriate command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param input The specified input."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return The appropriate command based on the specified input."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public static Command parse(String input) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        if (!Pattern.matches(BASIC_COMMAND_FORMAT, input)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            return prepareIncorrectCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        String commandWord \u003d getCommandWord(input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        switch (commandWord) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        case DeadlineCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            return prepareDeadlineCommand(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            return prepareDeleteCommand(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        case DoneCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            return prepareDoneCommand(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        case EventCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            return prepareEventCommand(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            return prepareExitCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        case FindCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            return prepareFindCommand(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        case HelpCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            return prepareHelpCommand();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            return prepareListCommand();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        case TodoCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            return prepareTodoCommand(input);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            return prepareIncorrectCommand();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Returns the arguments within the specified input."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param input The specified input."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return The arguments within the specified input."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @throws ArrayIndexOutOfBoundsException If the specified input does not contain any arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static String getArguments(String input) throws ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            return input.split(\" \", INPUT_STRING_SPLIT_LENGTH_LIMIT)[ARGUMENTS_INDEX];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Returns the command word in the specified input."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param input The specified input."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return The command word in the specified input."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static String getCommandWord(String input) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return input.split(\" \", INPUT_STRING_SPLIT_LENGTH_LIMIT)[COMMAND_WORD_INDEX];"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Prepares and returns a deadline command based on the specified input."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param input The specified input."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return A deadline command based on the specified input."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static Command prepareDeadlineCommand(String input) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            String arguments \u003d getArguments(input);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            String[] deadlineInformation \u003d arguments.split(\" /by \");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            Deadline deadline \u003d new Deadline(deadlineInformation[0], deadlineInformation[1]);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            return new DeadlineCommand(deadline);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            String errorMessage \u003d \"deadline command format: deadline \u003cdescription\u003e /by \u003cdate\u003e\\n\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            return new IncorrectCommand(errorMessage);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        } catch (ParseException | IllegalArgumentException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            String errorMessage \u003d \"Please enter a valid date format.\\n\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                    + \"Date and time: dd/mm/YYYY HH:mm:ss\\n\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            return new IncorrectCommand(errorMessage);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Prepares and returns a delete command based on the specified input."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param input The specified input."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return A delete command based on the specified input."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static Command prepareDeleteCommand(String input) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            String arguments \u003d getArguments(input);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            String[] taskInformation \u003d arguments.split(\" \");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            if (taskInformation.length \u003e 1) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(taskInformation[0]);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            return new DeleteCommand(taskNumber);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                | IllegalArgumentException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            String errorMessage \u003d \"delete command format: delete \u003ctask number\u003e\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            return new IncorrectCommand(errorMessage);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            String errorMessage \u003d \"Please enter a valid task number for the delete command.\\n\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                    + \"The delete command will not work if there are 0 stored tasks.\\n\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            return new IncorrectCommand(errorMessage);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Prepares and returns a done command based on the specified input."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param input The specified input."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return A done command based on the specified input."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static Command prepareDoneCommand(String input) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            String arguments \u003d getArguments(input);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            String[] taskInformation \u003d arguments.split(\" \");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            if (taskInformation.length \u003e 1) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(taskInformation[0]);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            return new DoneCommand(taskNumber);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                | IllegalArgumentException e) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            String errorMessage \u003d \"done command format: done \u003ctask number\u003e\\n\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            return new IncorrectCommand(errorMessage);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            String errorMessage \u003d \"Please enter a valid task number for the done command.\\n\""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                    + \"The done command will not work if there are 0 stored tasks.\";"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            return new IncorrectCommand(errorMessage);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Prepares and returns an exit command."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return An exit command."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static Command prepareExitCommand() {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return new ExitCommand();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Prepares and returns an event command based on the specified input."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param input The specified input."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return An event command based on the specified input."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static Command prepareEventCommand(String input) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            String arguments \u003d getArguments(input);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            String[] taskInformation \u003d arguments.split(\" /at \");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            Event event \u003d new Event(taskInformation[0], taskInformation[1]);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            return new EventCommand(event);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            String errorMessage \u003d \"event command format: event \u003cdescription\u003e /at \u003cdateAndTime\u003e\\n\";"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            return new IncorrectCommand(errorMessage);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            String errorMessage \u003d \"Please enter a valid date format.\\n\""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                    + \"Date and time: dd/mm/YYYY HH:mm:ss\\n\";"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            return new IncorrectCommand(errorMessage);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Prepares and returns a find command based on the specified input."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param input The specified input."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return A find command based on the specified input."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static Command prepareFindCommand(String input) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            String arguments \u003d getArguments(input);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            return new FindCommand(arguments);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        } catch (StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            String errorMessage \u003d \"find command format: find \u003ckeyword\u003e\\n\";"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            return new IncorrectCommand(errorMessage);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Prepares and returns a help command based on the specified input."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return A help command."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static Command prepareHelpCommand() {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return new HelpCommand();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Prepares and returns an incorrect command with the default error message."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return An incorrect command with the default error message."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static Command prepareIncorrectCommand() {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return new IncorrectCommand();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Prepares and returns a list command."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return A list command."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static Command prepareListCommand() {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return new ListCommand();"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Prepares and returns a todo command based on the specified input."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param input The specified input."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return A todo command based on the specified input."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static Command prepareTodoCommand(String input) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            String arguments \u003d getArguments(input);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            Todo todo \u003d new Todo(arguments);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            return new TodoCommand(todo);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        } catch (StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            String errorMessage \u003d \"todo command format: todo \u003cdescription\u003e\\n\";"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            return new IncorrectCommand(errorMessage);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyskevin": 245
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.data.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * Implements the Storage class that reads from and writes to the hard disk."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * @author Lim Yong Shen, Kevin"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private File dataFile;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static final int FULL_COMMAND_INDEX \u003d 0;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static final int TASK_STATUS_INDEX \u003d 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static final String FILE_NOT_FOUND_MESSAGE \u003d \"The hard disk file could not be loaded.\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            + \" Creating an empty task list.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static final String FILE_INPUT_ERROR_MESSAGE \u003d \"The hard disk file could not be read.\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            + \" Creating an empty task list.\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static final String SAVE_FAIL_MESSAGE \u003d \"Data could not be saved.\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            + \"Please check the hard disk file.\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Constructs a Storage class that is connected to the specified file path."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param filePath The specified file path."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Returns an ArrayList of tasks which is the result of reading data from the hard disk."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return An ArrayList of tasks which is the result of reading data from the hard disk."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @throws DukeException If the hard disk file cannot be found."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public TaskList load() throws DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            dataFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            Stream\u003cString\u003e dataLinesStream \u003d Files.lines(dataFile.toPath());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            dataLinesStream.forEach(dataLine -\u003e {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                String input \u003d getInput(dataLine);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                command.setTaskListToExecuteOn(tasks);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                command.execute();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                boolean isTaskDone \u003d getTaskStatus(dataLine).equals(\"1\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                if (isTaskDone) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                    tasks.get(tasks.size() - 1).setAsDone();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            });"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            throw new DukeException(FILE_NOT_FOUND_MESSAGE);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        } catch  (IOException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            throw new DukeException(FILE_INPUT_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Returns the full command in the specified line of data."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param dataLine The specified line of data."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return The full command in the specified line of data."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private String getInput(String dataLine) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return dataLine.split(\" \\\\| \")[FULL_COMMAND_INDEX];"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Returns the task status in the specified line of data."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param dataLine The specified line of data."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return The task status in the specified line of data."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private String getTaskStatus(String dataLine) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return dataLine.split(\" \\\\| \")[TASK_STATUS_INDEX];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Saves the tasks in the specified task list to the hard disk."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param tasks The specified task list."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @throws DukeException If the hard disk file cannot be found."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public void save(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(dataFile);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                String dataLine \u003d String.format(\"%s | %s\\n\", task.getCommandString(),"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                        task.isDone() ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                fileWriter.write(dataLine);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            throw new DukeException(SAVE_FAIL_MESSAGE);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyskevin": 112
    }
  },
  {
    "path": "src/main/java/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * @author Lim Yong Shen, Kevin"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Returns A user dialog box based on the specified text and image."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param text The specified text."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param img The specified image."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return A user dialog box based on the specified text and image."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Returns A Duke dialog box based on the specified text and image."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param text The specified text."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param img The specified image."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return A Duke dialog box based on the specified text and image."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyskevin": 74
    }
  },
  {
    "path": "src/main/java/duke/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * @author Lim Yong Shen, Kevin"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static final String USER_IMAGE_PATH \u003d \"/images/user.png\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static final String DUKE_IMAGE_PATH \u003d \"/images/duke.png\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(USER_IMAGE_PATH));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(DUKE_IMAGE_PATH));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        String response \u003d duke.execute(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        );"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyskevin": 56
    }
  },
  {
    "path": "src/main/java/duke/ui/TextUi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import java.lang.StringBuilder;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * Implements the text-based user interface."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " * @author Lim Yong Shen, Kevin"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyskevin"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "public class TextUi {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private Scanner inputScanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static final String LOADING_ERROR_MESSAGE \u003d \"The data file could not be loaded.\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            + \" Creating a new task list.\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static final String WELCOME_MESSAGE \u003d \"Hello from\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            + LOGO + \"What can I do for you?\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static final int HORIZONTAL_BORDER_LENGTH \u003d 80;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Constructs a ui."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public TextUi() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        inputScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Closes the ui."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public void close() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        inputScanner.close();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Returns the next line of input from the user."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @return The next line of input from the user."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public String readInput() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        return inputScanner.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Shows an empty line."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public void showEmptyLine() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Shows a horizontal border."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public void showHorizontalBorder() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        StringBuilder border \u003d new StringBuilder();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        for (int i \u003d 0; i \u003c HORIZONTAL_BORDER_LENGTH; i++) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            border.append(\u0027_\u0027);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        System.out.println(border);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Shows the loading error message."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        showHorizontalBorder();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        System.out.print(LOADING_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        showHorizontalBorder();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        showEmptyLine();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Shows the specified message."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * @param message The specified message."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public void showMessage(String message) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        System.out.print(message);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Shows the welcome message."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        showHorizontalBorder();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        System.out.print(WELCOME_MESSAGE);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        showHorizontalBorder();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        showEmptyLine();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyskevin": 93
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "lyskevin": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "lyskevin": 19
    }
  },
  {
    "path": "src/test/java/duke/parser/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static final String[] DESCRIPTIONS \u003d {\"me\", \"you\", \"her\", \"i\", \"we\"};"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static final String[] VALID_DATES \u003d {\"01/01/2019\", \"02/02/2019\", \"03/03/2019\", \"04/04/2019\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        \"05/05/2019\", \"06/06/2019\", \"07/07/2019\", \"08/08/2019\", \"09/09/2019\", \"10/10/2019\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        \"11/11/2019\", \"12/12/2019\"};"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private static final String[] VALID_TIMES \u003d {\"06:00:00\", \"12:00:00\", \"18:00:00\", \"23:59:59\"};"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    private class TaskListStub extends TaskList {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        public int size() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Tests the deadline command using valid inputs."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public void deadlineCommand_validInput_relevantCommandResult() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        String successMessage \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                + \"%s\\nNow you have %d task(s) in the list.\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        for (int i \u003d 0; i \u003c DESCRIPTIONS.length; i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            for (int j \u003d 0; j \u003c VALID_DATES.length; j++) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                for (int k \u003d 0; k \u003c VALID_TIMES.length; k++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                    String description \u003d DESCRIPTIONS[i];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                    String date \u003d VALID_DATES[j];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                    String time \u003d VALID_TIMES[k];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                    String commandString \u003d String.format(\"deadline %s /by %s %s\", description,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                            date, time);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                    Command command \u003d Parser.parse(commandString);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                    command.setTaskListToExecuteOn(new TaskListStub());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                    String expectedCommandResult \u003d String.format(\"[D][Not Done] %s (by: %s %s)\","
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                            description, date, time);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                    String expected \u003d String.format(successMessage, expectedCommandResult, 1);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                    assertEquals(expected, command.execute().getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Tests the todo command using invalid inputs."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public void todoCommand_invalidInput_incorrectCommandResult() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        String[] invalidTodoInputs \u003d {\"todo\"};"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        String expected \u003d \"todo command format: todo \u003cdescription\u003e\\n\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        for (int i \u003d 0; i \u003c invalidTodoInputs.length; i++) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            String actual \u003d Parser.parse(invalidTodoInputs[i]).execute().getMessage();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            assertEquals(expected, actual);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     * Tests the todo command using valid inputs."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    public void todoCommand_validInput_relevantCommandResult() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        String successMessage \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "                + \"%s\\nNow you have %d task(s) in the list.\\n\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        for (int i \u003d 0; i \u003c DESCRIPTIONS.length; i++) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            Command command \u003d Parser.parse(\"todo \" + DESCRIPTIONS[i]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            command.setTaskListToExecuteOn(new TaskListStub());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            String expectedDescription \u003d \"[T][Not Done] \" + DESCRIPTIONS[i];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            String expected \u003d String.format(successMessage, expectedDescription, 1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "            assertEquals(expected, command.execute().getMessage());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lyskevin"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lyskevin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyskevin": 78
    }
  }
]
