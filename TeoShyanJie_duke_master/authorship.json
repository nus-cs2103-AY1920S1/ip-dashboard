[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TeoShyanJie": 1,
      "-": 15
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.component.Ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.component.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.database.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.component.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /** Database of the Duke Program */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /** List of task */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /** Ui of the Duke Program */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * Duke program to initalise the Database, Ui and get the task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        storage \u003d new Storage(ui);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        storage.initialise();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        tasks \u003d new TaskList(storage.getSavedTask());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * To stimulate the Duke Program to run."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                ui.showSpace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand, ui);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * Main function to start Duke Database."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param args Arguments enter by user."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TeoShyanJie": 53,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.component.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.component.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.database.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /** Task enter by user */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /** The type of task enter by user */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /** The exit status */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    protected boolean exit \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * The Constructor of Abstract Class Command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param input Task enter by user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param type The type of task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public Command(String input, String type) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /** Execute method */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * Exit the Duke Program."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @return True to continue or False to exit."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        return exit;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TeoShyanJie": 38
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.component.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.component.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.database.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * Constructor of DeadlineCommand class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param input Task input by user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param type Type of task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public DeadlineCommand(String input, String type) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        super(input, type);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * Execute method to execute deadline command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param tasks List of task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param ui The ui of duke program."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param storage The Database of duke program."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @throws DukeException If deadline command fail to be executed."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        deadline(super.input, tasks, ui);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * \"deadline\" command to enter deadline description and deadline time."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param data deadline description and deadline of task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @throws DukeException If description and time of deadline is empty."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public static void deadline(String data, TaskList tasks, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        if (data.isEmpty()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            throw new DukeException(ui.INDENT_COMMENT +\"\\u2639 OOPS !!! \" + \"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        String[] result \u003d data.split(\"/by\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        if (result.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            throw new DukeException(ui.INDENT_COMMENT +\"\\u2639 OOPS !!! \" + \"Deadline is needed.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        String achieve \u003d result[0].trim();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        String timeline \u003d result[1].trim();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        DateFormat df \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        DateFormat outputformat \u003d new SimpleDateFormat(\"d MMMM yyyy\u0027,\u0027 h:mm a\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        Date date \u003d null;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        String formatted_Date \u003d null;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            date\u003d df.parse(timeline);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            formatted_Date \u003d outputformat.format(date);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            tasks.getTask().add(new Deadline(achieve, formatted_Date));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            System.out.println(ui.INDENT_COMMENT + \"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            System.out.println(ui.INDENT_TASK + tasks.getTask().get(tasks.getItemNo()));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            tasks.setItemNo(tasks.getItemNo() + 1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            System.out.println(ui.INDENT_COMMENT + \"Now you have \" + tasks.getItemNo() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            System.out.println(ui.INDENT_COMMENT + \"Invalid Data and Time Format\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TeoShyanJie": 71
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.component.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.component.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.database.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * DeleteCommand class constructor."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param input Task enter by user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param type The task of task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public DeleteCommand(String input, String type) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        super(input, type);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * Execute method to execute delete command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param tasks List of task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param ui The ui of duke program."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param storage The Database of duke program."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @throws DukeException If delete command fail to be executed."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        delete(super.input, tasks, ui);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * The delete method to delete specific task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param data Task enter by user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param tasks List of task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param ui The ui of Duke Program."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @throws DukeException If the list of task is empty or if the task to delete is not in the list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public void delete(String data, TaskList tasks, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            if (data.isEmpty()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                if (tasks.getItemNo() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                    throw new DukeException(ui.INDENT_COMMENT + \"\\u2639 OOPS !!! \" + \"The task list are currently empty.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                    throw new DukeException(ui.INDENT_COMMENT + \"\\u2639 OOPS !!! \" + \"Index of task are needed.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            int item \u003d Integer.parseInt(data);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            if (item \u003e tasks.getItemNo()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                if (tasks.getItemNo() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                    throw new DukeException(ui.INDENT_COMMENT + \"\\u2639 OOPS !!! \" + \"The task list are currently empty.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                    throw new DukeException(ui.INDENT_COMMENT + \"\\u2639 OOPS !!! \" + \"Number enter can only be less than or equal number of task.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            System.out.println(ui.INDENT_COMMENT + \"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            System.out.println(ui.INDENT_TASK + tasks.getTask().remove(--item));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            tasks.setItemNo(tasks.getItemNo() - 1);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            System.out.println(ui.INDENT_COMMENT + \"Now you have \" + tasks.getItemNo() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            System.out.println(ui.INDENT_COMMENT + \"\\u2639 OOPS !!! \" + \"Only Integer is allowed after done.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TeoShyanJie": 64
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.component.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.component.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.database.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "public class DoneCommand extends Command{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * DoneCommand class constructor."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param input The input task enter by user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param type The type of task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public DoneCommand(String input, String type) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        super(input,type);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * The execute method to execute done method."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param tasks The list of task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param ui The ui of Duke Program."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param storage The Database of Duke Program."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @throws DukeException If done method is not executed properly."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        done(super.input, tasks, ui);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * \"done\" command to check the finish task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param data Command and item index of the task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @throws DukeException if number of items \u003d 0 and index enter \u003e total number of task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public static void done(String data, TaskList tasks, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            if (data.isEmpty()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                if (tasks.getItemNo() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                    throw new DukeException(ui.INDENT_COMMENT + \"\\u2639 OOPS !!! \" + \"The task list are currently empty.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                    throw new DukeException(ui.INDENT_COMMENT + \"\\u2639 OOPS !!! \" + \"Index of task are needed.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            int item \u003d Integer.parseInt(data);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            if (item \u003e tasks.getItemNo()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                if (tasks.getItemNo() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                    throw new DukeException(ui.INDENT_COMMENT + \"\\u2639 OOPS !!! \" + \"The task list are currently empty.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                    throw new DukeException(ui.INDENT_COMMENT + \"\\u2639 OOPS !!! \" + \"Number enter can only be less than or equal number of task.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            System.out.println(ui.INDENT_COMMENT + \"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            Task t \u003d tasks.getTask().get(--item);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            t.markAsDone();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            System.out.println(ui.INDENT_TASK + t);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            System.out.println(ui.INDENT_COMMENT + \"\\u2639 OOPS !!! \" + \"Only Integer is allowed after done.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TeoShyanJie": 64
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.component.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.component.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.database.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * Constructor of the EventCommand class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param input The input task enter by user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param type The type of task enter by user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public EventCommand(String input, String type) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        super(input, type);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * Execute method to execute the event method."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param tasks List of task enter by user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param ui Duke Ui Program enter by user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param storage Database of the Duke Program."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @throws DukeException If event method is not able to get executed."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        event(super.input, tasks, ui);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * \"event\" command to enter event description and event time."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param data event description and time of event."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @throws DukeException If description and time of event is empty."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public static void event(String data, TaskList tasks, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        if (data.isEmpty()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            throw new DukeException(ui.INDENT_COMMENT +\"\\u2639 OOPS !!! \" + \"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        String[] result \u003d data.split(\"/at\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        if (result.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            throw new DukeException(ui.INDENT_COMMENT +\"\\u2639 OOPS !!! \" + \"Event time is needed.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        String achieve \u003d result[0].trim();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        String timeline \u003d result[1].trim();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        DateFormat df \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        DateFormat outputformat \u003d new SimpleDateFormat(\"d MMMM yyyy\u0027,\u0027 h:mm a\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        Date date \u003d null;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        String formatted_Date \u003d null;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            date\u003d df.parse(timeline);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            formatted_Date \u003d outputformat.format(date);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            tasks.getTask().add(new Event(achieve, formatted_Date));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            System.out.println(ui.INDENT_COMMENT + \"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            System.out.println(ui.INDENT_TASK + tasks.getTask().get(tasks.getItemNo()));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            tasks.setItemNo(tasks.getItemNo() + 1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            System.out.println(ui.INDENT_COMMENT + \"Now you have \" + tasks.getItemNo() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            System.out.println(ui.INDENT_COMMENT + \"Invalid Data and Time Format\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TeoShyanJie": 72
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.component.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.component.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.database.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "public class ExitCommand extends Command{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * ExitCommand class constructor."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param input The input task enter by user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param type The type of task enter by user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public ExitCommand(String input, String type) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        super(input, type);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * Execute method to execute bye method."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param tasks List of task enter."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param ui Ui of Duke Program."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param storage Database of the Duke Program."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        bye(tasks, ui, storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        super.exit \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * \"bye\" command to exit Duke Program."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @throws DukeException If update of file fails."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public static void bye(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        System.out.println(ui.INDENT_COMMENT + \"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        storage.updateFile(tasks.getTask());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TeoShyanJie": 39
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.component.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.component.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.database.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * ListCommand constructor."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param input The input task enter by user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param type The type of task enter by user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public ListCommand(String input, String type) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        super(input, type);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * Execute method to execute the list method."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param tasks List of task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param ui The Ui of the Duke Program."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param storage The Database of the Duke Program."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @throws DukeException The list method is not able to execute."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        list(tasks, ui);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * \"list\" command to list all the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @throws DukeException if number of items \u003d 0."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public static void list(TaskList tasks, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        if (tasks.getItemNo() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            throw new DukeException(ui.INDENT_COMMENT + \"\\u2639 OOPS !!! \" + \"The task list are currently empty.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        System.out.println(ui.INDENT_COMMENT + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getTask().size(); i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            System.out.println(\"    \" + index++ + \".\" + tasks.getTask().get(i));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TeoShyanJie": 44
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.component.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.component.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.database.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * TodoCommand Constructor."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param input The input task enter by user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param type The type of task enter by user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public TodoCommand(String input, String type) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        super(input, type);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * Execute method to execute to-do method."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param tasks The list task enter by user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param ui The ui of the Duke Program."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param storage The Database of Duke Program."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @throws DukeException If to-do method is not able to get executed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        todo(super.input, tasks, ui);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * \"to-do\" command to enter the task description."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param data to-do command and description of task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @throws DukeException If description of data is empty."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public void todo(String data, TaskList tasks, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        if (data.isEmpty()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            throw new DukeException(ui.INDENT_COMMENT +\"\\u2639 OOPS !!! \" + \"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        tasks.getTask().add(new Todo(data));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        System.out.println(ui.INDENT_COMMENT + \"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        System.out.println(ui.INDENT_TASK + tasks.getTask().get(tasks.getItemNo()));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        tasks.setItemNo(tasks.getItemNo() + 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        System.out.println(ui.INDENT_COMMENT + \"Now you have \" + tasks.getItemNo() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TeoShyanJie": 46
    }
  },
  {
    "path": "src/main/java/duke/component/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "package duke.component;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.component.Ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * Parse method to parse command enter by user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param line The input enter by user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param ui The ui of Duke Program."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @return The command type of user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @throws DukeException If command enter is not valid."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public static Command parse(String line, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        String command \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        String rest \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        if (!line.contains(\" \")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            command \u003d line;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            String[] data \u003d line.split(\" \", 2);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            command \u003d data[0];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            rest \u003d data[1];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            return new ListCommand(\"\", \"list\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            return new DoneCommand(rest, \"done\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            return new TodoCommand(rest, \"todo\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            return new DeadlineCommand(rest, \"deadline\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            return new EventCommand(rest, \"event\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            return new ExitCommand(\"\", \"bye\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            return new DeleteCommand(rest, \"delete\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            throw new DukeException(ui.INDENT_COMMENT + \"\\u2639 OOPS !!! \" + \"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TeoShyanJie": 60
    }
  },
  {
    "path": "src/main/java/duke/component/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "package duke.component;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /** Array list of task */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public List\u003cTask\u003e task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /** Total number of task */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public int itemNo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * TaskList Constructor enter by user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param task List of task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public TaskList(List\u003cTask\u003e task) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        itemNo \u003d task.size();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * List of task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        this.task \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * To get the total number of task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @return The total number of task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public int getItemNo() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        return itemNo;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * To the set total number of item."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param itemNo The number of item."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public void setItemNo(int itemNo) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        this.itemNo \u003d itemNo;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * To get the list of task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @return The number task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public List\u003cTask\u003e getTask() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TeoShyanJie": 54
    }
  },
  {
    "path": "src/main/java/duke/component/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "package duke.component;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /** Indentation for comment */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public final String INDENT_COMMENT \u003d \"    \";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /** Indentation for task description */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public final String INDENT_TASK \u003d \"      \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /** Scan user input */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * Print the horizontal line."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        System.out.println(\"   ________________________________________________________________________\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * To print space."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public void showSpace() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        System.out.println(\"\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * Print the greet of the duke program."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        String logo \u003d \"     ____        _        \\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                + \"    |  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                + \"    | | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                + \"    | |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                + \"    |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        System.out.println(INDENT_COMMENT + \"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        System.out.println(INDENT_COMMENT + \"What can I do for you?\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * The read command to get user input."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @return The string input by user."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        return input.nextLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * To get the error message when invalid."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param message Message to get error message."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TeoShyanJie": 60
    }
  },
  {
    "path": "src/main/java/duke/database/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "package duke.database;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.component.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /** Declaration of file as File type */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public File file;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /** Ui of the Duke Program */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * Storage Constructor."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param ui Ui of Duke Constructor."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public Storage(Ui ui) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * To get the project root and path to create the txt file or check if text file is available."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public void initialise() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        String project_root \u003d new File(System.getProperty(\"user.dir\")).getParentFile().getPath();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        StringBuilder path \u003d new StringBuilder();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        path.append(project_root);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        File directory \u003d new File(path + \"/data\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        if (!directory.exists()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            directory.mkdirs();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        file \u003d new File(directory + \"/\" + \"data.txt\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            ui.showLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            System.out.println(ui.INDENT_COMMENT + \"\\u2639 OOPS !!! \" + \"File is not able to be created\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            ui.showLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            System.out.println(\"\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * Get the list of task from the text file to a List."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @return list of task as List."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public List\u003cTask\u003e getSavedTask() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            Scanner input \u003d new Scanner(file);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            while (input.hasNextLine()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                    list.add(getEachTask(input.nextLine()));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                    ui.showLine();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                    System.out.println(ui.INDENT_COMMENT + \"\\u2639 OOPS !!! \" + \"File is empty\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                    ui.showLine();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                    System.out.println(\"\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            ui.showLine();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            System.out.println(ui.INDENT_COMMENT + \"\\u2639 OOPS !!! \" + \"File is not available\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            ui.showLine();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            System.out.println(\"\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * Get each of task from the text."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param input List of task from the save text file."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @return Each line of task save in the text file."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @throws DukeException If the status of task is not an Integer."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public Task getEachTask(String input) throws DukeException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        String[] data \u003d input.split(\"\\\\|\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        switch (data[0].trim()) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            task \u003d new Todo(data[2].trim());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                if (Integer.parseInt(data[1].trim()) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                System.out.println(ui.INDENT_COMMENT + \"\\u2639 OOPS !!! \" + \"Error in Database Data\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            task \u003d new Deadline(data[2].trim(), data[3].trim());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                if (Integer.parseInt(data[1].trim()) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                System.out.println(ui.INDENT_COMMENT + \"\\u2639 OOPS !!! \" + \"Error in Database Data\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            task \u003d new Event(data[2].trim(), data[3].trim());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                if (Integer.parseInt(data[1].trim()) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                System.out.println(ui.INDENT_COMMENT + \"\\u2639 OOPS !!! \" + \"Error in Database Data\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            throw new DukeException(ui.INDENT_COMMENT + \"\\u2639 OOPS !!! \" + \"Error in reading data\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * Update the list of task in the text file."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param task List of task."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @throws DukeException If file is not able to write."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public void updateFile(List\u003cTask\u003e task) throws DukeException {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        file.delete();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            FileWriter writer \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            for(Task item: task) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                StringBuilder save \u003d new StringBuilder();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                String temp \u003d item.toString();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                temp \u003d temp.replaceAll(\"[\\\\p{Ps}\\\\p{Pe}]\",\"\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                temp.trim();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                String type \u003d temp.substring(0, 1).trim();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                save.append(type);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                save.append(\" | \");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                if (temp.substring(1, 2).trim().equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                    save.append(\"1\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                    save.append(\"0\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                save.append(\" | \");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                String rest \u003d temp.substring(2).trim();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                if (rest.contains(\"at:\")) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                    String[] part \u003d rest.split(\"at:\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                    save.append(part[0].trim());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                    save.append(\" | \");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                    save.append(part[1].trim());"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                } else if (rest.contains(\"by:\")) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                    String[] part \u003d rest.split(\"by:\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                    save.append(part[0].trim());"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                    save.append(\" | \");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                    save.append(part[1].trim());"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                    save.append(rest.trim());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "                writer.write(save + System.lineSeparator());"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "            System.out.println(\"Unable to Update File\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TeoShyanJie": 201
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * Error message of the exception class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param message Pass the error message to the super class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TeoShyanJie": 11
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "public class Deadline extends duke.task.Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /** Deadline of the task */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * Constructor of the Deadline class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param description Description of the deadline task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param by Deadline of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * Return the task as string."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @return String of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TeoShyanJie": 25
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /** The event deadline of the task */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * Constructor of the event class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param description Event description of the class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param at Event deadline of the class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * Return event task as string."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @return task as string."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TeoShyanJie": 25
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /** Description of the task */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /** The status of the task */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * Constructor of Task class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param description of Task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * Get the status icon of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @return status icon of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * Get the description of the task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @return the description of the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * Mark the task as done."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * Get the task as string."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @return task as string."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TeoShyanJie": 49
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * Constructor of To-do class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @param description of the task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * To String method of To-do class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     * @return String of description with type."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TeoShyanJie": 20
    }
  },
  {
    "path": "src/test/java/duke/task/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public void testDeadline(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        assertEquals(\"[T][✘] read books\", new Todo(\"read books\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public void testDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        assertEquals(\"D\", new Deadline(\"return books\", \"12/12/2012 1800\").toString().substring(1,2));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    public void testStatus() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        boolean test\u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        Deadline actual \u003d new Deadline(\"return books\", \"12/12/2012 1800\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        actual.markAsDone();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "        assertEquals(test, actual.isDone);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TeoShyanJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TeoShyanJie": 25
    }
  }
]
