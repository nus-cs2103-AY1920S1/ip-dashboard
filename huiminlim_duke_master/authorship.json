[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "import java.lang.Exception;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "/*"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "public class runDuke{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    public static void main(String[] args) throws CommandNotRecognizedException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        duke.runDuke();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "*/"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "enum Command{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    LIST, BYE, DONE, TODO, DEADLINE, EVENT, DELETE, ECHO;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    private static final String HORIZONTAL_LINE \u003d \"\\t____________________________________________________________\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    private static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    private static int listCounter \u003d 0;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    public static void main(String[] args){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        String greeting \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        String goodbye \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        System.out.println(greeting);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        // Start reading input"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                String readInput \u003d sc.next();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                // Check if input command exist"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                boolean isExist \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                for(Command c: Command.values()){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    // If exists"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    if(c.name().equals(readInput.toUpperCase())){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                        // Not recognized command"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                        isExist \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                if (!isExist) throw new CommandNotRecognizedException();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                // Command exist"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                Command cmd \u003d Command.valueOf(readInput.toUpperCase());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                if(cmd \u003d\u003d Command.BYE){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    System.out.println(processText(goodbye));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                else if (cmd \u003d\u003d Command.LIST){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    // Error Handling: ListEmpty"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    if(listCounter \u003d\u003d 0){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                        // Clear buffer of scanner"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                        String i \u003d sc.nextLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                        throw new EmptyListException(\"\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    String printList \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    for (int i \u003d 0; i \u003c listCounter; i++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                        String temp \u003d \"\\t\\t\" + (i + 1) + \".\" + list.get(i).getItemInfo();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                        printList \u003d printList + temp;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                        if (i !\u003d listCounter - 1) printList \u003d printList + \"\\n\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    System.out.println(processText(printList));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                else if (cmd \u003d\u003d Command.TODO){"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    String toDoItem \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    // Implies only word \"deadline\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    if(toDoItem.equals(\"\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                        throw new EmptyCommandField(\"todo\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    list.add(new ToDo(toDoItem, false));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    listCounter++;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    String tempPrint \u003d addedTaskText();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    System.out.println(processText(tempPrint));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                else if (cmd \u003d\u003d Command.EVENT){"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    String input \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    String[] tokenList \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    // Implies only word \"event\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    if(tokenList.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                        throw new EmptyCommandField(\"event\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    // Format for item is incorrect"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    if(tokenList.length !\u003d 2){"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                        throw new CommandFieldFormatException(\"event\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    list.add(new Event(tokenList[0], tokenList[1], false));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    listCounter++;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    String tempPrint \u003d addedTaskText();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    System.out.println(processText(tempPrint));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                else if (cmd \u003d\u003d Command.DEADLINE){"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    String input \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    String[] tokenList \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    // Implies only word \"deadline\""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    if(tokenList.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                        throw new EmptyCommandField(\"deadline\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    // Format for item is incorrect"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    if(tokenList.length !\u003d 2){"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                        throw new CommandFieldFormatException(\"deadline\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    list.add(new Deadline(tokenList[0], tokenList[1], false));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    listCounter++;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    String tempPrint \u003d addedTaskText();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    System.out.println(processText(tempPrint));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                else if (cmd \u003d\u003d Command.DONE){"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    // Cannot perform done in zero list"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    if(listCounter \u003d\u003d 0){"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                        // Clear buffer of scanner"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                        String i \u003d sc.nextLine();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                        throw new EmptyListException(\"Cannot perform done.\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    int indexDone \u003d sc.nextInt();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    // If indexDone exceed listCounter"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    if(indexDone \u003e listCounter || indexDone \u003c 0){"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                        throw new InvalidNumberException(\"Error exceeding item number\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    list.get(--indexDone).setDone();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    String doneMessage \u003d \"Nice! I\u0027ve marked this task as done: \\n\\t\\t\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    System.out.println(processText(doneMessage + list.get(indexDone).getItemInfo()));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                /*"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                README:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                ECHO FUNCTION HAS BEEN REPLACED WITH COMMAND ECHO,"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                TO FACILITATE COMMANDS THAT ARE NOT RECOGNIZABLE."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                 */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                else if (cmd \u003d\u003d Command.ECHO){"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    // Read any remaining lines"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    String echoInput \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    if(echoInput.equals(\"\")){"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                        throw new EmptyCommandField(\"echo\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    // Store content"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    list.add(new Task(echoInput, false));"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    listCounter++;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    String processedInput \u003d Duke.processText(echoInput);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    System.out.println(processedInput);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                else if (cmd \u003d\u003d Command.DELETE){"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    // Incorrect format for delete"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    if(!sc.hasNextInt()){"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                        sc.nextLine();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                        throw new CommandFieldFormatException(\"delete\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    int numberToDelete \u003d sc.nextInt();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    // Make sure number is valid"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    if(numberToDelete \u003e listCounter || numberToDelete \u003c 1){"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                        throw new InvalidNumberException(\"Number to delete does not exist\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    Task deletedTask \u003d list.remove(numberToDelete - 1);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    listCounter--;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    String tempPrint \u003d \"Noted. I\u0027ve removed this task:\\n\\t\\t\" +"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                            deletedTask.getItemInfo() +"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                            \"\\n\\tNow you have \"+ listCounter + \" tasks in the list.\";"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                    System.out.println(processText(tempPrint));"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "            catch (CommandNotRecognizedException c) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                // Clear buffer of scanner"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                String i \u003d sc.nextLine();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                System.out.println(processText(\"\\u263A OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"));"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "            catch (EmptyCommandField e){"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                System.out.println(processText(\"\\u263A The description of \" + e.getMessage() + \" cannot be empty.\"));"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "            catch (EmptyListException l){"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                System.out.println(processText(\"\\u263A List is empty! \" + l.getMessage()));"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "            catch (CommandFieldFormatException f){"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                System.out.println(processText(\"\\u263A Description format is incorrect for \" + f.getMessage() + \".\"));"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "            catch (InvalidNumberException n){"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                System.out.println(processText(\"\\u263A Invalid input number. \" + n.getMessage()));"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    // Add in Indentation and horizontal lines"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    private static String processText(String input){"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        return HORIZONTAL_LINE + \"\\n\" + \"\\t\" + input + \"\\n\" + HORIZONTAL_LINE + \"\\n\";"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    private static String addedTaskText(){"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n\\t\\t\" +"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                list.get(listCounter - 1).getItemInfo() +"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "                \"\\n\\tNow you have \" + listCounter + \" tasks in the list.\";"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "class Task{"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    protected static final String TICK \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    protected static final String CROSS \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    protected String taskItem;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    // Default Constructor"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    public Task(){"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    // Non-default Constructor"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    public Task(String taskItem, boolean isDone){"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        this.taskItem \u003d taskItem.trim();"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    public void setDone(){"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    public String getStatusIcon(){"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        if(isDone) return \"[\" + TICK + \"]\";"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        else return \"[\" + CROSS + \"]\";"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    public String getTaskItem(){"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        return taskItem;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    public String getItemInfo(){"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        return getStatusIcon() + \" \" + getTaskItem();"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "}"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "class ToDo extends Task{"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    public ToDo(String toDo, boolean isDone){"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        super(toDo.trim(), isDone);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    public String getStatusIcon(){"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        if(isDone) return \"[T][\" + TICK + \"]\";"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        else return \"[T][\" + CROSS + \"]\";"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "}"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "class Deadline extends Task{"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    private boolean isDeadlineProcessed;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    public Deadline(String event, String timing, boolean isDeadlineProcessed){"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        super(event.trim(), false);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        this.deadline \u003d timing.trim();"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        this.isDeadlineProcessed \u003d isDeadlineProcessed;"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        if (isDone) return \"[D][\" + TICK + \"]\";"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        else return \"[D][\" + CROSS + \"]\";"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    public String getDeadline(){"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        return this.deadline;"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    public String getItemInfo(){"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        if(!isDeadlineProcessed) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "            deadline \u003d deadline.substring(3);"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "            isDeadlineProcessed \u003d true;"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        return getStatusIcon() + \" \" + getTaskItem() + \" (by: \" + getDeadline() + \")\";"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "class Event extends Task {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    private String timing;"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    private boolean isTimingProcessed;"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    public Event(String event, String timing, boolean isDone) {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        super(event.trim(), isDone);"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        this.isTimingProcessed \u003d false;"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        if (isDone) return \"[E][\" + TICK + \"]\";"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        else return \"[E][\" + CROSS + \"]\";"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    public String getTiming() {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        return timing;"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    public String getItemInfo(){"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        if(!isTimingProcessed) {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "            timing \u003d timing.substring(3);"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "            isTimingProcessed \u003d true;"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        return getStatusIcon() + \" \" + getTaskItem() + \" (at: \" + getTiming() + \")\";"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "}"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "class CommandNotRecognizedException extends Exception{"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    public CommandNotRecognizedException(){"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        super(\"Error\");"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "}"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "// For:"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "// (1) Error printing empty list"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "// (2) Error performing done on empty list"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "class EmptyListException extends Exception{"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    public EmptyListException(String info){"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        super(info);"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "}"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "// Format of command is incorrect: not using \"/\""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "class CommandFieldFormatException extends Exception{"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    public CommandFieldFormatException(String command){"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "}"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "// Exceeded number of items in list"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "class InvalidNumberException extends Exception{"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    public InvalidNumberException(String info){"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        super(info);"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "}"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "class EmptyCommandField extends Exception {"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    public EmptyCommandField(String command){"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huiminlim": 375,
      "Jeffry Lum": 2,
      "-": 3
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "deadline do homework /by no idea :-p"
      }
    ],
    "authorContributionMap": {
      "huiminlim": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huiminlim"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huiminlim"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "huiminlim": 21
    }
  }
]
