[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * Encapsulates a deadline-type task handled by Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * A deadline differs from other tasks because it has a due date."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * @author atharvjoshi"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * @version CS2103 AY19/20 Sem 1 iP Week 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /** The date by which task is due */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private String dueDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Creates a deadline with a description and due date."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @param description string representing the description of the deadline."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @param dueDate string representing date by which deadline is due."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public Deadline(String description, String dueDate) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Return a string representation of this deadline."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @return string representing this deadline."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by:\" + dueDate + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "atharvjoshi": 32
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "import java.lang.Integer;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * Encapsulates attributes and behaviour of Duke, a personal assistant chatbot."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * Duke manages a user\u0027s list of tasks. It can store, add to, remove from, or"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * modify the contents of the list. User input must come either in the form of"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * commands \u0027list\u0027, \u0027bye\u0027 \u0027done \u003ctask index\u003e\u0027, \u0027delete \u003ctask index\u003e\u0027 or storage"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * requests beginning with the type of task to be stored. Duke supports three"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * types of tasks - todos, deadlines, and events. Deadlines and events need to"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * be supplied with additional date or time information. The input format for"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * todos is \u0027todo \u003ctask description\u003e\u0027 and that for deadlines and events is"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * \u0027\u003ctask type\u003e \u003ctask description\u003e / \u003cdate/time\u003e\u0027. Deviating from this input"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * format results in Duke supplying error messages to the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * @author atharvjoshi"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * @contributors j-lum, damithc"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * @version CS2103 AY19/20 Sem 1 iP Week 2"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /** a unique logo for Duke */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private final String logo;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /** welcome message */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private String welcomeMessage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /** exit message */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private String exitMessage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /** flag to indicate if Duke is listening to commands from the user */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private boolean isListening;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /** a list of all tasks entered by the user */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Creates and initialises an instance of Duke."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Duke is initialised with a unique logo, a welcome and exit message,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * active status (listening or not listening), and an empty list of tasks"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * to be added to by the user."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        this.logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        this.welcomeMessage \u003d \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                + \"What can I do for you?\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        this.exitMessage \u003d \"Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        // when an instance of Duke is created, it starts listening to commands"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        this.isListening \u003d true;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        // initialise ArrayList to store Tasks"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Greets the user with the welcome message."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        System.out.print(welcomeMessage);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Processes a command entered by the user."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * This method runs through a list of accepted commands and handles"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * them accordingly. It prints an error message if it encounters an"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * unrecognised command."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @param command a string containing the command(s) entered by the user"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public void processCommand(String command) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        String imperative \u003d command.split(\" \")[0].toUpperCase();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        switch (imperative) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            case \"BYE\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                // user wants to quit, so Duke stops listening to commands and exits"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                this.exit();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            case \"LIST\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                // user wants to print all tasks entered"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                this.printTasks();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            case \"DONE\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                // user wants to mark a task at the specified index as done"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                this.markTaskAsDone(command);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            case \"DELETE\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                // user wants to delete a task at the specified index"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                this.deleteTask(command);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            case \"TODO\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                // Fallthrough"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            case \"DEADLINE\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                // Fallthrough"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            case \"EVENT\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                // valid task storing command found"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                this.storeTask(command);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                        + \" what that means :-(\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Exits the chatbot application with an exit message."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        this.isListening \u003d false;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        System.out.print(exitMessage);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Returns the unique logo of Duke."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @return a string representation of Duke\u0027s a logo"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public String getLogo() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        return this.logo;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Returns the current listening state of Duke."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @return true if Duke is currently listening to commands, false otherwise."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public boolean getIsListening() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        return (this.isListening);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Prints all tasks entered by the user in a readable format."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private void printTasks() {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        // inform user if the list is empty"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        if (this.tasks.isEmpty()) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            System.out.println(\"No tasks in your list!\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            int listSize \u003d this.tasks.size(); // find number of commands entered"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            for (int i \u003d 0; i \u003c listSize; i++) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                // specified format: \"1. task 1\""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                Task currentTask \u003d this.tasks.get(i);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                System.out.format(\"%d. %s\\n\", i + 1, currentTask);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Stores commands entered by the user based on the type of tasks specified."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Throws an exception if the user enters a task with an empty description"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * or incorrect format."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @param command the command entered by the user."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private void storeTask(String command) throws ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            // segment the input into two parts - imperative and task attribute"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            String[] segmentedCommand \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            Task task \u003d null; // initialise task instance"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            // create the various kind of tasks based on the specified command"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            switch (segmentedCommand[0].toUpperCase()) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                case \"TODO\":"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    task \u003d new Todo(segmentedCommand[1]);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                case \"DEADLINE\":"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    // obtain task description and date/time attribute from segmented command"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    // only valid for deadline and event task types"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    String deadlineDescription \u003d segmentedCommand[1].split(\"\\\\/\")[0];"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    String dueDate \u003d segmentedCommand[1].split(\"\\\\/\")[1].substring(2);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    task \u003d new Deadline(deadlineDescription, dueDate);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                case \"EVENT\":"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    // obtain task description and date/time attribute from segmented command"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    // only valid for deadline and event task types"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    String eventDescription \u003d segmentedCommand[1].split(\"\\\\/\")[0];"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    String dateTime \u003d segmentedCommand[1].split(\"\\\\/\")[1].substring(2);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    task \u003d new Event(eventDescription, dateTime);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know\""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                            + \" what that means :-(\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            // store tasks in list and inform the user"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            this.tasks.add(task);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    + \"  \" + task);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            System.out.format(\"Now you have %d tasks in the list.\\n\","
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    this.tasks.size());"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            // if the user has simply typed the imperative without"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            // specifying any task attributes, or entered an incorrect"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            // input format, let the user know."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            if (command.equalsIgnoreCase(\"todo\")"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    || command.equalsIgnoreCase(\"deadline\")"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    || command.equalsIgnoreCase(\"event\")) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                System.out.println(\"OOPS!!! The description of a \" + command"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                        + \" cannot be empty.\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                System.out.println(\"OOPS!!! Incorrect Format. Please follow - \""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                        + \"\u003cevent type\u003e \u003cdescription\u003e / \u003cday/date/time\u003e\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Marks a specified task as done and prints a message for the user."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @param command the command entered by the user."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @throws IndexOutOfBoundsException if the user tries to wokr on an empty"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * list, does not specify index of list, or provides an index bigger than"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * the size of the list."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private void markTaskAsDone(String command) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            // obtain the index of the task to be marked as done from the input"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            String taskNumber \u003d command.split(\" \")[1];"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(taskNumber) - 1;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            // retrieve task from list, mark as done, and inform the user"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            Task currentTask \u003d this.tasks.get(taskIndex);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            if (!currentTask.getIsDone()) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                currentTask.setTaskAsDone(true);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                System.out.println(\"   \" + currentTask);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                System.out.println(\"This task has already been done!\");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        } catch (IndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            if (this.tasks.isEmpty()) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                // if the user is trying this command on an empty task list"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                System.out.println(\"No tasks in your list to complete!\");"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            } else if (command.equalsIgnoreCase(\"done\")) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                // if the user did not specify the index of the task to be marked"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                System.out.println(\"Please specify the index of the task \""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                        + \"you wish to mark as completed!\");"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                // if the user specified an index larger than the size of the"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                // task list"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                System.out.println(\"OOPS! You\u0027ve specified an index that is \""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                        + \"bigger than the size of your list!\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Deletes a specified task from the list and informs the user."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @param command the command entered  by the user."
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @throws IndexOutOfBoundsException if the user tries to wokr on an empty"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *      * list, does not specify index of list, or provides an index bigger than"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *      * the size of the list."
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private void deleteTask(String command) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            // obtain the index of the task to be deleted"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            String taskNumber \u003d command.split(\" \")[1];"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(taskNumber) - 1;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            // retrieve task to be removed, remove it, and inform the user"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            Task taskToRemove \u003d this.tasks.get(taskIndex);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            this.tasks.remove(taskIndex);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            System.out.println(\"   \" + taskToRemove);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            System.out.format(\"Now you have %d tasks in the list\\n\", this.tasks.size());"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        } catch (IndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            // if the user tries to delete from an empty list"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            if (this.tasks.isEmpty()) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                System.out.println(\"No tasks in your list to delete!\");"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            } else if (command.equalsIgnoreCase(\"delete\")) {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                // if the user does not specify the index of the item to be deleted"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                System.out.println(\"Please specify the index of the task \""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                        + \"you wish to delete!\");"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                // if the user specifies an index that is bigger than the size"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                // of the task list"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                System.out.println(\"OOPS! You\u0027ve specified an index that is \""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                        + \"bigger than the size of your list!\");"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "atharvjoshi": 289,
      "-": 7
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * Encapsulates a event-type task handled by Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * A event differs from other tasks because it has a date on which it is to"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * occur."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * @author atharvjoshi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * @version CS2103 AY19/20 Sem 1 iP Week 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /** The date or time at which event is slated to occur */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private String dateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Creates an event with a description and date/time information."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @param description string representing description of event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @param dateTime string representing when the event will occur."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public Event(String description, String dateTime) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Return a string representation of this event."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @return string representing this event."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at:\" + dateTime + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "atharvjoshi": 32
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * Driver class for Duke, a personal assistant chatbot."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * @author atharvjoshi"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * @version CS2103 AY19/20 Sem 1 iP Week 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * The main method for Duke."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Creates a new instance of Duke, asks Duke to greet user, and then reads"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * data from stdin. This input is then handed over to Duke for processing."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @param args command(s) from the user"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        // create an instance of Duke and let Duke greet the user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        duke.greet();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        // scan for commands from the over and send them to Duke for processing"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        while (duke.getIsListening()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            duke.processCommand(scanner.nextLine());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "atharvjoshi": 29
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * Encapsulates a task handled by Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * A task has a description and a status, for each of which getter methods have"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * been provided. The task status can also be updated when a task is done."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * @author atharvjoshi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * @version CS2103 AY19/20 Sem 1 iP Week 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /** The description of the task */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /** The status of the task - done or not done */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Creates a task with a description and a status."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @param description string representing the description of this task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Retrieves the unicode icon indicating task status."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @return tick mark if task is done or cross mark if task is not done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private String getTaskStatusIcon() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        return (this.isDone ? \"\\u2713\" : \"\\u2718\"); // return tick or X symbols"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Get current status of this task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @return true if current task is done, false if current task is not done."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Changes the status of the task to \u0027done\u0027."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @param hasBeenDone boolean to indicate that the task has been completed."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public void setTaskAsDone(boolean hasBeenDone) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        this.isDone \u003d hasBeenDone;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Return a string representation of this task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @return string representing this task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        return \"[\" + this.getTaskStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "atharvjoshi": 63
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * Encapsulates a todo-type task handled by Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * A todo differs from other tasks because it has no due date, it simply has"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * a task description."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * @author atharvjoshi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * @version CS2103 AY19/20 Sem 1 iP Week 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Create a todo with a description."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @param description string representing description of this todo."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Return a string representation of this todo."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @return string representing this todo."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "atharvjoshi": 29
    }
  }
]
