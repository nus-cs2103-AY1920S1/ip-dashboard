[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "test {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kzrthikz": 22,
      "-": 15
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "E, 0, return, Mon"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "T, 0, return"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "T, 0, hello"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "T, 0, return book"
      }
    ],
    "authorContributionMap": {
      "Kzrthikz": 4
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    protected String month;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    protected String monthInWords;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    protected String year;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    protected String timeInString;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    protected int hour;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    protected int min;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    protected int time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    protected int intDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    protected int intMonth;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    protected int intYear;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    protected String amOrpm;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    protected  String[] suffixes \u003d"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            {  \"0th\",  \"1st\",  \"2nd\",  \"3rd\",  \"4th\",  \"5th\",  \"6th\",  \"7th\",  \"8th\",  \"9th\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    \"10th\", \"11th\", \"12th\", \"13th\", \"14th\", \"15th\", \"16th\", \"17th\", \"18th\", \"19th\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    \"20th\", \"21st\", \"22nd\", \"23rd\", \"24th\", \"25th\", \"26th\", \"27th\", \"28th\", \"29th\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    \"30th\", \"31st\" };"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    protected String[] months \u003d"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            {  \" \", \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    \"October\", \"November\", \"December\" };"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    protected String formattedTime;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    protected String formattedDate;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    protected String formattedDateAndTime \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        this.by \u003d by.trim();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        /*SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        tasks.addItemsToList(new Deadline(c.getInstruction), formatter */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        String[] arr \u003d this.by.split(\" \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        timeInString \u003d arr[2];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        time \u003d Integer.parseInt(timeInString);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        hour \u003d time / 100;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        min \u003d time % 100;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        if(hour \u003e\u003d 13) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            amOrpm \u003d \"pm\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            hour -\u003d 12;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            amOrpm \u003d \"am\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        if(min \u003d\u003d 0) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            formattedTime \u003d hour + amOrpm + \"\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            formattedTime \u003d hour + \".\" + min + amOrpm;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        String[] splitDates \u003d arr[1].split(\"/\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        int size \u003d splitDates.length;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        if(size \u003d\u003d 3) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            date \u003d splitDates[0];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            month \u003d splitDates[1];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            year \u003d splitDates[2];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            intDate \u003d Integer.parseInt(date);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            date \u003d suffixes[intDate];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            intMonth \u003d Integer.parseInt(month);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            monthInWords \u003d months[intMonth];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            intYear \u003d Integer.parseInt(year);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            formattedDate \u003d date + \" of \" + monthInWords + \" \" + intYear;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            formattedDateAndTime \u003d formattedDate + \", \" + formattedTime;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        if(!formattedDateAndTime.equals(\"\")){"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            this.by \u003d formattedDateAndTime;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return super.getDescription();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by:\" + by + \")\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public static Deadline outputAsDeadline(String lineToRead) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        String[] descriptionNDate \u003d lineToRead.split(\",\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        String description \u003d descriptionNDate[0];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        String by \u003d descriptionNDate[1];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return new Deadline(description, by);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kzrthikz": 91
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * This class tests for chatbot Duke."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        ui.run(tasks, storage);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /*public void runn() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        //PrintWriter writer \u003d new PrintWriter(\"duke.txt\", \"UTF-8\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        while(sc.hasNext()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            String input \u003d sc.next();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            } else if (input.equals(\"list\")) { //go through the arrayList"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                PrintWriter writer \u003d new PrintWriter(\"duke.txt\", \"UTF-8\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\"Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                String output \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                for (int j \u003d 0; j \u003c arr.size(); j++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    System.out.println((j + 1) + \".\" + arr.get(j));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    output +\u003d ((j+1) + \".\" + arr.get(j));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    output +\u003d \"\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                //PrintWriter writer \u003d new PrintWriter(\"duke.txt\", \"UTF-8\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                writer.print(output);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                writer.close();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            } else if (input.equals(\"done\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                int num \u003d sc.nextInt();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                arr.get(num - 1).markAsDone();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(arr.get(num));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            } else if (input.equals(\"todo\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                String descTodo \u003d sc.nextLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                if (descTodo.isEmpty()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    throw new IllegalArgumentException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                arr.add(new Todo(descTodo));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\" \" + arr.get(i));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\"Now you have \" + arr.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                //writer.println(\"\" + arr.get(i));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            } else if (input.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                String rem \u003d sc.nextLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                String[] descriptionNDate \u003d rem.split(\"/by\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                String description \u003d descriptionNDate[0];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                String by \u003d descriptionNDate[1];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                arr.add(new Deadline(description, by));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\" \" + arr.get(i));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\"Now you have \" + arr.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                //writer.println(arr.get(i));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            } else if (input.equals(\"event\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                String rest \u003d sc.nextLine();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                String[] descriptionNAt \u003d rest.split(\"/at\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                String desc \u003d descriptionNAt[0];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                String at \u003d descriptionNAt[1];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                arr.add(new Event(desc, at));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\" \" + arr.get(i));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\"Now you have \" + arr.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                //writer.println(arr.get(i));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            } else if (input.equals(\"delete\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                int deleteNum \u003d sc.nextInt();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                Task toRemove \u003d arr.get(deleteNum - 1);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                arr.remove(deleteNum-1);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\" \" + toRemove);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\"Now you have \" + arr.size() + \" tasks in the list. \");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                i--;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                throw new IllegalArgumentException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        new Duke(\"../../../data/tasks.txt\").run();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /*public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        //PrintWriter writer \u003d new PrintWriter(\"duke.txt\", \"UTF-8\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        while(sc.hasNext()) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            String input \u003d sc.next();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            } else if (input.equals(\"list\")) { //go through the arrayList"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                PrintWriter writer \u003d new PrintWriter(\"duke.txt\", \"UTF-8\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\"Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                String output \u003d \"\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                for (int j \u003d 0; j \u003c arr.size(); j++) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    System.out.println((j + 1) + \".\" + arr.get(j));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    output +\u003d ((j+1) + \".\" + arr.get(j));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    output +\u003d \"\\n\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                //PrintWriter writer \u003d new PrintWriter(\"duke.txt\", \"UTF-8\"));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                writer.print(output);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                writer.close();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            } else if (input.equals(\"done\")) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                int num \u003d sc.nextInt();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                arr.get(num - 1).markAsDone();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(arr.get(num));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            } else if (input.equals(\"todo\")) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                String descTodo \u003d sc.nextLine();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                if (descTodo.isEmpty()) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    throw new IllegalArgumentException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                arr.add(new Todo(descTodo));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\" \" + arr.get(i));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\"Now you have \" + arr.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                //writer.println(\"\" + arr.get(i));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            } else if (input.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                String rem \u003d sc.nextLine();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                String[] descriptionNDate \u003d rem.split(\"/by\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                String description \u003d descriptionNDate[0];"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                String by \u003d descriptionNDate[1];"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                arr.add(new Deadline(description, by));"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\" \" + arr.get(i));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\"Now you have \" + arr.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                //writer.println(arr.get(i));"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            } else if (input.equals(\"event\")) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                String rest \u003d sc.nextLine();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                String[] descriptionNAt \u003d rest.split(\"/at\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                String desc \u003d descriptionNAt[0];"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                String at \u003d descriptionNAt[1];"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                arr.add(new Event(desc, at));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\" \" + arr.get(i));"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\"Now you have \" + arr.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                //writer.println(arr.get(i));"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            } else if (input.equals(\"delete\")) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                int deleteNum \u003d sc.nextInt();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                Task toRemove \u003d arr.get(deleteNum - 1);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                arr.remove(deleteNum-1);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\" \" + toRemove);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\"Now you have \" + arr.size() + \" tasks in the list. \");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                i--;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                throw new IllegalArgumentException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kzrthikz": 182,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public DukeException (Exception ex) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        super(ex);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kzrthikz": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        this.at \u003d at.trim();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at:\" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public static Event outputAsEvent(String lineToRead) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        String[] descriptionNAt \u003d lineToRead.split(\",\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        String desc \u003d descriptionNAt[0];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        String at \u003d descriptionNAt[1];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        System.out.println(desc);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        System.out.println(at);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return new Event(desc, at);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return super.getDescription();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kzrthikz": 29
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public Parser (Storage storage, TaskList tasks) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public void read (String command, Scanner sc) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        System.out.println(command.equals(\"deadline\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                int num \u003d sc.nextInt();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                tasks.taskDone(num-1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\" + tasks.taskPrint(num-1));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                storage.append(tasks.getLast());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            } catch(Exception e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\"Error, you have entered an invalid number\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        } else if(command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                int deleteNum \u003d sc.nextInt();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(tasks.taskPrint(deleteNum -1));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\"Now you have \" + (tasks.size() -1) + \" tasks in the list. \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                tasks.remove(deleteNum-1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                storage.append(tasks.getLast());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            } catch(Exception e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\"Error, you have entered an invalid number\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        } else if(command.equals(\"list\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            tasks.printForList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    String descToDo \u003d sc.nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    if (!descToDo.isEmpty()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                        tasks.add(new Todo(descToDo));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                        storage.append(tasks.getLast());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                        throw new Exception();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    String rem \u003d sc.nextLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    if (!rem.isEmpty()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                        String[] descriptionNDate \u003d rem.split(\"/by\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                        String description \u003d descriptionNDate[0];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                        String by \u003d descriptionNDate[1];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                        tasks.add(new Deadline(description, by));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                        storage.append(tasks.getLast());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                        throw new Exception();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    String remDetails \u003d sc.nextLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    if (!remDetails.isEmpty()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                        String[] descriptionNAt \u003d remDetails.split(\"/at\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                        String desc \u003d descriptionNAt[0];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                        String at \u003d descriptionNAt[1];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                        tasks.add(new Event(desc, at));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                        storage.append(tasks.getLast());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                        throw new Exception();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\" \" + tasks.printLatest());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            } catch(IllegalArgumentException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            } catch(Exception e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(command);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kzrthikz": 85
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private String filename;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public Storage(String filename) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        this.filename \u003d filename;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        //PrintWriter writer \u003d new PrintWriter(filename);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws IOException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        File file \u003d new File(filename);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        System.out.println(file.getCanonicalPath());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        System.out.println(file.exists());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        while(sc.hasNextLine()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            String[] task \u003d sc.nextLine().replaceAll(\", \", \",\").split(\",\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            if(task[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                Task newTask \u003d new Todo(task[2]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                list.add(newTask);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            } else if (task[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                Task newTask \u003d new Deadline(task[2], task[3]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                list.add(newTask);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            } else if(task[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                Task newTask \u003d new Event(task[2], task[3]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                list.add(newTask);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public void append(Task task) throws Exception {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        FileWriter writer \u003d new FileWriter(filename, true);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        String status \u003d task.getIsDone() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            if(task instanceof Todo) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                writer.write(\"T, \" + status + \", \" + task.getDescription() + \"\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            } else if(task instanceof Deadline) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                writer.write(\"D, \" + status + \", \" + task.getDescription() + \", \" + ((Deadline) task).getBy() +  \"\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                writer.write(\"E, \" + status + \", \" + task.getDescription() + \", \" + ((Event) task).getAt() +  \"\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        } catch(Exception ex) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            System.out.println(\"Error in file handling\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /*public void printToOutput(TaskList tasks) throws FileNotFoundException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        PrintStream outputTo \u003d new PrintStream(filename);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        outputTo.println(tasks.printForOutput());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        outputTo.close();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public void emptyOutput() throws FileNotFoundException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        PrintStream outputTo \u003d new PrintStream(filename);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        outputTo.println(\"\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        outputTo.close();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kzrthikz": 63
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        this.description \u003d description.trim();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"]\" + this.getDescription();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kzrthikz": 28
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public TaskList (ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public TaskList () {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public void printForList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        for(int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            System.out.println(i + \".\" + list.get(i-1));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /*public String printForOutput() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        StringBuilder result \u003d new StringBuilder();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        for(int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            result.append(list.get(i-1).printToOutput().append(\"\\n);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return result.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public void taskDone(int x) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        list.get(x).markAsDone();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public Task taskPrint(int x) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return list.get(x);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public Task printLatest() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return list.get(list.size() - 1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public void remove(int x) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "         list.remove(x);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public void add(Task newTask) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        list.add(newTask);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public Task getLast() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return list.get(list.size() -1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kzrthikz": 47
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public static Todo outputAsTodo (String lineToRead) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return new Todo(lineToRead);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return super.getDescription();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kzrthikz": 18
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public void run (TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        Parser parser \u003d new Parser(storage, tasks);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            while (true) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                String command \u003d sc.next();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    parser.read(command, sc);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        } catch(Exception ex) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            System.out.println(\"File not Found\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        System.out.println(\"File not available\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kzrthikz": 28
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kzrthikz": 2
    }
  }
]
