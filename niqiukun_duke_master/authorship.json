[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    archiveVersion \u003d \"0.1\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "run {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 26,
      "-": 15
    }
  },
  {
    "path": "src/main/java/duke/DateUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class DateUtil {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public static Date parseDate(String rawDate) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            Date newDate \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(rawDate);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return newDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            throw new DukeException(\"Cannot parse date/time.\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public static String formatDate(Date date) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return new SimpleDateFormat(\"dd/MM/yyyy HHmm\").format(date);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 20
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            ui.printError(e);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                ui.printError(e);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 42,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 8
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public static Command parse(String rawCommand) throws DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        String[] words \u003d rawCommand.split(\" \");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        switch (words[0]) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return new AddCommand(\"todo\", rawCommand.substring(5));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            StringBuilder argumentBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            String option \u003d \"\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            StringBuilder optionArgumentBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            boolean isOptionArgument \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            for (int i \u003d 1; i \u003c words.length; i++) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                if (words[i].charAt(0) \u003d\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                    option \u003d words[i].substring(1);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                    isOptionArgument \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                } else if (!isOptionArgument) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                    argumentBuilder.append((argumentBuilder.length() \u003d\u003d 0 ? \"\" : \" \") + words[i]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                    optionArgumentBuilder.append((optionArgumentBuilder.length() \u003d\u003d 0 ? \"\" : \" \") + words[i]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return new AddCommand(words[0], argumentBuilder.toString(), option, optionArgumentBuilder.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return new DeleteCommand(Integer.parseInt(rawCommand.substring(7)));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return new DoneCommand(Integer.parseInt(rawCommand.substring(5)));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 40
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public Storage(String path) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.filePath \u003d path;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        file \u003d new File(path);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public String load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        Scanner fileScanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        StringBuilder myBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        while (fileScanner.hasNext()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            myBuilder.append(fileScanner.nextLine() + \"\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return myBuilder.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void save(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            FileWriter writer \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            for (Task t : tasks.getTaskList()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                writer.write(t.toExportFormat() + \"\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            writer.flush();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 45
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public TaskList(String s) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        String[] lines \u003d s.split(\"\\n\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        for (String line : lines) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            addTask(Task.fromImportFormat(line));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public Task getTask(int taskNum) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return list.get(taskNum - 1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            throw new DukeException(\"Index is out of bounds.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void deleteTask(int taskNum) throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            list.remove(taskNum - 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            throw new DukeException(\"Index is out of bounds.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        StringBuilder myBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            Task myTask \u003d list.get(i - 1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            myBuilder.append(i + \".\" + myTask);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            if (i \u003c list.size()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                myBuilder.append(\"\\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return myBuilder.toString();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 62
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void printMessage(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        String[] messages \u003d message.split(\"\\n\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        for (String line : messages) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            System.out.println(\"     \" + line);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void printError(Exception e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        printMessage(\"☹ OOPS!!! \" + e.getMessage());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        printMessage(\"Hello! I\u0027m duke.Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public static String pluralize(String item, Integer quantity) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        if (quantity \u003d\u003d 1) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return \"1 \" + item;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return quantity + \" \" + item + \"s\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 41
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    String commandName;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    String argument;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    String optionName;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    String optionArgument;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public AddCommand(String commandName, String argument) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.commandName \u003d commandName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public AddCommand(String commandName, String argument, String optionName, String optionArgument) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.commandName \u003d commandName;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.optionName \u003d optionName;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.optionArgument \u003d optionArgument;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        Task myTask;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        switch (this.commandName) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            myTask \u003d new Todo(this.argument);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            tasks.addTask(myTask);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            ui.printMessage(\"Got it. I\u0027ve added this duke.task: \\n  \" + myTask + \"\\nNow you have \" + Ui.pluralize(\"duke/task\", tasks.getSize()) + \" in the list.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            if (!this.optionName.equals(\"by\") || this.optionArgument.equals(\"\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                throw new DukeException(\"The date/time of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            myTask \u003d new Deadline(this.argument, DateUtil.parseDate(optionArgument));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            tasks.addTask(myTask);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            ui.printMessage(\"Got it. I\u0027ve added this duke.task: \\n  \" + myTask + \"\\nNow you have \" + Ui.pluralize(\"duke/task\", tasks.getSize()) + \" in the list.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            if (!this.optionName.equals(\"at\") || this.optionArgument.equals(\"\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                throw new DukeException(\"The date/time of an event cannot be empty.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            myTask \u003d new Event(this.argument, DateUtil.parseDate(optionArgument));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            tasks.addTask(myTask);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            ui.printMessage(\"Got it. I\u0027ve added this duke.task: \\n  \" + myTask + \"\\nNow you have \" + Ui.pluralize(\"duke/task\", tasks.getSize()) + \" in the list.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        if (this \u003d\u003d other) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        if (!(other instanceof AddCommand)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        AddCommand command \u003d (AddCommand) other;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        if (this.commandName.equals(\"todo\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return this.commandName.equals(command.commandName)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                    \u0026\u0026 this.argument.equals(command.argument);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return this.commandName.equals(command.commandName)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                    \u0026\u0026 this.argument.equals(command.argument)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                    \u0026\u0026 this.optionArgument.equals(command.optionArgument)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                    \u0026\u0026 this.optionName.equals(command.optionName);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 74
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return this instanceof ExitCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 13
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    int argument;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public DeleteCommand(int argument) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        Task myTask \u003d tasks.getTask(argument);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        ui.printMessage(\"Noted. I\u0027ve removed this duke.task: \\n  \" + myTask + \"\\nNow you have \" + Ui.pluralize(\"duke/task\", tasks.getSize() - 1) + \" in the list.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        tasks.deleteTask(argument);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 22
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    int argument;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public DoneCommand(int argument) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        Task myTask \u003d tasks.getTask(argument);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        myTask.markAsDone();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        ui.printMessage(\"Nice! I\u0027ve marked this duke.task as done:\\n  \" + myTask);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 22
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 9
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        StringBuilder myBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        myBuilder.append(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        myBuilder.append(tasks.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        ui.printMessage(myBuilder.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 14
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.DateUtil;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private Date by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public Deadline(String description, Date by) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        if (by.equals(\"\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            throw new DukeException(\"The date/time of \" + this.getTypeNameWithQuantifier() + \" cannot be empty.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    protected String getTypeNameWithQuantifier() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return \"a deadline\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public String toExportFormat() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return \"D | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description + \" | \" + DateUtil.formatDate(this.by);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + DateUtil.formatDate(by) + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 33
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.DateUtil;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private Date at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public Event(String description, Date at) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        if (at.equals(\"\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            throw new DukeException(\"The date/time of \" + this.getTypeNameWithQuantifier() + \" cannot be empty.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    protected String getTypeNameWithQuantifier() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return \"an event\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public String toExportFormat() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return \"E | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description + \" | \" + DateUtil.formatDate(this.at);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + DateUtil.formatDate(at) + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 33
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.DateUtil;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public Task(String description) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            throw new DukeException(\"The description of \" + this.getTypeNameWithQuantifier() + \" cannot be empty.\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    protected abstract String getTypeNameWithQuantifier();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public abstract String toExportFormat();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public static Task fromImportFormat(String text) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        String[] stringArray \u003d text.split(\" \\\\| \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        switch (stringArray[0]) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            t \u003d new Todo(stringArray[2]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            if (stringArray[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                t.markAsDone();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return t;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            t \u003d new Event(stringArray[2], DateUtil.parseDate(stringArray[3]));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            if (stringArray[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                t.markAsDone();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return t;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            t \u003d new Deadline(stringArray[2], DateUtil.parseDate(stringArray[3]));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            if (stringArray[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                t.markAsDone();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return t;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            throw new DukeException(\"Invalid format\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 65
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public Todo(String description) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    protected String getTypeNameWithQuantifier() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return \"a todo\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public String toExportFormat() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return \"T | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 23
    }
  },
  {
    "path": "src/test/java/duke/DateUtilTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class DateUtilTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void testParseDate(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            Calendar calendar \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            calendar.set(Calendar.DAY_OF_MONTH, 28);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            calendar.set(Calendar.MONTH, Calendar.AUGUST);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            calendar.set(Calendar.YEAR, 2019);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            calendar.set(Calendar.HOUR_OF_DAY, 23);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            calendar.set(Calendar.MINUTE, 59);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            calendar.set(Calendar.SECOND, 0);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            calendar.set(Calendar.MILLISECOND, 0);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            Date date \u003d calendar.getTime();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            assertEquals(date, DateUtil.parseDate(\"28/8/2019 2359\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void testFormatDate(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        Calendar calendar \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        calendar.set(Calendar.DAY_OF_MONTH, 28);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        calendar.set(Calendar.MONTH, Calendar.AUGUST);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        calendar.set(Calendar.YEAR, 2019);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        calendar.set(Calendar.HOUR_OF_DAY, 23);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        calendar.set(Calendar.MINUTE, 59);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        calendar.set(Calendar.SECOND, 0);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        calendar.set(Calendar.MILLISECOND, 0);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        Date date \u003d calendar.getTime();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        assertEquals(\"28/08/2019 2359\", DateUtil.formatDate(date));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 42
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void testParseTodo() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            Command command \u003d Parser.parse(\"todo write report\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            assertEquals(new AddCommand(\"todo\", \"write report\"), command);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void testParseDeadline() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            Command command \u003d Parser.parse(\"deadline finish report /by 28/8/2019\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            assertEquals(new AddCommand(\"deadline\", \"finish report\", \"by\", \"28/8/2019\"), command);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void testParseEvent() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            Command command \u003d Parser.parse(\"event project meeting /at 26/8/2019\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            assertEquals(new AddCommand(\"event\", \"project meeting\", \"at\", \"26/8/2019\"), command);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 39
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "       [T][✘] borrow book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     Now you have 1 task in the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "       [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "       [E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     1.[T][✘] borrow book"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     2.[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     3.[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "niqiukun": 34
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 5
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 34
    }
  }
]
