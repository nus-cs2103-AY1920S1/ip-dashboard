[
  {
    "path": "src/main/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "T | 1 | new book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "T | 0 | play dota"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 3
    }
  },
  {
    "path": "src/main/java/duke/DateTimeHelper.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.time.Month;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * DateTimeHelper class formats numerical dates and"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * 24-hour time into readable dates and 12-hour time."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * @author scwaterbear"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "class DateTimeHelper {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Days of a month ordinals."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  private static final String[] ORDINALS \u003d {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      \"0th\", \"1st\", \"2nd\", \"3rd\", \"4th\", \"5th\", \"6th\", \"7th\", \"8th\", \"9th\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      \"10th\", \"11th\", \"12th\", \"13th\", \"14th\", \"15th\", \"16th\", \"17th\", \"18th\", \"19th\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      \"20th\", \"21st\", \"22nd\", \"23rd\", \"24th\", \"25th\", \"26th\", \"27th\", \"28th\", \"29th\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      \"30th\", \"31st\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  };"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Returns a readable date and 12-hour time."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param dateAndTime numerical date and 24-hour time."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @return String readable date and 12-hour time."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @throws DukeException If invalid date time format."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  static String convertDateToString(String dateAndTime) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    String date \u003d dateAndTime.split(\" \")[0];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    String time \u003d dateAndTime.split(\" \")[1];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    return parseDate(date) + \", \" + parseTime(time);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  private static String parseDate(String date) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    format.setLenient(false);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      format.parse(date);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    } catch (ParseException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      throw new DukeException(\"Invalid date format\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    String[] ddmmyyyy \u003d date.split(\"/\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    String month \u003d (Month.of(Integer.parseInt(ddmmyyyy[1]))).toString().toLowerCase();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    return ORDINALS[Integer.parseInt(ddmmyyyy[0])] + \" of \""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        + month.substring(0, 1).toUpperCase()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        + month.substring(1)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        + \" \" + ddmmyyyy[2];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  private static String parseTime(String time) throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    System.out.println(time);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    if (!(time.matches(\"([0-1][0-9][0-5][0-9])\") || time.matches(\"(2[0-3][0-5][0-9])\"))) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      throw new DukeException(\"Invalid time format, must be between 0000 and 2359\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    int timeInt \u003d Integer.parseInt(time);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    if (timeInt \u003c 100) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      return formatTime(timeInt + 1200, \"am\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    } else if (timeInt \u003c 1200) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      return formatTime(timeInt, \"am\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    } else if (timeInt \u003c 1300) { // \u0026\u0026 timeInt \u003e\u003d 1200"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      return formatTime(timeInt, \"pm\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    } else { // \u003e 1300 pm"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      return formatTime(timeInt - 1200, \"pm\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  private static String formatTime(int timeInt, String ampm) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    if (timeInt % 100 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      return (timeInt / 100) + ampm;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      return (timeInt / 100) + \".\" + (timeInt % 100) + ampm;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 84
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * Duke class is the driver class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * @author scwaterbear"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * References to important objects."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  private TaskList tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  private Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Class constructor."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param filePath location of file to load and store data."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  private Duke(String filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    ui \u003d new Ui();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      ui.showLoadingError();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  private void run() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    ui.showWelcome();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    boolean isExit \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    while (!isExit) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      } catch (DukeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Main method for Duke."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public static void main(String[] args) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    new Duke(\"/Users/stephenchua/duke/src/main/data/duke.txt\").run();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "scwaterbear": 57
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.command.UnknownCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * Parser class deals with making sense of the user command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * @author scwaterbear"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "class Parser {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Categorizes a broad range of user input to a narrower set of commands."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param fullCommand user input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @return Command user command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @throws DukeException If IndexOutOfBoundException has occurred"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   *                        or user input is invalid or unknown."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      return new ListCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    } else if (fullCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      return new ExitCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    } else if (fullCommand.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        fullCommand \u003d fullCommand.substring(5);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        throw new DukeException(\" ☹ OOPS!!! Todos must have a description\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      return new AddCommand(new Todo(fullCommand));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    } else if (fullCommand.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        fullCommand \u003d fullCommand.substring(9);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        throw new DukeException(\" ☹ OOPS!!! Deadlines must have a description\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      String[] arguments \u003d fullCommand.split(\"/by\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      if (arguments.length !\u003d 2) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        throw new DukeException(\" ☹ OOPS!!! Deadlines must have exactly one deadline\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      return new AddCommand("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "          new Deadline("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "              arguments[0].trim(),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "              DateTimeHelper.convertDateToString(arguments[1].trim())"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "          )"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      );"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    } else if (fullCommand.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        fullCommand \u003d fullCommand.substring(6);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        throw new DukeException(\" ☹ OOPS!!! Events must have a description\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      String[] arguments \u003d fullCommand.split(\"/at\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      if (arguments.length !\u003d 2) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        throw new DukeException(\" ☹ OOPS!!! Events must have exactly one time\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      return new AddCommand("
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "          new Event("
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "              arguments[0].trim(),"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "              DateTimeHelper.convertDateToString(arguments[1].trim())"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "          )"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      );"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    } else if (fullCommand.matches(\"delete ([1-9]|[1-9][0-9]|100)\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      int deleteIndex \u003d Integer.parseInt(fullCommand.substring(7));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      return new DeleteCommand(deleteIndex - 1);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    } else if (fullCommand.matches(\"done ([1-9]|[1-9][0-9]|100)\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      int displayNumber \u003d Integer.parseInt(fullCommand.substring(5));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      return new DoneCommand(displayNumber - 1);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    } else if (fullCommand.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        fullCommand \u003d fullCommand.substring(5);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return new FindCommand(fullCommand);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        throw new DukeException(\" ☹ OOPS!!! You must input a search term\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      return new UnknownCommand();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 103
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * Storage class deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * @author scwaterbear"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  private File file;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Class constructor."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param filePath location of file to load and store data."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public Storage(String filePath) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    file \u003d new File(filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Loads a list of tasks from a file. If no file is present,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * a new file is created and an empty list is returned."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @return List list of tasks."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @throws DukeException If there has been IOException while performing an operation on the file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      if (!file.createNewFile()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        //read file contents into List"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        FileReader fr \u003d new FileReader(file);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "          String[] lines \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "          boolean isDone;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "          if (lines[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            isDone \u003d true;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "          } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            isDone \u003d false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "          }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "          if (lines[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            tasks.add(new Todo(lines[2], isDone));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "          } else if (lines[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            tasks.add(new Deadline(lines[2], lines[3], isDone));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "          } else if (lines[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            tasks.add(new Event(lines[2], lines[3], isDone));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "          } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            System.out.println(\"Corrupted data.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "          }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        br.close();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        fr.close();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    } catch (IOException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      throw new DukeException(\"There has been an IOException while creating the data file.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    return tasks;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Saves a list of tasks to a file."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param tasks a list of tasks."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @throws DukeException If there has been IOException while performing an operation on the file."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public void saveDataToFile(List\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    //write to a completely new file"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      FileWriter fw \u003d new FileWriter(file, false);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      for (Task task : tasks) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        String s \u003d task.toDataFormat();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        fw.write(s + \"\\n\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      fw.close();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    } catch (IOException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      throw new DukeException(\"Unable to write to datafile.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 102
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * Ui class deals with interactions with the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * @author scwaterbear"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Scanner to receive user input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  private Scanner scanner;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Class constructor."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  Ui() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Prints Duke welcome message."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  void showWelcome() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Returns trimmed user input."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @return String trimmed user input."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  String readCommand() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    return scanner.nextLine().trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Prints a loading error message."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  void showLoadingError() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    System.out.println(\"Error loading data from file\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Prints an error message."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param errorMessage errorMessage to print."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  void showError(String errorMessage) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    System.out.println(errorMessage);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Prints the task list it is supplied with."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param list task list to print."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public void printList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      System.out.println((i + 1) + \".\" + list.get(i).toString());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 77
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * AddCommand class adds a task to the list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * @author scwaterbear"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  private Task task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Class Constructor."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param task task to add."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public AddCommand(Task task) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    this.task \u003d task;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    tasks.addTask(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    System.out.println(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    if (tasks.getSize() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      System.out.println(\"Now you have 1 task in the list.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    persistState(tasks, storage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 41
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * Command class is an abstract class that other command classes inherit from."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * @author scwaterbear"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Performs action determined in subclass."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Sends signal to exit Duke."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @return boolean if Duke should exit."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Writes changes to task list to file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param tasks   list of tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param storage storage."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @throws DukeException If error saving data to file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  void persistState(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    storage.saveDataToFile(tasks.getAllTasks());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 39
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * DeleteCommand class deletes a task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * @author scwaterbear"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  private int index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Class Constructor."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param index list task identifier."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    this.index \u003d index;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    Task t \u003d tasks.removeTask(index);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    System.out.println(t);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    if (tasks.getSize() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      System.out.println(\"Now you have 1 task in the list.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    persistState(tasks, storage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 41
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * DoneCommand class sets a task to be done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * @author scwaterbear"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  private int index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Class Constructor."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param index list task identifier."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public DoneCommand(int index) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    this.index \u003d index;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Executes the done command and persists state to disk."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param tasks list of tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param ui ui."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param storage storage."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @throws DukeException If there is no such task in tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      Task t \u003d tasks.setIsDone(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      System.out.println(t);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      throw new DukeException(\" ☹ OOPS!!! There is no task number \" + (index + 1));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    persistState(tasks, storage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 46
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * ExitCommand class exits the program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * @author scwaterbear"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Class Constructor."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public ExitCommand() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    return true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 31
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  private String keyword;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    List\u003cTask\u003e foundTasks \u003d tasks.getTasksWithKeywords(keyword);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    ui.printList(foundTasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    persistState(tasks, storage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 25
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * ListCommand class lists user\u0027s tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * @author scwaterbear"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Class Constructor."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public ListCommand() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    ui.printList(tasks.getAllTasks());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 23
    }
  },
  {
    "path": "src/main/java/duke/command/UnknownCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * UnknownCommand class triggers a response to a user\u0027s unknown input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * @author scwaterbear"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class UnknownCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Class Constructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public UnknownCommand() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    throw new DukeException(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 26
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * DukeException class represents errors specific to Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * @author scwaterbear"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  private String errorDescription;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Class constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param errorDescription description of the error."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public DukeException(String errorDescription) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    super(errorDescription);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    this.errorDescription \u003d errorDescription;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * {@inheritDoc}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public String getMessage() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    return errorDescription;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 29
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * Deadline class represents an act a user wants to perform by a specified date."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * @author scwaterbear"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  private String by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Class constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param description description of deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param by          target date and time."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Class constructor that must set deadline status when instantiated."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param description description of deadline."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param by          target date and time."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param isDone      set status of deadline."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public Deadline(String description, String by, boolean isDone) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    super(description, isDone);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    this.by \u003d by;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * {@inheritDoc}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * {@inheritDoc}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public String toDataFormat() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    return \"D\" + super.toDataFormat() + \" | \" + by;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 50
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * Event class represents a meeting a user wants to attend at a specified date."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * @author scwaterbear"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  private String at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Class constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param description description of event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param at          event date and time."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public Event(String description, String at) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    this.at \u003d at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Class constructor."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param description description of event."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param at          event date and time."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param isDone      status of event."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public Event(String description, String at, boolean isDone) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    super(description, isDone);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    this.at \u003d at;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * {@inheritDoc}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * {@inheritDoc}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public String toDataFormat() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    return \"E\" + super.toDataFormat() + \" | \" + at;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 50
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * Task class represents an act a user wants to perform."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * @author scwaterbear"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  private String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Class constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param description description of task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  Task(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Class constructor that must set task status when instantiated."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param description description of task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param isDone      set status of task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    this.description \u003d description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  private String getStatusIcon() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  boolean hasKeywordsInDescription(String keyword) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    return description.contains(keyword);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Returns a string representation of the task status and description."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @return String task status and description."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Returns a string representation of the task status and description for data storage."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @return String task status and description."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public String toDataFormat() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    int isDoneInt;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    if (isDone) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      isDoneInt \u003d 1;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      isDoneInt \u003d 0;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    return \" | \" + isDoneInt + \" | \" + description;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 66
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * TaskList class manages the task list and has operations to add/delete/modify tasks in the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * @author scwaterbear"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * List of tasks for the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Class constructor."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public TaskList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    this.tasks \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Class constructor that loads existing tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param tasks list of tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Returns a list of tasks which descriptions match the keyword."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param keyword the search term."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @return List Found tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public List\u003cTask\u003e getTasksWithKeywords(String keyword) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    List\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    for (Task task : tasks) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      if (task.hasKeywordsInDescription(keyword)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        foundTasks.add(task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    return foundTasks;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Adds a task to the task list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param t task to add."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public void addTask(Task t) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    tasks.add(t);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Modifies task status to done."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param index task identifier."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @return Task the task marked as done."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @throws DukeException If there is no such task in the list."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public Task setIsDone(int index) throws DukeException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      tasks.get(index).isDone \u003d true;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      return tasks.get(index);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      throw new DukeException(\" ☹ OOPS!!! There is no task number \" + (index + 1));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Removes the specified task from the task list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param index task identifier."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @return Task the task removed."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @throws DukeException If there is no such task in the list."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public Task removeTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      return tasks.remove(index);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      throw new DukeException(\" ☹ OOPS!!! There is no task number \" + (index + 1));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Returns all tasks in the task list."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @return List list of all tasks."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public List\u003cTask\u003e getAllTasks() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    return tasks;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Returns size of task list."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @return int size of task list."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public int getSize() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    return tasks.size();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 112
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * Todo class represents an act a user wants to perform at an unspecified date."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * @author scwaterbear"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Class constructor."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param description description of todo."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public Todo(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * Class constructor that must set todo status when instantiated."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param description description of todo."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * @param isDone      set status of todo."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    super(description, isDone);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * {@inheritDoc}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   * {@inheritDoc}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "   */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public String toDataFormat() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    return \"T\" + super.toDataFormat();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 44
    }
  },
  {
    "path": "src/test/data/test.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "T | 0 | read interesting stuff"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "T | 0 | build some cool things"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 2
    }
  },
  {
    "path": "src/test/java/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public void load_hasExistingFile_success() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      Storage storage \u003d new Storage(\"/Users/stephenchua/duke/src/test/data/test.txt\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      List\u003cTask\u003e expected \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      expected.add(new Todo(\"read interesting stuff\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      expected.add(new Todo(\"build some cool things\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      for (int i \u003d 0; i \u003c expected.size(); i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        assertEquals(expected.get(i).toString(), storage.load().get(i).toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    } catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      fail();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  //test create a new file if there is no file at that location"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public void load_noExistingFile_success() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    String filePath \u003d \"/Users/stephenchua/duke/src/test/data/nonexistentfile.txt\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      storage.load();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      assertTrue(f.exists() \u0026\u0026 !f.isDirectory());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    } catch (DukeException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      fail();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    } finally {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      f.delete();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 49
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  public void setIsDone_emptyArrayList_dukeExceptionThrown() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    int testIndex \u003d 1;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      tasks.setIsDone(1);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      fail();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    } catch (DukeException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      assertEquals(\" ☹ OOPS!!! There is no task number \" + (testIndex + 1), e.getMessage());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 22
    }
  }
]
