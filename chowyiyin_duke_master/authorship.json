[
  {
    "path": "src/main/java/Date.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import java.time.Month;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import java.util.function.DoubleUnaryOperator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "public class Date {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected String unprocessedDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected int day;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected Month month;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected int year;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public Date(String unprocessedDate) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        this.unprocessedDate \u003d unprocessedDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        processDate();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void processDate() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (unprocessedDate.equals(\"\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        String[] dateSplit \u003d unprocessedDate.split(\"/\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (dateSplit.length \u003c 3) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! Please specify the date\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    \" in the format date/month/year e.g. 2/12/2019.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        int monthNumber \u003d Integer.parseInt(dateSplit[1]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (isValidMonth(monthNumber)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            this.month \u003d Month.of(monthNumber);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! Please input a valid month.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        this.year \u003d Integer.parseInt(dateSplit[2]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        int inputDay \u003d Integer.parseInt(dateSplit[0]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (isValidDay(inputDay, monthNumber, year)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            this.day \u003d inputDay;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! Please input a valid day.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public boolean isValidMonth(int monthNumber) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (monthNumber \u003e\u003d 1 \u0026\u0026 monthNumber \u003c\u003d 12) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public boolean isValidDay(int day, int monthNumber, int year) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        switch(monthNumber) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        case 5:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        case 7:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        case 8:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        case 10:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        case 12:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            if (day \u003e\u003d 1 \u0026\u0026 day \u003c\u003d 31) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        case 4:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        case 6:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        case 9:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        case 11:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            if (day \u003e\u003d 1 \u0026\u0026 day \u003c\u003d 30) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            if (isLeapYear(year) \u0026\u0026 day \u003e\u003d 1 \u0026\u0026 day \u003c\u003d 29) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            } else if (day \u003e\u003d 1 \u0026\u0026 day \u003c\u003d 28) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public boolean isLeapYear(int year) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (year % 400 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else if (year % 100 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else if (year % 4 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public int getDay() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return day;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public Month getMonth() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return month;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public int getYear() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return year;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (month \u003d\u003d null) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (day % 10 \u003d\u003d 1 \u0026\u0026 day !\u003d 11) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return day + \"st of \" + month + \" \" + year;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else if (day % 10 \u003d\u003d 2 \u0026\u0026 day !\u003d 12) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return day + \"nd of \" + month + \" \" + year;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return day + \"th of \" + month + \" \" + year;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiyin": 122
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected Time time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public Deadline(String description, Date date, Time time) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date.toString() + (time.toString().equals(\"\") ? \"\" : \", \" + time.toString()) + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiyin": 16
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public static ArrayList\u003cTask\u003e actions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        drawLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        greetUser();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        drawLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        readInputs(input);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public static void readInputs(Scanner input) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        while (input.hasNext()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                String userInput \u003d input.nextLine().replaceAll(\"\\\\s+\", \" \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                if (userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    sayBye();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    input.close();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                } else if (userInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    printList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                } else if (userInput.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    String details \u003d userInput.replaceFirst(\"todo\", \"\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    addToDo(details);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                } else if (userInput.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    String details \u003d userInput.replaceFirst(\"deadline\", \"\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    addDeadline(details);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                } else if (userInput.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    String details \u003d userInput.replaceFirst(\"event\", \"\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    addEvent(details);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                } else if (userInput.contains(\"done\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    String[] doneDetails \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    if (doneDetails.length \u003c 2) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                        throw new DukeException(\"\\u2639 OOPS!!! The description of done cannot be empty.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    String listActionIndex \u003d doneDetails[1];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    if (Integer.parseInt(listActionIndex) \u003e actions.size()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                        throw new DukeException(\"\\u2639 OOPS!!! This item does not exist.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    int arrayActionIndex \u003d Integer.parseInt(listActionIndex) - 1;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    markAsDone(arrayActionIndex);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                } else if (userInput.contains(\"delete\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    String[] deleteDetails \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    if (deleteDetails.length \u003c 2) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                        throw new DukeException(\"\\u2639 OOPS!!! The description of delete cannot be empty.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    String listActionIndex \u003d deleteDetails[1];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    if (Integer.parseInt(listActionIndex) \u003e actions.size()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                        throw new DukeException(\"\\u2639 OOPS!!! This item does not exist.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    int arrayActionIndex \u003d Integer.parseInt(listActionIndex) - 1;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    deleteFromList(arrayActionIndex);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                }else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            catch (DukeException exception) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                printException(exception);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public static void printException(DukeException exception) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        String message \u003d exception.getMessage();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        drawLine();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        System.out.println(\"\\t \" + message);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        drawLine();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public static void writeToHardDisk() throws DukeException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter("
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                \"C:\\\\Users\\\\Yi Yin\\\\Documents\\\\Year 2\\\\Semester 1\\\\CS2103\\\\duke\\\\data\\\\duke.txt\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            for (int i \u003d 0; i \u003c actions.size(); i++) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                fileWriter.write(actions.get(i).toString() + \"\\n\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            throw new DukeException(\"\\u2539 OOPS!!! Something went wrong :\" + exception.getMessage());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public static void deleteFromList(int index) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        Task action \u003d actions.remove(index);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        drawLine();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        System.out.println(\"\\t Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        System.out.println(\"\\t\\t \" + action);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        int numberOfTasks \u003d actions.size();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        System.out.println(\"\\t Now you have \" + numberOfTasks + (numberOfTasks \u003d\u003d 1 ? \" task\": \" tasks\") + \" in the list.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        drawLine();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            writeToHardDisk();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            printException(exception);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public static void printAddedTask(Task task) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        drawLine();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        System.out.println(\"\\t Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        System.out.println(\"\\t\\t \" + task);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        int numberOfTasks \u003d actions.size();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        System.out.println(\"\\t Now you have \" + numberOfTasks + (numberOfTasks \u003d\u003d 1 ? \" task\": \" tasks\") + \" in the list.\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        drawLine();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public static void addToDo(String details) throws DukeException{"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (details.trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        Task todo \u003d new Todo(details.trim());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        actions.add(todo);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        printAddedTask(todo);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            writeToHardDisk();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            printException(exception);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public static void addDeadline(String details) throws DukeException {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        String[] detailsSplit \u003d details.split(\"/by\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (detailsSplit.length \u003d\u003d 0 || detailsSplit[0].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (detailsSplit.length \u003c 2 || detailsSplit[1].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! The description of a deadline requires a task and/or a due date\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        String action \u003d detailsSplit[0].trim();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        String deadline \u003d detailsSplit[1].trim();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        String[] dateAndTimeSplit \u003d deadline.split(\" \");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            String date \u003d dateAndTimeSplit[0];"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            Date deadlineDate \u003d new Date(date);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            Time deadlineTime;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            if (dateAndTimeSplit.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                deadlineTime \u003d new Time(\"\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            } else if (dateAndTimeSplit.length \u003d\u003d 2){"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                deadlineTime \u003d new Time(dateAndTimeSplit[1]);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            Task taskDeadline \u003d new Deadline(action, deadlineDate, deadlineTime);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            actions.add(taskDeadline);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            printAddedTask(taskDeadline);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            writeToHardDisk();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            printException(exception);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public static void addEvent(String details) throws DukeException{"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        String[] detailsSplit \u003d details.split( \"/at\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (detailsSplit.length \u003d\u003d 0 || detailsSplit[0].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (detailsSplit.length \u003c 2 || detailsSplit[1].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! The description of an event requires a task and/or a scheduled time\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        String event \u003d detailsSplit[0].trim();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        String timings \u003d detailsSplit[1].trim();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            String[] startAndEndSplit \u003d timings.split(\"/to\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            if (startAndEndSplit[0].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                throw new DukeException(\"\\u2639 OOPS!!! Please input a start time.\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            String startDetails \u003d startAndEndSplit[0].trim();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            String[] startDateAndTimeSplit \u003d startDetails.split(\" \");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            String startDate \u003d startDateAndTimeSplit[0];"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            String startTime \u003d \"\";"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            if (startDateAndTimeSplit.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                startTime \u003d startDateAndTimeSplit[1];"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            } else if (startDateAndTimeSplit.length \u003e 2) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            String endDetails \u003d \"\";"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            String endDate \u003d \"\";"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            String endTime \u003d \"\";"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            if (startAndEndSplit.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                endDetails \u003d startAndEndSplit[1].trim();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                String[] endDateAndTimeSplit \u003d endDetails.split(\" \");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                endDate \u003d endDateAndTimeSplit[0];"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                if (endDateAndTimeSplit.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    endTime \u003d endDateAndTimeSplit[1];"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                } else if (endDateAndTimeSplit.length \u003e 2){"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            Date eventStartDate \u003d new Date(startDate);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            Time eventStartTime \u003d new Time(startTime);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            Date eventEndDate \u003d new Date(endDate);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            Time eventEndTime \u003d new Time(endTime);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            Task taskEvent \u003d new Event(event, eventStartDate, eventStartTime, eventEndDate, eventEndTime);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            actions.add(taskEvent);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            printAddedTask(taskEvent);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            writeToHardDisk();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            printException(exception);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public static void markAsDone(int index) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        Task action \u003d actions.get(index);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        action.setDone();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        drawLine();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        System.out.println(\"\\t Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        System.out.println(\"\\t\\t \" + action);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        drawLine();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            writeToHardDisk();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            printException(exception);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public static void sayBye() {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        drawLine();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        System.out.println(\"\\t Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        drawLine();"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public static void printList() {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        drawLine();"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        System.out.println(\"\\t Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        for (int i \u003d 0; i \u003c actions.size(); i++) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            System.out.println(\"\\t \" + (i + 1) + \". \" + actions.get(i));"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        drawLine();"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public static void drawLine() {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        System.out.println(\"\\t-----------------------------------------------------------------------------\");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public static void greetUser() {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        System.out.println(\"\\tHello! I\u0027m Duke\\n\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiyin": 239,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected String message;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiyin": 12
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected Date startDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected Time startTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected Date endDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected Time endTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public Event(String description, Date startDate, Time startTime, Date endDate, Time endTime) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        this.startTime \u003d startTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        this.endTime \u003d endTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        output.append(\"[E]\" + super.toString() + \"(at: \" + startDate.toString() + (startTime.toString().equals(\"\") ? \"\" : \", \" + startTime.toString()));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (endDate.toString().equals(\"\") \u0026\u0026 endTime.toString().equals(\"\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            output.append(\")\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            if (endDate.toString().equals(\"\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                output.append(\" to \" + endTime.toString() + \")\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            } else if (endTime.toString().equals(\"\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                output.append(\" to \" + endDate.toString() + \")\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                output.append(\" to \" + endDate.toString() + \" \" + endTime.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiyin": 33
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiyin": 22
    }
  },
  {
    "path": "src/main/java/Time.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "public class Time {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected String unprocessedTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected String processedTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected boolean isAfternoon \u003d false;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public Time(String unprocessedTime) throws DukeException{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        this.unprocessedTime \u003d unprocessedTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        processTime();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void processTime() throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (unprocessedTime.equals(\"\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (unprocessedTime.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            int time \u003d Integer.parseInt(unprocessedTime);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            int hour \u003d time / 100;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            int minute \u003d time % 100;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            if (hour \u003e 23 || minute \u003e 59) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                throw new DukeException(\"\\u2639 OOPS!!! Please input a valid time.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            if (hour \u003e 11) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                hour \u003d hour % 12;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                isAfternoon \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            if (hour \u003d\u003d 0) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                hour \u003d 12;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            StringBuilder timing \u003d new StringBuilder();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            timing.append(hour);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            if (minute !\u003d 0) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                if (minute \u003c 10) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    timing.append(\":\" + \"0\" + minute);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    timing.append(\":\" + minute);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            processedTime \u003d timing.toString();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! Please input a valid time e.g. 1800.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (processedTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (isAfternoon) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return processedTime + \"pm\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return processedTime + \"am\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiyin": 55
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiyin": 11
    }
  }
]
