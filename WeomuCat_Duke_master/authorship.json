[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.8\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "group \u0027weomucat.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "version \u00270.2\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    mainClassName \u003d \"weomucat.duke.Duke\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    version \u003d \"12.0.2\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    modules \u003d [\u0027javafx.controls\u0027, \u0027javafx.fxml\u0027]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "run {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Disable JavaFX Hardware Acceleration"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Hardware Acceleration not working with linux nvidia"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    jvmArgs \"-Dprism.order\u003dsw\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "test {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    toolVersion \u00278.24\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 35,
      "-": 13
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "rootProject.name \u003d \u0027Duke\u0027"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 1
    }
  },
  {
    "path": "src/main/java/weomucat/duke/Controller.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.command.ByeCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.command.DoneCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.command.EventCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.command.FindCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.command.ListCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.command.TodoCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.command.listener.AddTaskCommandListener;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.command.listener.ByeCommandListener;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.command.listener.DeleteTaskCommandListener;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.command.listener.DoneTaskCommandListener;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.command.listener.FindTaskCommandListener;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.command.listener.ListTaskCommandListener;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.UnknownCommandException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.Task;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.ui.listener.UserInputListener;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * A Controller accepts user input and converts it to commands for the model or view."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class Controller implements UserInputListener {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private static final String COMMAND_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private static final String COMMAND_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private static final String COMMAND_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private static final String COMMAND_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private static final String COMMAND_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private static final String COMMAND_FIND \u003d \"find\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private static final String COMMAND_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private static final String COMMAND_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private HashMap\u003cString, Command\u003e commands;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private ArrayList\u003cAddTaskCommandListener\u003e addTaskCommandListeners;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private ArrayList\u003cDeleteTaskCommandListener\u003e deleteTaskCommandListeners;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private ArrayList\u003cDoneTaskCommandListener\u003e doneTaskCommandListeners;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private ArrayList\u003cFindTaskCommandListener\u003e findTaskCommandListeners;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private ArrayList\u003cListTaskCommandListener\u003e listTaskCommandListeners;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private ArrayList\u003cByeCommandListener\u003e byeCommandListeners;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Default constructor."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public Controller() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.addTaskCommandListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.deleteTaskCommandListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.doneTaskCommandListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.findTaskCommandListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.listTaskCommandListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.byeCommandListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.commands \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.commands.put(COMMAND_DEADLINE, new DeadlineCommand() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      public void updateListeners(Task task) throws DukeException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (AddTaskCommandListener listener : addTaskCommandListeners) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "          listener.addTaskCommandUpdate(task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    });"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.commands.put(COMMAND_EVENT, new EventCommand() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      public void updateListeners(Task task) throws DukeException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (AddTaskCommandListener listener : addTaskCommandListeners) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "          listener.addTaskCommandUpdate(task);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    });"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.commands.put(COMMAND_TODO, new TodoCommand() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      public void updateListeners(Task task) throws DukeException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (AddTaskCommandListener listener : addTaskCommandListeners) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "          listener.addTaskCommandUpdate(task);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    });"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.commands.put(COMMAND_DELETE, new DeleteCommand() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      @Override"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      public void updateListeners(int i) throws DukeException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (DeleteTaskCommandListener listener : deleteTaskCommandListeners) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "          listener.deleteTaskCommandUpdate(i);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    });"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.commands.put(COMMAND_DONE, new DoneCommand() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      public void updateListeners(int i) throws DukeException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (DoneTaskCommandListener listener : doneTaskCommandListeners) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "          listener.doneTaskCommandUpdate(i);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    });"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.commands.put(COMMAND_FIND, new FindCommand() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      @Override"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      public void updateListeners(String keyword) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (FindTaskCommandListener listener : findTaskCommandListeners) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "          listener.findTaskCommandUpdate(keyword);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    });"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.commands.put(COMMAND_LIST, new ListCommand() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      @Override"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      public void updateListeners() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (ListTaskCommandListener listener : listTaskCommandListeners) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "          listener.listTaskCommandUpdate();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    });"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.commands.put(COMMAND_BYE, new ByeCommand() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      @Override"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      public void updateListeners() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (ByeCommandListener listener : byeCommandListeners) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "          listener.byeCommandUpdate();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    });"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Add a AddTaskCommandListener to the Controller. When a AddTaskCommand is received, this"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * listener will be notified."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param listener AddTaskCommand listener"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void newAddTaskCommandListener(AddTaskCommandListener listener) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.addTaskCommandListeners.add(listener);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Add a DeleteTaskCommandListener to the Controller. When a DeleteTaskCommand is received, this"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * listener will be notified."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param listener DeleteTaskCommand listener"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void newDeleteTaskCommandListener(DeleteTaskCommandListener listener) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.deleteTaskCommandListeners.add(listener);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Add a DoneTaskCommandListener to the Controller. When a DoneTaskCommand is received, this"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * listener will be notified."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param listener DoneTaskCommand listener"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void newDoneTaskCommandListener(DoneTaskCommandListener listener) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.doneTaskCommandListeners.add(listener);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Add a FindTaskCommandListener to the Controller. When a FindTaskCommand is received, this"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * listener will be notified."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param listener FindTaskCommand listener"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void newFindTaskCommandListener(FindTaskCommandListener listener) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.findTaskCommandListeners.add(listener);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Add a ListTaskCommandListener to the Controller. When a ListTaskCommand is received, this"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * listener will be notified."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param listener ListTaskCommand listener"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void newListTaskCommandListener(ListTaskCommandListener listener) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.listTaskCommandListeners.add(listener);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Add a ByeCommandListener to the Controller. When a ByeCommand is received, this listener will"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * be notified."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param listener ByeCommand listener"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void newByeCommandListener(ByeCommandListener listener) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.byeCommandListeners.add(listener);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void byeUpdate() throws DukeException {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    commands.get(COMMAND_BYE).run();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void userInputUpdate(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assert userInput !\u003d null;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Initialize parser for this line of user input."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Parser parser \u003d new Parser(userInput);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Get the command of the user input."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String commandString \u003d parser.getCommand();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Resolve the string command to a Command object."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Command command \u003d commands.get(commandString);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Command not known, throw an exception."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    if (command \u003d\u003d null) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      throw new UnknownCommandException();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Get what parameters the command accepts."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String[] parameterOptions \u003d command.getParameterOptions();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Parse the parameters from user input."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    HashMap\u003cString, String\u003e parameters \u003d parser.parseParameters(parameterOptions);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Set the parameters to the Command object."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    command.setParameters(parser.getBody(), parameters);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Finally, run the command."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    command.run();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 221
    }
  },
  {
    "path": "src/main/java/weomucat/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.StorageException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.storage.TaskListStorage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.ui.UiList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.ui.cli.CommandLineUi;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.ui.gui.GraphicalUi;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Duke is a personal assistant chatbot that is able to remember tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  // Amount of time in milliseconds to sleep in all threads."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public static final long THREAD_SLEEP_DURATION \u003d 100;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public static final Locale LOCALE \u003d Locale.ENGLISH;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public static final String DATETIME_PARSE_PATTERN \u003d \"ddMMyy HHmm\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public static final String DATETIME_FORMAT_PATTERN \u003d \"dd MMMM yyyy, hh:mma, O\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private Controller controller;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private TaskList taskList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private TaskListStorage storage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private UiList uiList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public static void main(String[] args) throws Exception {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    new Duke(\"data/tasks\").run();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Default constructor."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param taskListPath Relative path of taskList database."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public Duke(String taskListPath) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assert taskListPath !\u003d null;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.controller \u003d new Controller();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.storage \u003d new TaskListStorage(taskListPath);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.uiList \u003d new UiList();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private void run() throws Exception {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Start GUI on separate thread."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    new Thread(() -\u003e Application.launch(GraphicalUi.class)).start();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Block main thread until GraphicalUi instance is created."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    while (GraphicalUi.instance \u003d\u003d null) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      Thread.sleep(THREAD_SLEEP_DURATION);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Add uis to uiList."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.uiList.addUi(new CommandLineUi());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.uiList.addUi(GraphicalUi.instance);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Try to initialize TaskList from disk if database exists."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    if (this.storage.exists()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.taskList \u003d new TaskList(this.storage.load());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.uiList.displayMessage(\"Loaded tasks from disk.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      } catch (StorageException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.uiList.displayError(e.getMessage());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Set up event listeners"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.uiList.newUserInputListener(this.controller);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.controller.newAddTaskCommandListener(this.taskList);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.controller.newDeleteTaskCommandListener(this.taskList);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.controller.newDoneTaskCommandListener(this.taskList);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.controller.newFindTaskCommandListener(this.taskList);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.controller.newListTaskCommandListener(this.taskList);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.controller.newByeCommandListener(this.uiList);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.taskList.newAddTaskListener(this.storage);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.taskList.newDeleteTaskListener(this.storage);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.taskList.newDoneTaskListener(this.storage);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.taskList.newAddTaskListener(this.uiList);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.taskList.newDeleteTaskListener(this.uiList);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.taskList.newDoneTaskListener(this.uiList);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.taskList.newFindTaskListener(this.uiList);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.taskList.newListTaskListener(this.uiList);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Greet user"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.uiList.displayMessage(\" ____        _        \","
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        \"|  _ \\\\ _   _| | _____ \","
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        \"| | | | | | | |/ / _ \\\\\","
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        \"| |_| | |_| |   \u003c  __/\","
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        \"|____/ \\\\__,_|_|\\\\_\\\\___|\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.uiList.displayMessage(\"Hello! I\u0027m Duke!\", \"What can I do for you?\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Tell uis to start listening for user input."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.uiList.acceptUserInput();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 100,
      "-": 1
    }
  },
  {
    "path": "src/main/java/weomucat/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * A Parser is responsible for deciphering user input into: - Command - Body (i.e default parameter)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * - Parameters"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private String command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private String body;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private String[] tokens;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Default constructor."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param input User input to decipher."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public Parser(String input) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assert input !\u003d null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Split input by whitespace."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.tokens \u003d input.trim().split(\" \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    LinkedList\u003cString\u003e tokens \u003d new LinkedList\u003c\u003e(Arrays.asList(this.tokens));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.command \u003d tokens.pollFirst();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.body \u003d String.join(\" \", tokens).trim();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Get command of input."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @return Deciphered command"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public String getCommand() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    return command;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * If the command expects parameters, run this after parseParameters."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @return Deciphered body"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public String getBody() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    return body;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Parse a list of parameters which the command uses."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param parameters The list of parameters"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @return A HashMap of (parameter name, parameter value)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public HashMap\u003cString, String\u003e parseParameters(String... parameters) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assert parameters !\u003d null;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    LinkedList\u003cString\u003e tokens \u003d new LinkedList\u003c\u003e(Arrays.asList(this.tokens));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Remove command from tokens."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    tokens.pollFirst();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Put parameters into a HashSet for O(1) lookup."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    HashSet\u003cString\u003e lookup \u003d new HashSet\u003c\u003e(Arrays.asList(parameters));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    HashMap\u003cString, String\u003e result \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Initialize result parameters to empty string."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    for (String p : lookup) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      result.put(p, \"\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    LinkedList\u003cString\u003e parameter \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    while (!tokens.isEmpty()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      String token \u003d tokens.pollLast();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      // If token is a parameter, put parameter in result."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      if (lookup.contains(token)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        result.put(token, String.join(\" \", parameter).trim());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Clear for next parameter."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        parameter.clear();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Append token to the parameter."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        parameter.addFirst(token);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Last parameter is body."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.body \u003d String.join(\" \", parameter).trim();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    return result;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 96
    }
  },
  {
    "path": "src/main/java/weomucat/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class ByeCommand implements Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public String[] getParameterOptions() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    return new String[0];"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void setParameters(String body, HashMap\u003cString, String\u003e parameters) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void run() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    updateListeners();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Listeners to update when this Command is run."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public abstract void updateListeners();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 27
    }
  },
  {
    "path": "src/main/java/weomucat/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * A Command takes in certain parameters, then performs a set of instructions."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  String PARAMETER_AT \u003d \"/at\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  String PARAMETER_BY \u003d \"/by\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * The parameters that this Command takes in."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  String[] getParameterOptions();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Sets the parameter of this Command to those from user input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param body       the body from user input. See {@link weomucat.duke.Parser}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param parameters the parameters from user input"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @throws DukeException If any parameter given is wrong."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  void setParameters(String body, HashMap\u003cString, String\u003e parameters) throws DukeException;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Perform some instructions."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @throws DukeException If there is anything wrong with processing."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  void run() throws DukeException;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 34
    }
  },
  {
    "path": "src/main/java/weomucat/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.DeadlineTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class DeadlineCommand implements Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private String by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public String[] getParameterOptions() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    return new String[] {PARAMETER_BY};"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void setParameters(String body, HashMap\u003cString, String\u003e parameters) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.description \u003d body;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.by \u003d parameters.get(PARAMETER_BY);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void run() throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DeadlineTask task \u003d new DeadlineTask(this.description, this.by);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    updateListeners(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Listeners to update when this Command is run."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param task deadline task this Command produces"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @throws DukeException If there is anything wrong with processing."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public abstract void updateListeners(Task task) throws DukeException;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 36
    }
  },
  {
    "path": "src/main/java/weomucat/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.InvalidParameterException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class DeleteCommand implements Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private int index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public String[] getParameterOptions() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    return new String[0];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void setParameters(String body, HashMap\u003cString, String\u003e parameters) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Get index of task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      this.index \u003d Integer.parseInt(body) - 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      throw new InvalidParameterException(\"The index is not a valid number.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void run() throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    updateListeners(this.index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Listeners to update when this Command is run."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param i index of task to delete"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @throws DukeException If there is anything wrong with processing."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public abstract void updateListeners(int i) throws DukeException;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 38
    }
  },
  {
    "path": "src/main/java/weomucat/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.InvalidParameterException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class DoneCommand implements Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private int index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public String[] getParameterOptions() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    return new String[0];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void setParameters(String body, HashMap\u003cString, String\u003e parameters) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Get index of task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      this.index \u003d Integer.parseInt(body) - 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      throw new InvalidParameterException(\"The index is not a valid number.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void run() throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    updateListeners(this.index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Listeners to update when this Command is run."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param i index of task to mark as done"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @throws DukeException If there is anything wrong with processing."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public abstract void updateListeners(int i) throws DukeException;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 38
    }
  },
  {
    "path": "src/main/java/weomucat/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.EventTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class EventCommand implements Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private String at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public String[] getParameterOptions() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    return new String[] {PARAMETER_AT};"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void setParameters(String body, HashMap\u003cString, String\u003e parameters) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.description \u003d body;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.at \u003d parameters.get(PARAMETER_AT);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void run() throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    EventTask task \u003d new EventTask(this.description, this.at);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    updateListeners(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Listeners to update when this Command is run."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param task event task this Command produces"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @throws DukeException If there is anything wrong with processing."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public abstract void updateListeners(Task task) throws DukeException;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 37
    }
  },
  {
    "path": "src/main/java/weomucat/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class FindCommand implements Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private String keyword;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public String[] getParameterOptions() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    return new String[0];"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void setParameters(String body, HashMap\u003cString, String\u003e parameters) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.keyword \u003d body;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void run() throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    updateListeners(keyword);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Listeners to update when this Command is run."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param keyword search string to look for in tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public abstract void updateListeners(String keyword);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 31
    }
  },
  {
    "path": "src/main/java/weomucat/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class ListCommand implements Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public String[] getParameterOptions() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    return new String[0];"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void setParameters(String body, HashMap\u003cString, String\u003e parameters) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void run() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    updateListeners();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Listeners to update when this Command is run."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @throws DukeException If there is anything wrong with processing."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public abstract void updateListeners() throws DukeException;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 29
    }
  },
  {
    "path": "src/main/java/weomucat/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.TodoTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class TodoCommand implements Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public String[] getParameterOptions() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    return new String[0];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void setParameters(String body, HashMap\u003cString, String\u003e parameters) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.description \u003d body;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void run() throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    TodoTask task \u003d new TodoTask(this.description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    updateListeners(task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Listeners to update when this Command is run."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param task todo task this Command produces"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @throws DukeException If there is anything wrong with processing."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public abstract void updateListeners(Task task) throws DukeException;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 35
    }
  },
  {
    "path": "src/main/java/weomucat/duke/command/listener/AddTaskCommandListener.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.command.listener;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * When AddTaskCommand is run, this listener will be notified."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "@FunctionalInterface"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface AddTaskCommandListener {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * When AddTaskCommand is run, this method will be called."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param task the Task that was added"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @throws DukeException If there is anything wrong with processing."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  void addTaskCommandUpdate(Task task) throws DukeException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 19
    }
  },
  {
    "path": "src/main/java/weomucat/duke/command/listener/ByeCommandListener.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.command.listener;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * When ByeCommand is run, this listener will be notified."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "@FunctionalInterface"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface ByeCommandListener {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * When ByeCommand is run, this method will be called."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  void byeCommandUpdate();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 13
    }
  },
  {
    "path": "src/main/java/weomucat/duke/command/listener/DeleteTaskCommandListener.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.command.listener;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * When DeleteTaskCommand is run, this listener will be notified."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "@FunctionalInterface"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface DeleteTaskCommandListener {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * When AddTaskCommand is run, this method will be called."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param i index of task to delete"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @throws DukeException If there is anything wrong with processing."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  void deleteTaskCommandUpdate(int i) throws DukeException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 18
    }
  },
  {
    "path": "src/main/java/weomucat/duke/command/listener/DoneTaskCommandListener.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.command.listener;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * When DoneTaskCommand is run, this listener will be notified."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "@FunctionalInterface"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface DoneTaskCommandListener {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * When DoneTaskCommand is run, this method will be called."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param i index of the task to mark as done"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @throws DukeException If there is anything wrong with processing."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  void doneTaskCommandUpdate(int i) throws DukeException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 18
    }
  },
  {
    "path": "src/main/java/weomucat/duke/command/listener/FindTaskCommandListener.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.command.listener;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * When FindTaskCommand is run, this listener will be notified."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "@FunctionalInterface"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface FindTaskCommandListener {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * When FindTaskCommand is run, this method will be called."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param keyword the keyword to look for"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  void findTaskCommandUpdate(String keyword);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 15
    }
  },
  {
    "path": "src/main/java/weomucat/duke/command/listener/ListTaskCommandListener.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.command.listener;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * When ListTaskCommand is run, this listener will be notified."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "@FunctionalInterface"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface ListTaskCommandListener {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * When ListTaskCommand is run, this method will be called."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  void listTaskCommandUpdate();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 13
    }
  },
  {
    "path": "src/main/java/weomucat/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * An exception that occurred within Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Default constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param message error message to display"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public DukeException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 16
    }
  },
  {
    "path": "src/main/java/weomucat/duke/exception/InvalidParameterException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Thrown when an invalid parameter was passed in from user input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class InvalidParameterException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public InvalidParameterException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 11
    }
  },
  {
    "path": "src/main/java/weomucat/duke/exception/InvalidTaskIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Thrown when an invalid task index was passed in to TaskList."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class InvalidTaskIndexException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public InvalidTaskIndexException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    super(\"That is not a valid index of a task.\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 11
    }
  },
  {
    "path": "src/main/java/weomucat/duke/exception/StorageException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Thrown when something went wrong in Storage."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class StorageException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public StorageException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 11
    }
  },
  {
    "path": "src/main/java/weomucat/duke/exception/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Thrown when the command the user entered is unknown."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public UnknownCommandException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    super(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 11
    }
  },
  {
    "path": "src/main/java/weomucat/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.StorageException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Storage is responsible for storing data to a fixed path in a local disk."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * @param \u003cT\u003e type of data to store"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class Storage\u003cT\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  protected String path;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Default constructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param path fixed path of database"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public Storage(String path) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assert path !\u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.path \u003d path;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Check if the path exists in the file system."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @return if database exists"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public boolean exists() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    return new File(path).exists();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Handles saving of data to disk."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param t data to save"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @throws StorageException If anything went wrong with saving data."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  abstract void save(T t) throws StorageException;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Handles loading of data from disk."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @return data from database"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @throws StorageException If anything went wrong with loading data."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  abstract T load() throws StorageException;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 50
    }
  },
  {
    "path": "src/main/java/weomucat/duke/storage/TaskListStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.StorageException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.TaskListTasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.listener.AddTaskListener;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.listener.DeleteTaskListener;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.listener.DoneTaskListener;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * TaskListStorage is responsible for serializing TaskListTasks and deserializing TaskListTasks,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * before saving to disk and loading from disk respectively."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class TaskListStorage extends Storage\u003cTaskListTasks\u003e implements AddTaskListener,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DeleteTaskListener, DoneTaskListener {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public TaskListStorage(String path) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    super(path);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void save(TaskListTasks tasks) throws StorageException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      FileOutputStream fileOutputStream \u003d new FileOutputStream(this.path);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      ObjectOutputStream objectOutputStream \u003d new ObjectOutputStream(fileOutputStream);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      // Serialize tasks"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      objectOutputStream.writeObject(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      objectOutputStream.close();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      fileOutputStream.close();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      throw new StorageException(String.format(\"I cannot create a file at \u0027%s\u0027\", this.path));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      throw new StorageException(\"An I/O error occurred.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public TaskListTasks load() throws StorageException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      FileInputStream fileInputStream \u003d new FileInputStream(this.path);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      ObjectInputStream objectInputStream \u003d new ObjectInputStream(fileInputStream);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      // Deserialize tasks"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      TaskListTasks tasks \u003d (TaskListTasks) objectInputStream.readObject();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      objectInputStream.close();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      fileInputStream.close();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      return tasks;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      throw new StorageException(String.format(\"I cannot read a file at \u0027%s\u0027\", this.path));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    } catch (ClassNotFoundException | ClassCastException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      throw new StorageException(\"I do not know how to deserialize this file.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    } catch (IOException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      throw new StorageException(\"An I/O error occurred.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void addTaskUpdate(TaskListTasks tasks, Task task) throws DukeException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    save(tasks);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void deleteTaskUpdate(TaskListTasks tasks, Task task) throws DukeException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    save(tasks);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void doneTaskUpdate(TaskListTasks tasks, Task task) throws DukeException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    save(tasks);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 82
    }
  },
  {
    "path": "src/main/java/weomucat/duke/task/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static weomucat.duke.Duke.DATETIME_FORMAT_PATTERN;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static weomucat.duke.Duke.DATETIME_PARSE_PATTERN;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.ZonedDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.InvalidParameterException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * A deadline is a special task that has a due date."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private ZonedDateTime by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Default constructor."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param description a description of the deadline"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param by          date due. format of the date is DATETIME_PARSE_PATTERN"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @throws InvalidParameterException If the description is empty, by is empty or by is invalid."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public DeadlineTask(String description, String by) throws InvalidParameterException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    super(description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      throw new InvalidParameterException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    if (by.equals(\"\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      throw new InvalidParameterException(\"The date of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      // Parse \u0027by\u0027 into a ZonedDateTime object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(DATETIME_PARSE_PATTERN)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "          .withZone(ZoneId.systemDefault());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      this.by \u003d ZonedDateTime.parse(by, dateTimeFormatter);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      throw new InvalidParameterException(String"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "          .format(\"I do not understand the date. Please enter in \u0027%s\u0027 format.\","
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "              DATETIME_PARSE_PATTERN));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Format ZonedDateTime object into a String."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(DATETIME_FORMAT_PATTERN);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    return String.format(\"[D]%s (by: %s)\", super.toString(), this.by.format(dateTimeFormatter));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 55
    }
  },
  {
    "path": "src/main/java/weomucat/duke/task/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.InvalidParameterException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * An event is a special task that has a location."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private String at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Default constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param description a description of the event"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param at          location of the event"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @throws InvalidParameterException If the description is empty or at is empty."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public EventTask(String description, String at) throws InvalidParameterException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      throw new InvalidParameterException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    if (at.equals(\"\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      throw new InvalidParameterException(\"The location of an event cannot be empty.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      this.at \u003d at;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    return String.format(\"[E]%s (at: %s)\", super.toString(), this.at);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 37
    }
  },
  {
    "path": "src/main/java/weomucat/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * A Task is something the user has to do. By default, a Task is not done."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class Task implements Serializable {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private boolean done;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Default constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param description a description of the task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public Task(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assert description !\u003d null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Marks the task as done or not done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param done task is done or not done"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void setDone(boolean done) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.done \u003d done;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * The description of this Task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @return description of this Task"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public String getDescription() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    return description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String doneIcon \u003d this.done ? \"[✓]\" : \"[✘]\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    return String.format(\"%s %s\", doneIcon, this.description);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 47
    }
  },
  {
    "path": "src/main/java/weomucat/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static weomucat.duke.Duke.LOCALE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.command.listener.AddTaskCommandListener;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.command.listener.DeleteTaskCommandListener;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.command.listener.DoneTaskCommandListener;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.command.listener.FindTaskCommandListener;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.command.listener.ListTaskCommandListener;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.InvalidTaskIndexException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.listener.AddTaskListener;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.listener.DeleteTaskListener;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.listener.DoneTaskListener;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.listener.FindTaskListener;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.listener.ListTaskListener;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * A TaskList manages the addition, deletion, marking as done and listing of tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class TaskList implements AddTaskCommandListener, DeleteTaskCommandListener,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DoneTaskCommandListener, FindTaskCommandListener, ListTaskCommandListener {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private TaskListTasks tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private ArrayList\u003cAddTaskListener\u003e addTaskListeners;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private ArrayList\u003cDeleteTaskListener\u003e deleteTaskListeners;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private ArrayList\u003cDoneTaskListener\u003e doneTaskListeners;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private ArrayList\u003cFindTaskListener\u003e findTaskListeners;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private ArrayList\u003cListTaskListener\u003e listTaskListeners;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public TaskList() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.tasks \u003d new TaskListTasks();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    init();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Initialize a TaskList from an existing TaskListTasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param tasks an existing list of tasks"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public TaskList(TaskListTasks tasks) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assert tasks !\u003d null;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    init();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private void init() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.addTaskListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.deleteTaskListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.doneTaskListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.findTaskListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.listTaskListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Add a AddTaskListener to the TaskList. When addTask is called, this listener will be notified."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param listener addTask listener"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void newAddTaskListener(AddTaskListener listener) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.addTaskListeners.add(listener);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Add a DeleteTaskListener to the TaskList. When deleteTask is called, this listener will be"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * notified."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param listener deleteTask listener"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void newDeleteTaskListener(DeleteTaskListener listener) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.deleteTaskListeners.add(listener);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Add a DoneTaskListener to the TaskList. When doneTask is called, this listener will be"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * notified."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param listener doneTask listener"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void newDoneTaskListener(DoneTaskListener listener) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.doneTaskListeners.add(listener);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Add a FindTaskListener to the TaskList. When findTask is called, this listener will be"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * notified."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param listener findTask listener"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void newFindTaskListener(FindTaskListener listener) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.findTaskListeners.add(listener);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Add a ListTaskListener to the TaskList. When listTask is called, this listener will be"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * notified."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param listener listTask listener"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void newListTaskListener(ListTaskListener listener) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.listTaskListeners.add(listener);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Add a task to the task list."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param task the task to add"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @throws DukeException If any listeners throw a DukeException."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void addTask(Task task) throws DukeException {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Add task to Tasks"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.tasks.add(task);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Update AddTaskListeners"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    for (AddTaskListener listener : addTaskListeners) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      listener.addTaskUpdate(this.tasks, task);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Delete a task from the task list."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @throws DukeException If the index is invalid or any listeners throw a DukeException."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void deleteTask(int i) throws DukeException {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      // Get task from tasks"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      Task task \u003d this.tasks.get(i);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      // Remove task"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      this.tasks.remove(i);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      // Update DeleteTaskListeners"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      for (DeleteTaskListener listener : deleteTaskListeners) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        listener.deleteTaskUpdate(this.tasks, task);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      throw new InvalidTaskIndexException();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Mark a task as done in the task list."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @throws DukeException If the index is invalid or any listeners throw a DukeException."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void doneTask(int i) throws DukeException {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      // Get task from tasks"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      Task task \u003d this.tasks.get(i);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      // Set task to done"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      task.setDone(true);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      // Update DoneTaskListeners"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      for (DoneTaskListener listener : doneTaskListeners) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        listener.doneTaskUpdate(this.tasks, task);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      throw new InvalidTaskIndexException();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Searches for a keyword in all tasks. Notify listeners tasks which description matches the"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * keyword."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void findTask(String keyword) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    TaskListTasks result \u003d new TaskListTasks();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Case insensitive search"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Use a single locale to prevent issues with case conversion."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    keyword \u003d keyword.toLowerCase(LOCALE);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    for (Task task : this.tasks) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      String description \u003d task.getDescription().toLowerCase(LOCALE);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      if (description.contains(keyword)) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        result.add(task);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Update FindTaskListeners"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    for (FindTaskListener listener : findTaskListeners) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      listener.findTaskUpdate(result);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Notify listeners to list tasks."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void listTask() {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Update ListTaskListeners"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    for (ListTaskListener listener : listTaskListeners) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      listener.listTaskUpdate(this.tasks);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void addTaskCommandUpdate(Task task) throws DukeException {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    addTask(task);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void deleteTaskCommandUpdate(int i) throws DukeException {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    deleteTask(i);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void doneTaskCommandUpdate(int i) throws DukeException {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    doneTask(i);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void findTaskCommandUpdate(String keyword) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    findTask(keyword);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void listTaskCommandUpdate() {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    listTask();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 223
    }
  },
  {
    "path": "src/main/java/weomucat/duke/task/TaskListTasks.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * A TaskListTasks is an ArrayList which holds Tasks in TaskList. This class exists to make Tasks"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * serializable without any generics."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class TaskListTasks extends ArrayList\u003cTask\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 11
    }
  },
  {
    "path": "src/main/java/weomucat/duke/task/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.InvalidParameterException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Todo is a special task that must have a description."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Default constructor."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param description a description of the todo"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @throws InvalidParameterException If the description is empty."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public TodoTask(String description) throws InvalidParameterException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      throw new InvalidParameterException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 28
    }
  },
  {
    "path": "src/main/java/weomucat/duke/task/listener/AddTaskListener.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task.listener;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.TaskListTasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * When a task is added, this listener will be notified."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "@FunctionalInterface"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface AddTaskListener {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * When a task is added, this method will be called."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param tasks an ArrayList of all tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param task  the Task that was added"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @throws DukeException If there is anything wrong with processing."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  void addTaskUpdate(TaskListTasks tasks, Task task) throws DukeException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 21
    }
  },
  {
    "path": "src/main/java/weomucat/duke/task/listener/DeleteTaskListener.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task.listener;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.TaskListTasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * When a task is deleted, this listener will be notified."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "@FunctionalInterface"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface DeleteTaskListener {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * When a task is deleted, this method will be called."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param tasks an ArrayList of all tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param task  the Task that was deleted"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @throws DukeException If there is anything wrong with processing."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  void deleteTaskUpdate(TaskListTasks tasks, Task task) throws DukeException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 21
    }
  },
  {
    "path": "src/main/java/weomucat/duke/task/listener/DoneTaskListener.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task.listener;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.TaskListTasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * When a task is marked as done, this listener will be notified."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "@FunctionalInterface"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface DoneTaskListener {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * When a task is marked as done, this method will be called."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param tasks an ArrayList of all tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param task  the Task that was marked as done"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @throws DukeException If there is anything wrong with processing."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  void doneTaskUpdate(TaskListTasks tasks, Task task) throws DukeException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 21
    }
  },
  {
    "path": "src/main/java/weomucat/duke/task/listener/FindTaskListener.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task.listener;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.TaskListTasks;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * When tasks are searched, this listener will be notified."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "@FunctionalInterface"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface FindTaskListener {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * When tasks are searched, this method will be called."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param tasks an ArrayList of tasks found"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  void findTaskUpdate(TaskListTasks tasks);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 17
    }
  },
  {
    "path": "src/main/java/weomucat/duke/task/listener/ListTaskListener.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task.listener;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.TaskListTasks;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * When all tasks need to be listed, this listener will be notified."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "@FunctionalInterface"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface ListTaskListener {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * When all tasks need to be listed, this method will be called."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param tasks an ArrayList of all tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  void listTaskUpdate(TaskListTasks tasks);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 17
    }
  },
  {
    "path": "src/main/java/weomucat/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.command.listener.ByeCommandListener;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.listener.AddTaskListener;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.listener.DeleteTaskListener;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.listener.DoneTaskListener;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.listener.FindTaskListener;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.listener.ListTaskListener;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.ui.listener.UserInputListener;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Ui is responsible for receiving input from the user, and displaying output to the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface Ui extends AddTaskListener, ByeCommandListener, DeleteTaskListener,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DoneTaskListener, FindTaskListener, ListTaskListener {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Add a UserInputListener to the Ui. When user input is received, this listener will be"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * notified."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param listener user input listener"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  void newUserInputListener(UserInputListener listener);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Tell Ui to start listening for user input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  void acceptUserInput();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Displays a nice message to the user."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param lines use varargs for multiline messages."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  void displayMessage(String... lines);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Displays an error message to the user."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param lines use varargs for multiline messages."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  void displayError(String... lines);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 43
    }
  },
  {
    "path": "src/main/java/weomucat/duke/ui/UiList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static weomucat.duke.Duke.THREAD_SLEEP_DURATION;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.command.listener.ByeCommandListener;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.TaskListTasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.listener.AddTaskListener;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.listener.DeleteTaskListener;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.listener.DoneTaskListener;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.listener.FindTaskListener;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.listener.ListTaskListener;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.ui.listener.UserInputListener;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * UiList is responsible for managing many uis."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Whenever any user input is received from any ui, all ui listeners will be notified."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Whenever a task update is received, all uis will be notified."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class UiList implements AddTaskListener, ByeCommandListener, DeleteTaskListener,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DoneTaskListener, FindTaskListener, ListTaskListener, UserInputListener {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private ArrayList\u003cUi\u003e uis;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private ArrayList\u003cUserInputListener\u003e userInputListeners;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private LinkedList\u003cString\u003e userInputQueue;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private boolean running;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Default constructor."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public UiList() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.uis \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.userInputListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.userInputQueue \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.running \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Add a Ui to the UiList. Any task updates will update all uis."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param ui the ui to add"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void addUi(Ui ui) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assert ui !\u003d null;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.uis.add(ui);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    ui.newUserInputListener(this);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Add a UserInputListener to the UiList. When user input is received, this listener will be"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * notified."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param listener user input listener"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void newUserInputListener(UserInputListener listener) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    userInputListeners.add(listener);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Tell all uis to start listening for user input."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void acceptUserInput() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    for (Ui ui : this.uis) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      // Allow uis to block their own threads for user input."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      // This is to allow the main thread to continue."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      new Thread(ui::acceptUserInput).start();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Main loop to get user input."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    while (this.running) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (userInputQueue.isEmpty()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "          Thread.sleep(THREAD_SLEEP_DURATION);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "          String userInput \u003d userInputQueue.pollFirst();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "          for (UserInputListener listener : this.userInputListeners) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            listener.userInputUpdate(userInput);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "          }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      } catch (DukeException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        displayError(e.getMessage());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        e.printStackTrace();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Displays a nice message to the user."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param lines use varargs for multiline messages."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void displayMessage(String... lines) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    for (Ui ui : this.uis) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      ui.displayMessage(lines.clone());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Displays an error message to the user."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param lines use varargs for multiline messages."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void displayError(String... lines) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    for (Ui ui : this.uis) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      ui.displayError(lines.clone());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void addTaskUpdate(TaskListTasks tasks, Task task) throws DukeException {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    for (Ui ui : this.uis) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      ui.addTaskUpdate(tasks, task);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void byeCommandUpdate() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.running \u003d false;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Farewell user"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    displayMessage(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    for (Ui ui : this.uis) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      ui.byeCommandUpdate();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void deleteTaskUpdate(TaskListTasks tasks, Task task) throws DukeException {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    for (Ui ui : this.uis) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      ui.deleteTaskUpdate(tasks, task);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void doneTaskUpdate(TaskListTasks tasks, Task task) throws DukeException {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    for (Ui ui : this.uis) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      ui.doneTaskUpdate(tasks, task);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void findTaskUpdate(TaskListTasks tasks) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    for (Ui ui : this.uis) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      ui.findTaskUpdate(tasks);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void listTaskUpdate(TaskListTasks tasks) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    for (Ui ui : this.uis) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      ui.listTaskUpdate(tasks);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void byeUpdate() throws DukeException {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    for (UserInputListener listener : this.userInputListeners) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      listener.byeUpdate();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void userInputUpdate(String userInput) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    userInputQueue.addLast(userInput);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 173
    }
  },
  {
    "path": "src/main/java/weomucat/duke/ui/cli/CommandLineUi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.ui.cli;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static weomucat.duke.Duke.THREAD_SLEEP_DURATION;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.TaskListTasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.ui.listener.UserInputListener;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a Command Line User Interface of Duke."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class CommandLineUi implements Ui {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private static final String SAY_INDENTATION \u003d \"\\t\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private static final String SAY_HORIZONTAL_LINE \u003d"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private ArrayList\u003cUserInputListener\u003e userInputListeners;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private BufferedReader bufferedReader;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private boolean running;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Default constructor."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public CommandLineUi() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.userInputListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.bufferedReader \u003d new BufferedReader(new InputStreamReader(System.in));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.running \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void newUserInputListener(UserInputListener listener) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.userInputListeners.add(listener);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void acceptUserInput() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    while (this.running) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Work around for non-blocking scanner."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // https://www.javaspecialists.eu/archive/Issue153.html"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        while (!this.bufferedReader.ready()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "          // Terminate if not running."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "          if (!this.running) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "          }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "          Thread.sleep(THREAD_SLEEP_DURATION);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Get next user input"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String userInput \u003d this.bufferedReader.readLine().trim();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Ignore empty user input"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (!userInput.equals(\"\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "          for (UserInputListener listener : userInputListeners) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            listener.userInputUpdate(userInput);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "          }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      } catch (Exception e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        e.printStackTrace();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void displayMessage(String... lines) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    System.out.println(SAY_INDENTATION + SAY_HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    for (String line : lines) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      System.out.println(SAY_INDENTATION + line);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    System.out.println(SAY_INDENTATION + SAY_HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void displayError(String... lines) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    System.out.print(\"\\033[0;31m\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    System.out.println(SAY_INDENTATION + SAY_HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    lines[0] \u003d \"☹ OOPS!!! \" + lines[0];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    for (String line : lines) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      System.out.println(SAY_INDENTATION + line);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    System.out.println(SAY_INDENTATION + SAY_HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    System.out.print(\"\\033[0;30m\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void addTaskUpdate(TaskListTasks tasks, Task task) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    displayMessage(\"Got it. I\u0027ve added this task:\","
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        task.toString(),"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String.format(\"Now you have %d task(s) in the list.\", tasks.size()));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void byeCommandUpdate() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.running \u003d false;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void deleteTaskUpdate(TaskListTasks tasks, Task task) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    displayMessage(\"Noted. I\u0027ve removed this task:\","
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        task.toString(),"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String.format(\"Now you have %d task(s) in the list.\", tasks.size()));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void doneTaskUpdate(TaskListTasks tasks, Task task) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    displayMessage(\"Nice! I\u0027ve marked this task as done:\", task.toString());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void findTaskUpdate(TaskListTasks tasks) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    ArrayList\u003cString\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    result.add(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      // Get task from tasks"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      // Format task with no. in front"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      result.add(String.format(\"%d. %s\", i + 1, task));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    displayMessage(result.toArray(new String[0]));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void listTaskUpdate(TaskListTasks tasks) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    ArrayList\u003cString\u003e out \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    out.add(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      // Get task from tasks"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      // Format task with no. in front"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      out.add(String.format(\"%d. %s\", i + 1, task));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    displayMessage(out.toArray(new String[0]));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 147
    }
  },
  {
    "path": "src/main/java/weomucat/duke/ui/gui/DukeErrorText.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.ui.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static java.nio.charset.StandardCharsets.UTF_8;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents an error message that is sent from Duke."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Used in {@link GraphicalUi}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class DukeErrorText extends Label {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private Label text;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Creates an error message that is sent from Duke."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param text the error message."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public DukeErrorText(String text) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      FXMLLoader fxmlLoader \u003d new FXMLLoader(Root.class.getResource(\"/view/DukeErrorText.fxml\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      fxmlLoader.load();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Use UTF_8 encoding"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    text \u003d new String(text.getBytes(), UTF_8);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.text.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 38
    }
  },
  {
    "path": "src/main/java/weomucat/duke/ui/gui/DukeText.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.ui.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static java.nio.charset.StandardCharsets.UTF_8;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a message that is sent from Duke."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Used in {@link GraphicalUi}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class DukeText extends Label {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private Label text;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Creates a message that is sent from Duke."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param text the message."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public DukeText(String text) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      FXMLLoader fxmlLoader \u003d new FXMLLoader(Root.class.getResource(\"/view/DukeText.fxml\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      fxmlLoader.load();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Use UTF_8 encoding"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    text \u003d new String(text.getBytes(), UTF_8);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.text.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 38
    }
  },
  {
    "path": "src/main/java/weomucat/duke/ui/gui/GraphicalUi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.ui.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.TaskListTasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.ui.Ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.ui.listener.UserInputListener;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a Graphical User Interface of Duke."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class GraphicalUi extends Application implements Ui, UserInputListener {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  // For getting this instance when started by JavaFx"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public static GraphicalUi instance;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private boolean running;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private Root root;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private ArrayList\u003cUserInputListener\u003e userInputListeners;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Default constructor."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public GraphicalUi() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.running \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.userInputListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    instance \u003d this;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void start(Stage primaryStage) throws Exception {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    FXMLLoader fxmlLoader \u003d new FXMLLoader(getClass().getResource(\"/view/Root.fxml\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    primaryStage.setScene(new Scene(fxmlLoader.load()));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.root \u003d fxmlLoader.getController();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.root.newUserInputListener(this);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    primaryStage.show();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void stop() throws Exception {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    super.stop();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    if (this.running) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      for (UserInputListener listener : this.userInputListeners) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        listener.byeUpdate();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void newUserInputListener(UserInputListener listener) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.userInputListeners.add(listener);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void acceptUserInput() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void displayMessage(String... lines) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String message \u003d String.join(\"\\n\", lines);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Platform.runLater(() -\u003e this.root.addDukeText(message));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void displayError(String... lines) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    lines[0] \u003d \"☹ OOPS!!! \" + lines[0];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String message \u003d String.join(\"\\n\", lines);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Platform.runLater(() -\u003e this.root.addDukeErrorText(message));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void addTaskUpdate(TaskListTasks tasks, Task task) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    displayMessage(\"Got it. I\u0027ve added this task:\","
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        task.toString(),"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String.format(\"Now you have %d task(s) in the list.\", tasks.size()));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void byeCommandUpdate() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      this.running \u003d false;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      Thread.sleep(1000);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      Platform.exit();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      e.printStackTrace();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void deleteTaskUpdate(TaskListTasks tasks, Task task) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    displayMessage(\"Noted. I\u0027ve removed this task:\","
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        task.toString(),"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String.format(\"Now you have %d task(s) in the list.\", tasks.size()));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void doneTaskUpdate(TaskListTasks tasks, Task task) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    displayMessage(\"Nice! I\u0027ve marked this task as done:\", task.toString());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void findTaskUpdate(TaskListTasks tasks) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    ArrayList\u003cString\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    result.add(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      // Get task from tasks"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      // Format task with no. in front"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      result.add(String.format(\"%d. %s\", i + 1, task));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    displayMessage(result.toArray(new String[0]));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void listTaskUpdate(TaskListTasks tasks) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    ArrayList\u003cString\u003e out \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    out.add(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      // Get task from tasks"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      // Format task with no. in front"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      out.add(String.format(\"%d. %s\", i + 1, task));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    displayMessage(out.toArray(new String[0]));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void byeUpdate() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void userInputUpdate(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    for (UserInputListener listener : this.userInputListeners) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      listener.userInputUpdate(userInput);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 152
    }
  },
  {
    "path": "src/main/java/weomucat/duke/ui/gui/Root.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.ui.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.ui.listener.UserInputListener;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents the root controller of Duke\u0027s {@link GraphicalUi}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class Root extends VBox {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private VBox chatBox;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private ArrayList\u003cUserInputListener\u003e userInputListeners;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Creates a root controller of Duke\u0027s {@link GraphicalUi}."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public Root() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.userInputListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Adds a userInputListener to this controller."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * All userInputListeners will be updated whenever this controller receives user input."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param listener the listener to add"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void newUserInputListener(UserInputListener listener) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.userInputListeners.add(listener);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void initialize() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    chatBox.heightProperty()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        .addListener((observable, oldValue, newValue) -\u003e scrollPane.setVvalue(1));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Adds a {@link DukeText} to the chat box."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param message the message to put in {@link DukeText}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void addDukeText(String message) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    chatBox.getChildren().add(new DukeText(message));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Adds a {@link DukeErrorText} to the chat box."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param message the message to put in {@link DukeErrorText}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void addDukeErrorText(String message) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    chatBox.getChildren().add(new DukeErrorText(message));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private void userInputUpdate() throws DukeException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String userInput \u003d this.userInput.getText().trim();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Ignore empty userInput"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    if (!userInput.equals(\"\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      // Add user input to right side of GUI"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      chatBox.getChildren().add(new UserText(userInput));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      // Update duke logic with userInput"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      for (UserInputListener listener : this.userInputListeners) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        listener.userInputUpdate(userInput);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Clear TextField"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.userInput.clear();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 87
    }
  },
  {
    "path": "src/main/java/weomucat/duke/ui/gui/UserText.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.ui.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static java.nio.charset.StandardCharsets.UTF_8;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a message that is sent from the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Used in {@link GraphicalUi}."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class UserText extends HBox {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private Label text;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * Creates a message that is sent from the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param text the message."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public UserText(String text) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      FXMLLoader fxmlLoader \u003d new FXMLLoader(Root.class.getResource(\"/view/UserText.fxml\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      fxmlLoader.load();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Use UTF_8 encoding"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    text \u003d new String(text.getBytes(), UTF_8);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.text.setText(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 39
    }
  },
  {
    "path": "src/main/java/weomucat/duke/ui/listener/UserInputListener.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.ui.listener;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * When user input is received, this listener will be notified."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface UserInputListener {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * When user wants to shutdown duke, this method will be called."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @throws DukeException If there is anything wrong with processing."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  void byeUpdate() throws DukeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * When a user input string is received, this method will be called."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @param userInput user input"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   * @throws DukeException If there is anything wrong with processing."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  void userInputUpdate(String userInput) throws DukeException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 24
    }
  },
  {
    "path": "src/main/resources/view/DukeErrorText.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003cfx:root fx:id\u003d\"text\" minHeight\u003d\"50.0\" style\u003d\"-fx-background-color: #880e4f; -fx-background-radius: 5;\" textFill\u003d\"WHITE\" type\u003d\"Label\" wrapText\u003d\"true\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   \u003cfont\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      \u003cFont name\u003d\"Monospaced Bold\" size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   \u003c/font\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 14
    }
  },
  {
    "path": "src/main/resources/view/DukeText.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003cfx:root fx:id\u003d\"text\" minHeight\u003d\"50.0\" style\u003d\"-fx-background-color: #37474f; -fx-background-radius: 5;\" textFill\u003d\"WHITE\" type\u003d\"Label\" wrapText\u003d\"true\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   \u003cfont\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      \u003cFont name\u003d\"Monospaced Bold\" size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   \u003c/font\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 14
    }
  },
  {
    "path": "src/main/resources/view/Root.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003cVBox alignment\u003d\"TOP_CENTER\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"weomucat.duke.ui.gui.Root\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      \u003cHBox alignment\u003d\"CENTER\" minHeight\u003d\"60.0\" style\u003d\"-fx-background-color: #81b9bf;\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \u003cLabel alignment\u003d\"CENTER\" minHeight\u003d\"60.0\" prefWidth\u003d\"360.0\" text\u003d\"Duke - Personal Assistant Chatbot ☺\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "               \u003cfont\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                  \u003cFont name\u003d\"Monospaced Bold\" size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "               \u003c/font\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" pannable\u003d\"true\" prefHeight\u003d\"520.0\" prefWidth\u003d\"360.0\" style\u003d\"-fx-background-radius: 0; -fx-background: #b2ebf2; -fx-background-color: #81b9bf;\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \u003cVBox fx:id\u003d\"chatBox\" spacing\u003d\"10.0\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "               \u003cpadding\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "               \u003c/padding\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \u003c/VBox\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      \u003cHBox alignment\u003d\"BOTTOM_RIGHT\" prefHeight\u003d\"60.0\" prefWidth\u003d\"360.0\" style\u003d\"-fx-background-color: #FFFFFF;\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \u003cTextField fx:id\u003d\"userInput\" minHeight\u003d\"60.0\" onAction\u003d\"#userInputUpdate\" prefWidth\u003d\"260.0\" promptText\u003d\"Message\" style\u003d\"-fx-text-box-border: transparent; -fx-background-color: #ffffff; -fx-background-radius: 0;\" HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "               \u003cfont\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                  \u003cFont name\u003d\"Monospaced Bold\" size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "               \u003c/font\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "               \u003cpadding\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                  \u003cInsets left\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "               \u003c/padding\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \u003c/TextField\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \u003cButton minWidth\u003d\"60.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#userInputUpdate\" prefHeight\u003d\"60.0\" prefWidth\u003d\"100.0\" style\u003d\"-fx-background-radius: 0; -fx-background-color: #ffffff;\" text\u003d\"💬\" textFill\u003d\"#0277bd\"\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "               \u003cfont\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                  \u003cFont name\u003d\"Monospaced Regular\" size\u003d\"18.0\" /\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "               \u003c/font\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \u003c/Button\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 51
    }
  },
  {
    "path": "src/main/resources/view/UserText.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" type\u003d\"HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      \u003cLabel fx:id\u003d\"text\" minHeight\u003d\"50.0\" style\u003d\"-fx-background-color: #ffffff; -fx-background-radius: 5;\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \u003cFont name\u003d\"Monospaced Bold\" size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      \u003c/Label\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 20
    }
  },
  {
    "path": "src/test/java/weomucat/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void commandShouldBeEmptyString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String[] tests \u003d {\"\", \" \", \"  \", \"   \"};"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    for (String test : tests) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      Parser parser \u003d new Parser(test);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      String command \u003d parser.getCommand();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      assertEquals(\"\", command, formatMessage(test));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void commandShouldBeOneWord() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String[] tests \u003d {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        \"todo\", \" todo \", \"  todo  \", \"   todo   \","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        \"todo one\", \" todo one \", \"  todo  one  \", \"   todo   one   \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    };"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    for (String test : tests) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      Parser parser \u003d new Parser(test);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      String command \u003d parser.getCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      assertEquals(\"todo\", command, formatMessage(test));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void parametersShouldBeEmptyString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String[] tests \u003d {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        \"event\", \" event \", \"  event  \", \"   event   \","
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        \"event /from /to\", \" event /from /to \", \"  event  /from  /to  \", \"   event   /from   /to   \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    };"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    for (String test : tests) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      Parser parser \u003d new Parser(test);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      String command \u003d parser.getCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      HashMap\u003cString, String\u003e parameters \u003d parser.parseParameters(\"/from\", \"/to\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      assertEquals(\"event\", command, formatMessage(test));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      assertEquals(\"\", parser.getBody(), formatMessage(test));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      assertEquals(\"\", parameters.get(\"/from\"), formatMessage(test));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      assertEquals(\"\", parameters.get(\"/to\"), formatMessage(test));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void parametersShouldBeOneWord() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String[] tests \u003d {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        \"todo one /from two /to three\", \" todo one /from two /to three \","
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        \"  todo  one  /from  two  /to  three  \", \"   todo   one   /from   two   /to   three   \""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    };"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    for (String test : tests) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      Parser parser \u003d new Parser(test);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      String command \u003d parser.getCommand();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      HashMap\u003cString, String\u003e parameters \u003d parser.parseParameters(\"/from\", \"/to\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      assertEquals(\"todo\", command, formatMessage(test));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      assertEquals(\"one\", parser.getBody(), formatMessage(test));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      assertEquals(\"two\", parameters.get(\"/from\"), formatMessage(test));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      assertEquals(\"three\", parameters.get(\"/to\"), formatMessage(test));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void parametersShouldBeWords() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String[] tests \u003d {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        \"todo one two three /from four five six /to seven eight nine\","
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        \" todo one two three /from four five six /to seven eight nine \","
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        \"  todo  one two three  /from  four five six  /to  seven eight nine  \","
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        \"   todo   one two three   /from   four five six   /to   seven eight nine   \""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    };"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    for (String test : tests) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      Parser parser \u003d new Parser(test);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      String command \u003d parser.getCommand();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      HashMap\u003cString, String\u003e parameters \u003d parser.parseParameters(\"/from\", \"/to\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      assertEquals(\"todo\", command, formatMessage(test));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      assertEquals(\"one two three\", parser.getBody(), formatMessage(test));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      assertEquals(\"four five six\", parameters.get(\"/from\"), formatMessage(test));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      assertEquals(\"seven eight nine\", parameters.get(\"/to\"), formatMessage(test));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void parametersShouldPreserveSpaces() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String[] tests \u003d {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        \"todo one   two   three /from four   five   six /to seven   eight   nine\","
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        \" todo one   two   three /from four   five   six /to seven   eight   nine \","
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        \"  todo  one   two   three  /from  four   five   six  /to  seven   eight   nine  \","
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        \"   todo   one   two   three   /from   four   five   six   /to   seven   eight   nine   \""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    };"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    for (String test : tests) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      Parser parser \u003d new Parser(test);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      String command \u003d parser.getCommand();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      HashMap\u003cString, String\u003e parameters \u003d parser.parseParameters(\"/from\", \"/to\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      assertEquals(\"todo\", command, formatMessage(test));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      assertEquals(\"one   two   three\", parser.getBody(), formatMessage(test));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      assertEquals(\"four   five   six\", parameters.get(\"/from\"), formatMessage(test));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      assertEquals(\"seven   eight   nine\", parameters.get(\"/to\"), formatMessage(test));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void parametersOrderDoesNotMatter() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String[] tests \u003d {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        \"todo one two /a three four /b five six /c seven eight\","
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        \"todo one two /b five six /c seven eight /a three four\","
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        \"todo one two /c seven eight /a three four /b five six\","
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    };"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    for (String test : tests) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      Parser parser \u003d new Parser(test);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      String command \u003d parser.getCommand();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      HashMap\u003cString, String\u003e parameters \u003d parser.parseParameters(\"/a\", \"/b\", \"/c\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      assertEquals(\"todo\", command, formatMessage(test));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      assertEquals(\"one two\", parser.getBody(), formatMessage(test));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      assertEquals(\"three four\", parameters.get(\"/a\"), formatMessage(test));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      assertEquals(\"five six\", parameters.get(\"/b\"), formatMessage(test));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      assertEquals(\"seven eight\", parameters.get(\"/c\"), formatMessage(test));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private String formatMessage(String input) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    return String.format(\"Input: \u0027%s\u0027\", input);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 141
    }
  },
  {
    "path": "src/test/java/weomucat/duke/task/DeadlineTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static weomucat.duke.Duke.DATETIME_PARSE_PATTERN;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.InvalidParameterException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class DeadlineTaskTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void descriptionShouldNotBeEmptyString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(DATETIME_PARSE_PATTERN);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String by \u003d LocalDateTime.now().format(dateTimeFormatter);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertThrows(InvalidParameterException.class, () -\u003e new DeadlineTask(\"\", by),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        formatMessage(\"\", by));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void byShouldBeProperlyFormatted() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String[] descriptions \u003d {\"one\", \"one two\", \"one two three\"};"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    for (String description : descriptions) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      assertThrows(InvalidParameterException.class, () -\u003e new DeadlineTask(description, \"\"),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "          formatMessage(description, \"\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void validUsage() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String[] descriptions \u003d {\"one\", \"one two\", \"one two three\"};"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(DATETIME_PARSE_PATTERN);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    for (String description : descriptions) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      String by \u003d LocalDateTime.now().format(dateTimeFormatter);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      assertDoesNotThrow(() -\u003e new DeadlineTask(description, by), formatMessage(description, by));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private String formatMessage(String description, String by) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    return String.format(\"Input: new DeadlineTask(\u0027%s\u0027,\u0027%s\u0027)\", description, by);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 47
    }
  },
  {
    "path": "src/test/java/weomucat/duke/task/EventTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.InvalidParameterException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class EventTaskTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void descriptionShouldNotBeEmptyString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String[] locations \u003d {\"one\", \"one two\", \"one two three\"};"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    for (String location : locations) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      assertThrows(InvalidParameterException.class, () -\u003e new EventTask(\"\", location),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "          formatMessage(\"\", location));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void atShouldNotBeEmptyString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String[] descriptions \u003d {\"one\", \"one two\", \"one two three\"};"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    for (String description : descriptions) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      assertThrows(InvalidParameterException.class, () -\u003e new EventTask(description, \"\"),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "          formatMessage(description, \"\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void validUsage() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String[] descriptions \u003d {\"one\", \"one two\", \"one two three\"};"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String[] locations \u003d {\"four\", \"four five\", \"four five six\"};"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    for (int i \u003d 0; i \u003c descriptions.length; i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      String description \u003d descriptions[i];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      String location \u003d locations[i];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      assertDoesNotThrow(() -\u003e new EventTask(description, location),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "          formatMessage(description, location));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private String formatMessage(String description, String at) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    return String.format(\"Input: new EventTask(\u0027%s\u0027,\u0027%s\u0027)\", description, at);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 47
    }
  },
  {
    "path": "src/test/java/weomucat/duke/task/StubTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class StubTask extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public StubTask(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 8
    }
  },
  {
    "path": "src/test/java/weomucat/duke/task/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.InvalidTaskIndexException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.listener.StubAddTaskListener;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.listener.StubDeleteTaskListener;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.listener.StubFindTaskListener;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void deleteTaskShouldNotBeInvalidIndex() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertThrows(InvalidTaskIndexException.class, () -\u003e taskList.deleteTask(0));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertDoesNotThrow(() -\u003e taskList.addTask(new StubTask(\"one\")));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertThrows(InvalidTaskIndexException.class, () -\u003e taskList.deleteTask(-1));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertThrows(InvalidTaskIndexException.class, () -\u003e taskList.deleteTask(1));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertDoesNotThrow(() -\u003e taskList.addTask(new StubTask(\"two\")));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertThrows(InvalidTaskIndexException.class, () -\u003e taskList.deleteTask(-1));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertThrows(InvalidTaskIndexException.class, () -\u003e taskList.deleteTask(2));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertDoesNotThrow(() -\u003e taskList.addTask(new StubTask(\"three\")));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertThrows(InvalidTaskIndexException.class, () -\u003e taskList.deleteTask(-1));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertThrows(InvalidTaskIndexException.class, () -\u003e taskList.deleteTask(3));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void doneTaskShouldNotBeInvalidIndex() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertThrows(InvalidTaskIndexException.class, () -\u003e taskList.doneTask(0));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertDoesNotThrow(() -\u003e taskList.addTask(new StubTask(\"one\")));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertThrows(InvalidTaskIndexException.class, () -\u003e taskList.doneTask(-1));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertThrows(InvalidTaskIndexException.class, () -\u003e taskList.doneTask(1));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertDoesNotThrow(() -\u003e taskList.addTask(new StubTask(\"two\")));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertThrows(InvalidTaskIndexException.class, () -\u003e taskList.doneTask(-1));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertThrows(InvalidTaskIndexException.class, () -\u003e taskList.doneTask(2));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertDoesNotThrow(() -\u003e taskList.addTask(new StubTask(\"three\")));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertThrows(InvalidTaskIndexException.class, () -\u003e taskList.doneTask(-1));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertThrows(InvalidTaskIndexException.class, () -\u003e taskList.doneTask(3));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void validAddUsage() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    final StubTask taskOne \u003d new StubTask(\"one\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    final StubTask taskTwo \u003d new StubTask(\"two\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    final StubTask taskThree \u003d new StubTask(\"three\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    StubAddTaskListener addTaskListener \u003d new StubAddTaskListener();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Initialize Listeners"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    taskList.newAddTaskListener(addTaskListener);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /* Add Tasks */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Expect 1 task."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertDoesNotThrow(() -\u003e taskList.addTask(taskOne));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertEquals(1, addTaskListener.getTasks().size());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Validate that the tasks are correct"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertEquals(taskOne, addTaskListener.getTask());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertTrue(addTaskListener.getTasks().contains(taskOne));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Expect 2 tasks."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertDoesNotThrow(() -\u003e taskList.addTask(taskTwo));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertEquals(2, addTaskListener.getTasks().size());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Validate that the tasks are correct"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertEquals(taskTwo, addTaskListener.getTask());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertTrue(addTaskListener.getTasks().contains(taskOne));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertTrue(addTaskListener.getTasks().contains(taskTwo));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Expect 3 tasks."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertDoesNotThrow(() -\u003e taskList.addTask(taskThree));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertEquals(3, addTaskListener.getTasks().size());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Validate that the tasks are correct"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertEquals(taskThree, addTaskListener.getTask());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertTrue(addTaskListener.getTasks().contains(taskOne));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertTrue(addTaskListener.getTasks().contains(taskTwo));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertTrue(addTaskListener.getTasks().contains(taskThree));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void validDeleteUsage() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    final StubTask taskOne \u003d new StubTask(\"one\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    final StubTask taskTwo \u003d new StubTask(\"two\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    final StubTask taskThree \u003d new StubTask(\"three\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    StubDeleteTaskListener deleteTaskListener \u003d new StubDeleteTaskListener();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Initialize Listeners"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    taskList.newDeleteTaskListener(deleteTaskListener);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /* Add Tasks */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertDoesNotThrow(() -\u003e taskList.addTask(taskOne));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertDoesNotThrow(() -\u003e taskList.addTask(taskTwo));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertDoesNotThrow(() -\u003e taskList.addTask(taskThree));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /* Delete Tasks */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Expect 2 tasks."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertDoesNotThrow(() -\u003e taskList.deleteTask(0));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertEquals(2, deleteTaskListener.getTasks().size());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Validate that the tasks are correct"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertEquals(taskOne, deleteTaskListener.getTask());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertTrue(deleteTaskListener.getTasks().contains(taskTwo));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertTrue(deleteTaskListener.getTasks().contains(taskThree));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Expect 1 task."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertDoesNotThrow(() -\u003e taskList.deleteTask(0));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertEquals(1, deleteTaskListener.getTasks().size());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Validate that the tasks are correct"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertEquals(taskTwo, deleteTaskListener.getTask());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertTrue(deleteTaskListener.getTasks().contains(taskThree));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Expect 0 tasks."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertDoesNotThrow(() -\u003e taskList.deleteTask(0));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertEquals(0, deleteTaskListener.getTasks().size());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Validate that the tasks are correct"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertEquals(taskThree, deleteTaskListener.getTask());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void validFindUsage() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    final StubTask taskOne \u003d new StubTask(\"one\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    final StubTask taskTwo \u003d new StubTask(\"two\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    final StubTask taskThree \u003d new StubTask(\"three\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    StubFindTaskListener findTaskListener \u003d new StubFindTaskListener();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Initialize Listeners"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    taskList.newFindTaskListener(findTaskListener);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /* Add Tasks */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertDoesNotThrow(() -\u003e taskList.addTask(taskOne));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertDoesNotThrow(() -\u003e taskList.addTask(taskTwo));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertDoesNotThrow(() -\u003e taskList.addTask(taskThree));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /* Find Tasks */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Empty string should return all tasks."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    taskList.findTask(\"\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertTrue(findTaskListener.getTasks().contains(taskOne));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertTrue(findTaskListener.getTasks().contains(taskTwo));"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertTrue(findTaskListener.getTasks().contains(taskThree));"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Character should return tasks with that character."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    taskList.findTask(\"o\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertTrue(findTaskListener.getTasks().contains(taskOne));"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertTrue(findTaskListener.getTasks().contains(taskTwo));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    taskList.findTask(\"t\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertTrue(findTaskListener.getTasks().contains(taskTwo));"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertTrue(findTaskListener.getTasks().contains(taskThree));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Should be case insensitive."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    taskList.findTask(\"One\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertTrue(findTaskListener.getTasks().contains(taskOne));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    taskList.findTask(\"tWo\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertTrue(findTaskListener.getTasks().contains(taskTwo));"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    taskList.findTask(\"thREE\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertTrue(findTaskListener.getTasks().contains(taskThree));"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 179
    }
  },
  {
    "path": "src/test/java/weomucat/duke/task/TodoTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.InvalidParameterException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class TodoTaskTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void descriptionShouldNotBeEmptyString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    assertThrows(InvalidParameterException.class, () -\u003e new TodoTask(\"\"), formatMessage(\"\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void validUsage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String[] descriptions \u003d {\"one\", \"one two\", \"one two three\"};"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    for (String description : descriptions) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      assertDoesNotThrow(() -\u003e new TodoTask(description), formatMessage(description));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private String formatMessage(String description) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    return String.format(\"Input: new TodoTask(\u0027%s\u0027)\", description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 28
    }
  },
  {
    "path": "src/test/java/weomucat/duke/task/listener/StubAddTaskListener.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task.listener;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.TaskListTasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class StubAddTaskListener implements AddTaskListener {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private Task task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private TaskListTasks tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void addTaskUpdate(TaskListTasks tasks, Task task) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.task \u003d task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public Task getTask() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    return this.task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public TaskListTasks getTasks() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    return this.tasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 25
    }
  },
  {
    "path": "src/test/java/weomucat/duke/task/listener/StubDeleteTaskListener.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task.listener;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.TaskListTasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class StubDeleteTaskListener implements DeleteTaskListener {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private Task task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private TaskListTasks tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void deleteTaskUpdate(TaskListTasks tasks, Task task) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.task \u003d task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public Task getTask() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    return task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public TaskListTasks getTasks() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    return tasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 25
    }
  },
  {
    "path": "src/test/java/weomucat/duke/task/listener/StubFindTaskListener.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task.listener;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.TaskListTasks;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class StubFindTaskListener implements FindTaskListener {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  private TaskListTasks tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public void findTaskUpdate(TaskListTasks tasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  public TaskListTasks getTasks() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    return tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 17
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "deadline return book /by 27/08/19 2000"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "event project meeting /at School"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 15
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "REM create \\build\\text-ui-test directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "if not exist ..\\build\\text-ui-test mkdir ..\\build\\text-ui-test"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\build\\text-ui-test ..\\src\\main\\java\\weomucat\\duke\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\techo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\texit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "java -classpath ..\\build\\text-ui-test -Dfile.encoding\u003dUTF-8 weomucat.duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 21
    }
  }
]
