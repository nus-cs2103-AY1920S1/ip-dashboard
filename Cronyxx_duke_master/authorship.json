[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yeo Tong": 22,
      "Jeffry Lum": 15
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":init"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":end"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 84
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rootProject.name \u003d \u0027duke\u0027"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 1
    }
  },
  {
    "path": "src/main/java/Consts.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "public final class Consts {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    public static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    //To prevent users from creating an instance of this class"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    private Consts() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        throw new AssertionError();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yeo Tong": 12
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        String input \u003d \"\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        MyList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        printLogo();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        printIntro();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "            if (!sc.hasNextLine()) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "            switch (input) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "                    printExitMsg();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "                    printList(taskList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "                    taskList.add(input);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "                    printAddTask(input);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        } while (!input.equals(\"bye\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    //prints the logo for the chat bot"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    private static void printLogo() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        System.out.println(Consts.LOGO);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    //prints the indentation used for the output"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    private static void printIndentation() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        System.out.print(\"\\t\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    //prints line with indentation in front"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    private static void printLine() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        printIndentation();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    //prints the intro text"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    private static void printIntroText() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        printIndentation();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        System.out.println(\" Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        printIndentation();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        System.out.println(\" What can I do for you?\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    private static void printIntro() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        printIntroText();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    private static void printExitMsg() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        printIndentation();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        System.out.println(\" Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    private static void printAddTask(String task) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        printIndentation();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        System.out.println(\" added: \" + task);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    private static void printList(MyList myList) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        List\u003cString\u003e list \u003d myList.getList();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        int listNum \u003d 1;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        for (String taskName : list) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "            printIndentation();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "            System.out.println(\" \" + listNum + \". \" + taskName);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "            listNum++;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yeo Tong": 89,
      "-": 4
    }
  },
  {
    "path": "src/main/java/MyList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "public interface MyList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    public abstract void add(String task);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    public abstract List\u003cString\u003e getList();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yeo Tong": 6
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "public class TaskList implements MyList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    private List list;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        list \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    //adds a task to the list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    public void add(String task) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    //returns the list of Strings"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    public List\u003cString\u003e getList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yeo Tong": 24
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yeo Tong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yeo Tong": 2
    }
  }
]
