[
  {
    "path": "src/main/java/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import exception.UpdateStateException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import run.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import run.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import run.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public void addCommandUpdateState() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            storage.updateState(tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            Ui.showError(\"IO exception caught while adding task!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        } catch(UpdateStateException ex) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            Ui.showError(ex.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 32
    }
  },
  {
    "path": "src/main/java/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import run.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import run.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import run.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        ui.exit();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        ui.closeScanner();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 15
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import run.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import run.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import run.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 10
    }
  },
  {
    "path": "src/main/java/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import run.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import run.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import run.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "public class DeadlineCommand extends AddCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    String rawString;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public DeadlineCommand(String rawString) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        this.rawString \u003d rawString;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        super.tasks \u003d tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        super.ui \u003d ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        super.storage \u003d storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        String remove_command \u003d rawString.replaceFirst(\"deadline \", \"\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        String[] splited \u003d remove_command.split(\" /by \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        Deadline curr_task \u003d new Deadline(splited[0], splited[1]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        tasks.add(curr_task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        super.addCommandUpdateState();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 26
    }
  },
  {
    "path": "src/main/java/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import exception.DeleteParameterException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import exception.UpdateStateException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import run.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import run.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import run.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    String rawString;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    int taskNum;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public DeleteCommand(String rawString) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        this.rawString \u003d rawString;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        String[] splited \u003d rawString.split(\" \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        if (splited[1].matches(\"^[0-9]*[1-9][0-9]*$\") \u0026\u0026 splited.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            taskNum \u003d Integer.parseInt(splited[1]);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            throw new DeleteParameterException(\"Invalid parameter! Try the format: delete (task number)\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        tasks.delete(taskNum);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            storage.updateState(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            Ui.showError(\"IO exception caught while deleting task!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        } catch(UpdateStateException ex) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            Ui.showError(ex.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 40
    }
  },
  {
    "path": "src/main/java/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import exception.DoneParameterException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import exception.UpdateStateException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import run.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import run.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import run.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    String rawString;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    int taskNum;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public DoneCommand(String rawString) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        this.rawString \u003d rawString;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        String[] splited \u003d rawString.split(\" \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        if (splited[1].matches(\"^[0-9]*[1-9][0-9]*$\") \u0026\u0026 splited.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            taskNum \u003d Integer.parseInt(splited[1]);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            throw new DoneParameterException(\"Invalid parameter! Try the format: done (task number)\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        tasks.done(taskNum);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            storage.updateState(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            Ui.showError(\"IO exception caught while marking task as done!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        } catch(UpdateStateException ex) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            Ui.showError(ex.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 40
    }
  },
  {
    "path": "src/main/java/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import run.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import run.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import run.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "public class EventCommand extends AddCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    String rawString;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public EventCommand(String rawString) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        this.rawString \u003d rawString;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        super.tasks \u003d tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        super.ui \u003d ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        super.storage \u003d storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        String remove_command \u003d rawString.replaceFirst(\"event \", \"\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        String[] splited \u003d remove_command.split(\" /at \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        Event curr_task \u003d new Event(splited[0], splited[1]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        tasks.add(curr_task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        super.addCommandUpdateState();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 26
    }
  },
  {
    "path": "src/main/java/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import run.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import run.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import run.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        tasks.list();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 14
    }
  },
  {
    "path": "src/main/java/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import exception.EmptyToDoDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import run.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import run.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import run.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import task.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "public class ToDoCommand extends AddCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    String rawString;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public ToDoCommand(String rawString) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        if(rawString.equals(\"todo\") || rawString.equals(\"todo \")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            throw new EmptyToDoDescriptionException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        this.rawString \u003d rawString;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        super.tasks \u003d tasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        super.ui \u003d ui;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        super.storage \u003d storage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        ToDo curr_task \u003d new ToDo(rawString.replaceFirst(\"todo \", \"\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        tasks.add(curr_task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        super.addCommandUpdateState();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 29
    }
  },
  {
    "path": "src/main/java/data/state.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "D//CS2103T HW//true//27/8/2019 2359"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 1
    }
  },
  {
    "path": "src/main/java/data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "D//CS2103T project//false//2/12/1997 2359"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "E//McDonalds//true//1/12/2019 0050"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "T//sleep//true"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 3
    }
  },
  {
    "path": "src/main/java/exception/DeleteParameterException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "public class DeleteParameterException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public DeleteParameterException(String exceptionMsg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        super(exceptionMsg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 7
    }
  },
  {
    "path": "src/main/java/exception/DoneParameterException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "public class DoneParameterException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public DoneParameterException(String exceptionMsg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        super(exceptionMsg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 7
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public DukeException(String exceptionMsg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        super(exceptionMsg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 7
    }
  },
  {
    "path": "src/main/java/exception/EmptyToDoDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "public class EmptyToDoDescriptionException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public EmptyToDoDescriptionException(String exceptionMsg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        super(exceptionMsg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 7
    }
  },
  {
    "path": "src/main/java/exception/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "public class InvalidInputException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public InvalidInputException(String exceptionMsg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        super(exceptionMsg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 7
    }
  },
  {
    "path": "src/main/java/exception/ParseFileException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "public class ParseFileException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public ParseFileException(String exceptionMsg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        super(exceptionMsg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 7
    }
  },
  {
    "path": "src/main/java/exception/UpdateStateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "public class UpdateStateException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public UpdateStateException(String exceptionMsg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        super(exceptionMsg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 7
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import command.ByeCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import command.ListCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import command.ToDoCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import command.DeadlineCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import command.EventCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import command.DeleteCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import exception.InvalidInputException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public static Command parse(String rawString) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        if (rawString.equals(\"bye\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        } else if (rawString.equals(\"list\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        } else if (rawString.startsWith(\"done \")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            return new DoneCommand(rawString);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        } else if (rawString.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            return new ToDoCommand(rawString);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        } else if (rawString.startsWith(\"deadline \")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            return new DeadlineCommand(rawString);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        } else if (rawString.startsWith(\"event \")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            return new EventCommand(rawString);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        } else if (rawString.startsWith(\"delete \")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            return new DeleteCommand(rawString);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            throw new InvalidInputException(\"Invalid command! Try the commands: bye, list, done, todo, deadline, \" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                    \"event or delete and their respective formats!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 36
    }
  },
  {
    "path": "src/main/java/parser/StorageParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import exception.ParseFileException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "public class StorageParser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public Task parseLine(String line) throws ParseFileException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        String[] splited \u003d line.split(\"//\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        if(splited[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            ToDo curr_task \u003d new ToDo(splited[1], Boolean.parseBoolean(splited[2]));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            return curr_task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        } else if(splited[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            Deadline curr_task \u003d new Deadline(splited[1], Boolean.parseBoolean(splited[2]), splited[3]);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            return curr_task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        } else if(splited[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            Event curr_task \u003d new Event(splited[1], Boolean.parseBoolean(splited[2]), splited[3]);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            return curr_task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            throw new ParseFileException(\"Exception while reading contents of state file!\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 26
    }
  },
  {
    "path": "src/main/java/run/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "package run;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import command.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import exception.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        ui.introduction();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        ui.init();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                ui.showLine(); // show the divider line (\"---------\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 39,
      "-": 2
    }
  },
  {
    "path": "src/main/java/run/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "package run;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import exception.ParseFileException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import exception.UpdateStateException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import parser.StorageParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import task.ToDo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    String filepath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    File state;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    StorageParser sp \u003d new StorageParser();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        init();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public void init() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        state \u003d new File(filepath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            if (state.createNewFile()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                Ui.showMessage(\"No file detected, state file created!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                Ui.showMessage(\"State file detected!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        } catch(IOException ex) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            Ui.showError(\"IO exception encountered while initializing state file!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        Scanner sc \u003d null;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            sc \u003d new Scanner(state);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                String nextLine \u003d sc.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                if(nextLine.equals(\"\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                    tasks.add(sp.parseLine(nextLine));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        } catch(IOException ex){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            Ui.showError(\"IO exception caught while loading state file, initializing new empty Task List!\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            return new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        } catch(ParseFileException ex) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            Ui.showError(\"Exception while reading contents of state file, initializing new empty Task List!\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            return new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            if(sc !\u003d null) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                sc.close();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public void updateState(TaskList tasks) throws IOException, UpdateStateException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        FileWriter fw \u003d null;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            fw \u003d new FileWriter(filepath);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            StringBuilder textToAddSB \u003d new StringBuilder();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            for (Task curr_task : tasks.getTasksArrayList()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                if (curr_task instanceof ToDo) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                    textToAddSB.append(fileUpdateToDo((ToDo) curr_task));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                    textToAddSB.append(System.lineSeparator());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                } else if (curr_task instanceof Deadline) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                    textToAddSB.append(fileUpdateDeadline((Deadline) curr_task));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                    textToAddSB.append(System.lineSeparator());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                } else if (curr_task instanceof Event) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                    textToAddSB.append(fileUpdateEvent((Event) curr_task));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                    textToAddSB.append(System.lineSeparator());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                    throw new UpdateStateException(\"Exception while updating state!\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            fw.write(textToAddSB.toString());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            if(fw !\u003d null) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                fw.close();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public String fileUpdateToDo(ToDo todo) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        StringBuilder SB \u003d  new StringBuilder();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        SB.append(\"T//\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        SB.append(todo.getName());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        SB.append(\"//\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        SB.append(todo.checkIsDone());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        return SB.toString();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public String fileUpdateDeadline(Deadline deadline) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        StringBuilder SB \u003d  new StringBuilder();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        SB.append(\"D//\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        SB.append(deadline.getName());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        SB.append(\"//\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        SB.append(deadline.checkIsDone());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        SB.append(\"//\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        SB.append(deadline.getStringBy());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        return SB.toString();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public String fileUpdateEvent(Event event) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        StringBuilder SB \u003d  new StringBuilder();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        SB.append(\"E//\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        SB.append(event.getName());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        SB.append(\"//\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        SB.append(event.checkIsDone());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        SB.append(\"//\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        SB.append(event.getStringAt());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        return SB.toString();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 124
    }
  },
  {
    "path": "src/main/java/run/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "package run;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasksArrayList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public void list() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        if(this.tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            Ui.showMessage(\"No tasks!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        Ui.printList(this.tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        Ui.printAdd(task, this.tasks.size());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public void done(int task_num) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        if(task_num \u003e this.tasks.size()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            Ui.showError(\"No task at that number! (Marking as done unsuccessful)\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        Task curr_task \u003d this.tasks.get(task_num - 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        curr_task.setDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        Ui.printDone(curr_task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public void delete(int task_num) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        if(task_num \u003e this.tasks.size()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            Ui.showError(\"No task at that number! (Deletion unsuccessful)\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        Task curr_task \u003d this.tasks.get(task_num - 1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        this.tasks.remove(task_num - 1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        Ui.printDelete(curr_task, this.tasks.size());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 50
    }
  },
  {
    "path": "src/main/java/run/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "package run;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    Scanner sc;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public static void showError(String errorMessage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public static void showMessage(String message) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        System.out.println(\"---------------------------------------------------------------------\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        System.out.println(\"---------------------------------------------------------------------\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public void introduction() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public void init() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public void closeScanner() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        this.sc.close();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        System.out.println(\"---------------------------------------------------------------------\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public static void printList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        for(int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            Task curr_task \u003d tasks.get(i-1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            System.out.println(i + \".\" + curr_task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public static void printAdd(Task task, int size) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        System.out.println(\"  \" + task);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        System.out.println(\"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public static void printDone(Task task) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        System.out.println(\"  \" + task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public static void printDelete(Task task, int size) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        System.out.println(\"  \" + task);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        System.out.println(\"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 63
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import run.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            this.by \u003d parseDateTime(by);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            Ui.showError(\"Invalid format! Try dd/mm/yyyy hhmm instead!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        } catch (DateTimeException ex) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            Ui.showError(ex.getMessage());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    private LocalDateTime parseDateTime(String by) throws DateTimeException, NumberFormatException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            String[] splited \u003d by.split(\" \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            String[] dateFields \u003d splited[0].split(\"/\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            int hour \u003d Integer.parseInt(splited[1].substring(0, 2));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            int minute \u003d Integer.parseInt(splited[1].substring(2));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            return LocalDateTime.of(Integer.parseInt(dateFields[2]), Integer.parseInt(dateFields[1]), Integer.parseInt(dateFields[0]), hour, minute);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        } catch (DateTimeException | NumberFormatException ex) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            throw ex;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public Deadline(String description, boolean isDone, String by) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        this.by \u003d parseDateTime(by);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public String getStringBy() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        return by.getDayOfMonth() + \"/\" + by.getMonthValue() + \"/\" + by.getYear() + \" \" + String.format(\"%02d\", by.getHour()) + String.format(\"%02d\", by.getMinute());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + getStringBy() + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 47
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import run.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            this.at \u003d parseDateTime(at);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            Ui.showError(\"Invalid format! Try dd/mm/yyyy hhmm instead!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        } catch (DateTimeException ex) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            Ui.showError(ex.getMessage());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    private LocalDateTime parseDateTime(String at) throws DateTimeException, NumberFormatException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            String[] splited \u003d at.split(\" \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            String[] dateFields \u003d splited[0].split(\"/\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            int hour \u003d Integer.parseInt(splited[1].substring(0, 2));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            int minute \u003d Integer.parseInt(splited[1].substring(2));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            return LocalDateTime.of(Integer.parseInt(dateFields[2]), Integer.parseInt(dateFields[1]), Integer.parseInt(dateFields[0]), hour, minute);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        } catch (DateTimeException | NumberFormatException ex) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            throw ex;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public Event(String description, boolean isDone, String at) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        this.at \u003d parseDateTime(at);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public String getStringAt() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        return at.getDayOfMonth() + \"/\" + at.getMonthValue() + \"/\" + at.getYear() + \" \" + String.format(\"%02d\", at.getHour()) + String.format(\"%02d\", at.getMinute());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + getStringAt() + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 47
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public Task(String name, boolean isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public boolean checkIsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        return (isDone ? \"✓\" : \"✗\"); //return tick or X symbols"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"]\" + \" \" + this.getName();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 37
    }
  },
  {
    "path": "src/main/java/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 16
    }
  }
]
