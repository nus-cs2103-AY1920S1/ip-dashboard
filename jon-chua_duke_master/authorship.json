[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "[![Build Status](https://travis-ci.org/jon-chua/duke.svg?branch\u003dmaster)](https://travis-ci.org/jon-chua/duke)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "[![Codacy Badge](https://api.codacy.com/project/badge/Grade/bfa3ec5eb6e94e398d86e84471e95fbb)](https://www.codacy.com/manual/jon-chua/duke?utm_source\u003dgithub.com\u0026amp;utm_medium\u003dreferral\u0026amp;utm_content\u003djon-chua/duke\u0026amp;utm_campaign\u003dBadge_Grade)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "Duke Increment | Tutorial"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "jon-chua": 3,
      "-": 39
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    mainClassName \u003d \"duke.main.Duke\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "test {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 20,
      "-": 15
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "1. Add tasks such as todos, events or deadlines to Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "1. Mark tasks as completed"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "1. Undo feature"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "1. Date parsing for events and deadlines"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "### `todo \u003cdescription\u003e` - Adds a Todo"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "Adds a Todo to Duke."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "`todo sample task`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\u003cimg src\u003d\"https://puu.sh/EhtFk.png\" width\u003d\"400\" height\u003d\"650\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "### `event \u003cdescription\u003e /at \u003cdate\u003e` - Adds an Event at `\u003cdate\u003e`"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "Adds an event at the date provided to Duke."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "`event cs2103t lecture /at 20/09/2019 1600`"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\u003cimg src\u003d\"https://puu.sh/EhtHZ.png\" width\u003d\"400\" height\u003d\"650\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "### `deadline \u003cdescription\u003e /by \u003cdate\u003e` - Adds a Deadline by `\u003cdate\u003e`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "Adds a deadline by the date to Duke."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "`deadline assignment /by 21/09/2019 2359`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\u003cimg src\u003d\"https://puu.sh/EhtIY.png\" width\u003d\"400\" height\u003d\"650\"\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "### `list` - List all tasks"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "Lists all tasks in Duke."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\u003cimg src\u003d\"https://puu.sh/EhtJX.png\" width\u003d\"400\" height\u003d\"650\"\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "### `done \u003ctask number\u003e` - Mark as done"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "Marks the task with the current task number as done."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "`done 5`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\u003cimg src\u003d\"https://puu.sh/EhtKY.png\" width\u003d\"400\" height\u003d\"650\"\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "### `undo \u003csteps to undo\u003e` - Undo"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "Undo the number of steps given."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "`undo 1`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\u003cimg src\u003d\"https://puu.sh/EhtOZ.png\" width\u003d\"400\" height\u003d\"1150\"\u003e"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 68,
      "-": 13
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/duke/command/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.main.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "public class AddDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private String deadlineBy;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private Date deadlineDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public AddDeadlineCommand(String description, String deadlineBy) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.deadlineBy \u003d deadlineBy;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public AddDeadlineCommand(String description, Date deadlineDate) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.deadlineDate \u003d deadlineDate;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        tasks.addToStack();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        Deadline deadline;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        if (deadlineDate \u003d\u003d null) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            deadline \u003d new Deadline(description, deadlineBy);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            deadline \u003d new Deadline(description, deadlineDate);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        tasks.add(deadline);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        ui.printAddSuccessMessage(deadline, tasks.size());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        storage.save(tasks.getAllTasks());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 40
    }
  },
  {
    "path": "src/main/java/duke/command/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.main.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private String eventAt;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private Date eventDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public AddEventCommand(String description, String deadlineBy) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.eventAt \u003d deadlineBy;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public AddEventCommand(String description, Date deadlineDate) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.eventDate \u003d deadlineDate;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        tasks.addToStack();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        Event event;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        if (eventDate \u003d\u003d null) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            event \u003d new Event(description, eventAt);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            event \u003d new Event(description, eventDate);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        tasks.add(event);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        ui.printAddSuccessMessage(event, tasks.size());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        storage.save(tasks.getAllTasks());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 40
    }
  },
  {
    "path": "src/main/java/duke/command/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.main.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "public class AddTodoCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public AddTodoCommand(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        tasks.addToStack();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        tasks.add(todo);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        ui.printAddSuccessMessage(todo, tasks.size());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        storage.save(tasks.getAllTasks());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 25
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.main.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * Executes the command given the TaskList, Ui and Storage."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * @param tasks   The given TaskList."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * @param ui      The given Ui."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * @param storage The given Storage."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * @throws DukeException DukeException when there is an error executing the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * Is exit boolean."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * @return True if the command is an exit command, false otherwise."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jon-chua": 29
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.main.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private int zeroBasedIndex;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public DeleteCommand(int oneBasedIndex) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.zeroBasedIndex \u003d oneBasedIndex - 1;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        if (zeroBasedIndex \u003c 0 || zeroBasedIndex \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            throw new DukeException(\"OOPS!!! The index to remove cannot be less than 0 or \""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                    + \"greater than the length of the list.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        tasks.addToStack();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        Task deletedTask \u003d tasks.get(zeroBasedIndex);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        tasks.delete(zeroBasedIndex);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        ui.printDeleteSuccessMessage(deletedTask, tasks.size());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        storage.save(tasks.getAllTasks());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 29
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.main.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private int zeroBasedIndex;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public DoneCommand(int oneBasedIndex) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.zeroBasedIndex \u003d oneBasedIndex - 1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        if (zeroBasedIndex \u003c 0 || zeroBasedIndex \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            throw new DukeException(\"OOPS!!! The index to mark as done cannot be less than 0 or \""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                    + \"greater than the length of the list.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        tasks.addToStack();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        tasks.markTaskAsDone(zeroBasedIndex);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        ui.printMessage(\"Nice! I\u0027ve marked this task as done:\\n\\t\\t\" + tasks.get(zeroBasedIndex));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        storage.save(tasks.getAllTasks());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 27
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        ui.printExitMessage();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 18
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private String toFind;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public FindCommand(String toFind) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.toFind \u003d toFind;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        ArrayList\u003cTask\u003e filteredTasks \u003d tasks.find(toFind);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        ui.printList(filteredTasks, \"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 22
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        ui.printList(tasks.getAllTasks(), \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 12
    }
  },
  {
    "path": "src/main/java/duke/command/UndoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.main.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "public class UndoCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private int stepsToUndo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public UndoCommand(int stepsToUndo) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.stepsToUndo \u003d stepsToUndo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        if (stepsToUndo \u003e tasks.getMaxUndo() || stepsToUndo \u003c\u003d 0) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            throw new DukeException(\"Number of undo operations cannot exceed total number of operations performed \""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                    + \"and cannot be less than or equal to 0!\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        tasks.undo(stepsToUndo);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        ui.printUndoSuccessMessage(stepsToUndo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        storage.save(tasks.getAllTasks());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 26
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 7
    }
  },
  {
    "path": "src/main/java/duke/main/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        setMinHeight(Region.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 63
    }
  },
  {
    "path": "src/main/java/duke/main/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private boolean isExit \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static final String filePath \u003d \"data/tasks.txt\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    Duke() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        if (isExit) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            ui.resetOutput();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            return ui.getOutput();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 39,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/main/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 12
    }
  },
  {
    "path": "src/main/java/duke/main/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 32
    }
  },
  {
    "path": "src/main/java/duke/main/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        showWelcomeMessage();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        if (response.trim().isBlank()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                    DialogBox.getUserDialog(input, userImage)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            );"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        );"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private void showWelcomeMessage() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                DialogBox.getDukeDialog(\"Welcome to Duke!\", dukeImage)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        );"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 69
    }
  },
  {
    "path": "src/main/java/duke/main/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.command.AddEventCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.command.AddTodoCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.command.UndoCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "class Parser {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        if (isExitCommand(fullCommand)) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } else if (isUndoCommand(fullCommand)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            String newInput \u003d fullCommand.replaceFirst(\"undo\", \"\").trim();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            int stepsToUndo \u003d validateUndo(newInput);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            return new UndoCommand(stepsToUndo);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } else if (isListCommand(fullCommand)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } else if (isDoneCommand(fullCommand)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            String newInput \u003d fullCommand.replaceFirst(\"done\", \"\").trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            int oneBasedIndex \u003d validateDoneIndex(newInput);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            return new DoneCommand(oneBasedIndex);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } else if (isAddTodoCommand(fullCommand)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            String todo \u003d fullCommand.replaceFirst(\"todo\", \"\").trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            validateTodo(todo);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            return new AddTodoCommand(todo);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } else if (isAddDeadlineCommand(fullCommand)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            String[] deadline \u003d validateDeadline(fullCommand);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            if (isDate(deadline[1])) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                Date deadlineDate \u003d parseDate(deadline[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                return new AddDeadlineCommand(deadline[0], deadlineDate);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                return new AddDeadlineCommand(deadline[0], deadline[1]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } else if (isAddEventCommand(fullCommand)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            String[] event \u003d validateEvent(fullCommand);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            if (isDate(event[1])) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                Date eventDate \u003d parseDate(event[1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                return new AddEventCommand(event[0], eventDate);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                return new AddEventCommand(event[0], event[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } else if (isDeleteCommand(fullCommand)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            String newInput \u003d fullCommand.replaceFirst(\"delete\", \"\").trim();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            int oneBasedIndex \u003d validateDeleteIndex(newInput);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            return new DeleteCommand(oneBasedIndex);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } else if (isFindCommand(fullCommand)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            String toFind \u003d fullCommand.replaceFirst(\"find\", \"\").trim();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            validateFindInput(toFind);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            return new FindCommand(toFind);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    static Date parseDate(String date) throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            return dateFormatter.parse(date);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            throw new DukeException(\"An error occurred while parsing date: \" + e);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    static boolean isDate(String input) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        // Assume date is in the format 2/12/2019 1800"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        String[] splitInput \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        if (splitInput.length !\u003d 3 || isNotNumeric(splitInput[0]) || isNotNumeric(splitInput[1])) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        String[] yearAndTime \u003d splitInput[2].split(\" \");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return yearAndTime.length \u003d\u003d 2 \u0026\u0026 !isNotNumeric(yearAndTime[0]) \u0026\u0026 !isNotNumeric(yearAndTime[1]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static int validateDoneIndex(String doneInput) throws DukeException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return validateDoneOrDeleteIndex(doneInput);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static int validateDeleteIndex(String deleteInput) throws DukeException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return validateDoneOrDeleteIndex(deleteInput);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static int validateDoneOrDeleteIndex(String doneInput) throws DukeException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        // Checks that the string is not empty and is an integer"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        if (doneInput.isEmpty() || isNotNumeric(doneInput)) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            throw new DukeException(\"OOPS!!! The index to remove cannot be blank or not an integer.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return Integer.parseInt(doneInput);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static int validateUndo(String undoInput) throws DukeException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        // Checks that the string is not empty and is an integer"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        if (undoInput.isEmpty() || isNotNumeric(undoInput)) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            throw new DukeException(\"OOPS!!! The number of steps to undo cannot be blank or not an integer.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return Integer.parseInt(undoInput);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static boolean isNotNumeric(String input) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return !input.matches(\"-?\\\\d+(\\\\.\\\\d+)?\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static void validateTodo(String todo) throws DukeException {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        if (todo.isEmpty()) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static void validateFindInput(String toFind) throws DukeException {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        if (toFind.isEmpty()) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            throw new DukeException(\"OOPS!!! The provided filter for find cannot be empty.\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static String[] validateEvent(String input) throws DukeException {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return validateEventOrDeadline(input, \"event\", \"/at\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static String[] validateDeadline(String input) throws DukeException {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return validateEventOrDeadline(input, \"deadline\", \"/by\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static String[] validateEventOrDeadline(String input, String textToReplace, String textToSplit)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        // Removes textToReplace from input,"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        // and finally split it by textToSplit"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        String[] splitInput \u003d input.replaceFirst(textToReplace, \"\")"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                .trim().split(textToSplit);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        // Trims all whitespace from the resulting split"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        for (int i \u003d 0; i \u003c splitInput.length; i++) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            splitInput[i] \u003d splitInput[i].trim();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        // Event or deadline should be of length 2 after splitting and both should not be blank"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        if (splitInput.length !\u003d 2 || splitInput[0].isBlank() || splitInput[1].isBlank()) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            throw new DukeException(\"OOPS!!! I had trouble processing that input.\\n\""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                    + \"Please make sure that the task description and dates are not empty!\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return splitInput;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static boolean isUndoCommand(String input) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return input.startsWith(\"undo\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static boolean isFindCommand(String input) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return input.startsWith(\"find\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static boolean isExitCommand(String input) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return \"bye\".equals(input);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static boolean isListCommand(String input) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return \"list\".equals(input);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static boolean isDoneCommand(String input) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return input.startsWith(\"done\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static boolean isAddTodoCommand(String input) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return input.startsWith(\"todo\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static boolean isAddDeadlineCommand(String input) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return input.startsWith(\"deadline\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static boolean isAddEventCommand(String input) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return input.startsWith(\"event\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static boolean isDeleteCommand(String input) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return input.startsWith(\"delete\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 191
    }
  },
  {
    "path": "src/main/java/duke/main/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    Storage(String filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * Loads tasks from the user\u0027s hard drive."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * @return The list of tasks currently stored in the user\u0027s hard drive."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                return tasks;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            String input;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            while ((input \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                String[] splitInput \u003d input.split(\" \\\\| \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                switch (splitInput[0]) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                    task \u003d new Todo(splitInput[2]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                    if (Parser.isDate(splitInput[3])) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                        task \u003d new Deadline(splitInput[2], Parser.parseDate(splitInput[3]));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                    task \u003d new Deadline(splitInput[2], splitInput[3]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                    if (Parser.isDate(splitInput[3])) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                        task \u003d new Event(splitInput[2], Parser.parseDate(splitInput[3]));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                    task \u003d new Event(splitInput[2], splitInput[3]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                    throw new DukeException(\"Error occurred during file parsing, unexpected task type encountered.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                if (Integer.parseInt(splitInput[1]) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            throw new DukeException(\"An IOException occurred. \" + e);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            throw new DukeException(\"An error occurred during file parsing, unexpected done value encountered.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * Saves the given list to the user\u0027s hard drive."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * @param list The given list to be saved."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e list) throws DukeException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(file));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            for (Task l : list) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                bw.append(l.getOutputFormat());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                bw.append(\"\\n\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            throw new DukeException(\"An IOException occurred. \" + e);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 102
    }
  },
  {
    "path": "src/main/java/duke/main/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.util.Stack;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private Stack\u003cArrayList\u003cTask\u003e\u003e taskListStack;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        taskListStack \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        taskListStack \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * Adds a deep copy of itself to task list stack."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public void addToStack() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        // Make a deep copy of task list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        taskListStack.push(newList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * Restores task list by performing the undo operation."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * @param numOfSteps the num of steps"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public void undo(int numOfSteps) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        for (int i \u003d 0; i \u003c numOfSteps - 1; i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            taskListStack.pop();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        tasks \u003d taskListStack.pop();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * Gets max undo."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * @return the max undo"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public int getMaxUndo() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return taskListStack.size();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * Gets all tasks present."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * @return The list of all tasks."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public ArrayList\u003cTask\u003e getAllTasks() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * Returns the task given the zero based index of the task."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * @param zeroBasedIndex The given index to be returned."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public Task get(int zeroBasedIndex) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assert zeroBasedIndex \u003e\u003d 0 \u0026\u0026 zeroBasedIndex \u003c tasks.size();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return tasks.get(zeroBasedIndex);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * Marks a task as done given the zero based index of the task."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * @param zeroBasedIndex The given index to be deleted."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public void markTaskAsDone(int zeroBasedIndex) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assert zeroBasedIndex \u003e\u003d 0 \u0026\u0026 zeroBasedIndex \u003c tasks.size();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        tasks.get(zeroBasedIndex).markAsDone();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * Adds a task to the back of the list."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * @param task The task to be added."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assert task !\u003d null;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * Deletes a task from the list given the zero based index of the task."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * @param zeroBasedIndex The given index to be deleted."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public void delete(int zeroBasedIndex) throws DukeException {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        if (zeroBasedIndex \u003c 0 || zeroBasedIndex \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            throw new DukeException(\"OOPS!!! The index to remove cannot be less than 0 or \""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                    + \"greater than the length of the list.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        tasks.remove(zeroBasedIndex);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * Returns the size of the task list."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * @return The size of the list."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * Finds tasks in the list containing the given String in their description."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * @param toFind The criteria to filter tasks."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * @return An ArrayList containing all tasks containing thg given String in their description."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public ArrayList\u003cTask\u003e find(String toFind) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assert !toFind.isBlank();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            if (t.getDescription().contains(toFind)) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                filteredTasks.add(t);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return filteredTasks;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 132
    }
  },
  {
    "path": "src/main/java/duke/main/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private StringBuilder output;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    Ui() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    void resetOutput() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        output.setLength(0);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    String getOutput() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private void appendToOutput(String str) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        output.append(str);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * Prints a success message after an undo operation is successfully performed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * @param stepsToUndo Number of times to perform undo operation."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public void printUndoSuccessMessage(int stepsToUndo) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        appendToOutput(\"Performed undo \" + stepsToUndo + \" times!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * Prints a success message after a task is successfully added to the list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * @param task Task added to list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * @param size Current size of list after addition."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public void printAddSuccessMessage(Task task, int size) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        appendToOutput(\"Got it. I\u0027ve added this task:\\n\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        appendToOutput(\"\\t\" + task + \"\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        appendToOutput(\"Now you have \" + size + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * Prints a success message after a task is deleted from to the list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * @param task Task deleted from list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * @param size Current size of list after deletion."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public void printDeleteSuccessMessage(Task task, int size) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        appendToOutput(\"Noted. I\u0027ve removed this task:\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        appendToOutput(\"\\t\" + task + \"\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        appendToOutput(\"Now you have \" + size + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * Prints the given list with formatting."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * @param tasks List of tasks to be printed."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * @param message The message to be printed before printing the list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public void printList(ArrayList\u003cTask\u003e tasks, String message) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        appendToOutput(message + \"\\n\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            int oneBasedIndex \u003d i + 1;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            String formattedOutput \u003d String.format(\"%d. %s\\n\", oneBasedIndex, tasks.get(i));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            appendToOutput(formattedOutput);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    String getGreeting() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return \"Hello from Duke\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * Prints the exit message."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public void printExitMessage() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        appendToOutput(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * Prints a given message with formatting."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     * @param message The message to be printed."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public void printMessage(String message) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        appendToOutput(message);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 94
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private String deadlineBy;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private Date deadlineDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public Deadline(String description, String deadlineBy) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.deadlineBy \u003d deadlineBy;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public Deadline(String description, Date deadlineDate) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.deadlineDate \u003d deadlineDate;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public String getOutputFormat() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        if (deadlineBy \u003d\u003d null) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            return String.format(\"D | %d | %s | %s\", isDone ? 1 : 0, description, dateFormatter.format(deadlineDate));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return String.format(\"D | %d | %s | %s\", isDone ? 1 : 0, description, deadlineBy);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        if (deadlineDate !\u003d null) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            DateFormat dtf \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm:ss\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            return String.format(\"[D]%s (by: %s)\", super.toString(), dtf.format(deadlineDate));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            return String.format(\"[D]%s (by: %s)\", super.toString(), deadlineBy);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 39
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private String eventTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private Date eventDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public Event(String description, String eventTime) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public Event(String description, Date eventDate) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.eventDate \u003d eventDate;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public String getOutputFormat() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        if (eventTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            return String.format(\"E | %d | %s | %s\", isDone ? 1 : 0, description, dateFormatter.format(eventDate));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return String.format(\"E | %d | %s | %s\", isDone ? 1 : 0, description, eventTime);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        if (eventDate !\u003d null) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            DateFormat dtf \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm:ss\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            return String.format(\"[E]%s (at: %s)\", super.toString(), dtf.format(eventDate));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            return String.format(\"[E]%s (at: %s)\", super.toString(), eventTime);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 39
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return (isDone ? \"O\" : \"X\"); //return O or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public String getOutputFormat() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return String.format(\"X | %d | %s\", isDone ? 1 : 0, description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 31
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public String getOutputFormat() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return String.format(\"T | %d | %s\", isDone ? 1 : 0, description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 17
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.main.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 19
    }
  },
  {
    "path": "src/test/java/duke/main/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.command.AddEventCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.command.AddTodoCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    void parserTest() throws DukeException  {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assertTrue(Parser.parse(\"bye\") instanceof ExitCommand);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assertTrue(Parser.parse(\"list\") instanceof ListCommand);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assertTrue(Parser.parse(\"find abc\") instanceof FindCommand);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assertTrue(Parser.parse(\"done 2\") instanceof DoneCommand);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assertTrue(Parser.parse(\"delete 2\") instanceof DeleteCommand);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assertTrue(Parser.parse(\"todo todo\") instanceof AddTodoCommand);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assertTrue(Parser.parse(\"deadline deadline /by deadlineBy\") instanceof AddDeadlineCommand);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assertTrue(Parser.parse(\"deadline deadline /by 25/07/2015 1500\") instanceof AddDeadlineCommand);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assertTrue(Parser.parse(\"event event /at eventAt\") instanceof AddEventCommand);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assertTrue(Parser.parse(\"event event /at 26/07/2014 1600\") instanceof AddEventCommand);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 32
    }
  },
  {
    "path": "src/test/java/duke/main/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    void defaultTaskConstructorTest() throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assertEquals(0, taskList.size(), \"Initial size of list should be 0\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        Todo test \u003d new Todo(\"todo\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        taskList.add(test);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assertEquals(test, taskList.get(0), \"Test insert todo into list\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        ArrayList\u003cTask\u003e filteredTasks \u003d taskList.find(\"todo\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assertEquals(1, filteredTasks.size(), \"List of filtered tasks should be 1\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        filteredTasks \u003d taskList.find(\"hello\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assertEquals(0, filteredTasks.size(), \"List of filtered tasks should be 0\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        taskList.delete(0);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assertEquals(0, taskList.size(), \"Size of list after deletion should be 0\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    void overloadedTaskConstructorTest() throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        Todo todo \u003d new Todo(\"test\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"deadline\", new Date(0));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        tasks.add(todo);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        tasks.add(deadline);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        TaskList taskList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assertEquals(2, taskList.size(), \"Initial size of list with provided values should be 2\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        Event event \u003d new Event(\"event\", \"eventTime\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        taskList.add(event);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assertEquals(3, taskList.size(), \"Size of list after addition should be 3\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assertEquals(todo, taskList.get(0), \"Test get todo from list\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assertEquals(deadline, taskList.get(1),\"Test get deadline from list\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assertEquals(event, taskList.get(2), \"Test get event from list\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        taskList.delete(0);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assertEquals(2, taskList.size(), \"Size of list after deletion should be 2\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assertEquals(deadline, taskList.get(0), \"Test get deadline from list\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assertEquals(event, taskList.get(1), \"Test get event from list\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 60
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    void deadlineTestWithString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        Deadline test \u003d new Deadline(\"deadline\", \"deadlineBy\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assertEquals(\"[D][X] deadline (by: deadlineBy)\", test.toString(), \"toString() method works\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        test.markAsDone();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assertEquals(\"[D][O] deadline (by: deadlineBy)\", test.toString(), \"markAsDone() method works\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    void deadlineTestWithDate() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        Deadline test \u003d new Deadline(\"deadline\", new Date(0));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assertTrue(test.toString().contains(\"[D][X] deadline\"), \"toString() method works\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        test.markAsDone();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assertTrue(test.toString().contains(\"[D][O] deadline\"), \"markAsDone() method works\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 28
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    void eventTestWithString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        Event test \u003d new Event(\"event\", \"eventTime\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assertEquals(\"[E][X] event (at: eventTime)\", test.toString(), \"toString() method works\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        test.markAsDone();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assertEquals(\"[E][O] event (at: eventTime)\", test.toString(), \"markAsDone() method works\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    void eventTestWithDate() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        Event test \u003d new Event(\"event\", new Date(0));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assertTrue(test.toString().contains(\"[E][X] event\"), \"toString() method works\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        test.markAsDone();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assertTrue(test.toString().contains(\"[E][O] event\"), \"toString() method works\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 28
    }
  },
  {
    "path": "src/test/java/duke/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    void todoTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        Todo test \u003d new Todo(\"test\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assertEquals(\"[T][X] test\", test.toString(), \"toString() method works\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        test.markAsDone();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        assertEquals(\"[T][O] test\", test.toString(), \"markAsDone() method works\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 16
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tHello, I\u0027m Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tWhat can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t\t[T][?] test todo"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tNow you have 1 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t\t[D][?] buy books (by: 20th August)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tNow you have 2 tasks in the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tHere are the tasks in your list:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t1. [T][?] test todo"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t2. [D][?] buy books (by: 20th August)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t\t[E][?] project meeting (at: 21st August)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tNow you have 3 tasks in the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tHere are the tasks in your list:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t1. [T][?] test todo"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t2. [D][?] buy books (by: 20th August)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t3. [E][?] project meeting (at: 21st August)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tNice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t\t[D][?] buy books (by: 20th August)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tHere are the tasks in your list:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t1. [T][?] test todo"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t2. [D][?] buy books (by: 20th August)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t3. [E][?] project meeting (at: 21st August)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tNice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t\t[T][?] test todo"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t? OOPS!!! The index to remove cannot be blank or not an integer."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t? OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t? OOPS!!! I had trouble processing that input."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tPlease make sure that the task description and dates are not empty!"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t? OOPS!!! I had trouble processing that input."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tPlease make sure that the task description and dates are not empty!"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t? OOPS!!! The description of a todo cannot be empty."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t? OOPS!!! I had trouble processing that input."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tPlease make sure that the task description and dates are not empty!"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t? OOPS!!! I had trouble processing that input."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tPlease make sure that the task description and dates are not empty!"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t? OOPS!!! I had trouble processing that input."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tPlease make sure that the task description and dates are not empty!"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t? OOPS!!! I had trouble processing that input."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tPlease make sure that the task description and dates are not empty!"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t? OOPS!!! I had trouble processing that input."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tPlease make sure that the task description and dates are not empty!"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t? OOPS!!! I had trouble processing that input."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tPlease make sure that the task description and dates are not empty!"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t? OOPS!!! The index to mark as done cannot be less than 0 or greater than the length of the list."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t? OOPS!!! The index to mark as done cannot be less than 0 or greater than the length of the list."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t? OOPS!!! The index to remove cannot be blank or not an integer."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tHere are the tasks in your list:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t1. [T][?] test todo"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t2. [D][?] buy books (by: 20th August)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t3. [E][?] project meeting (at: 21st August)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t? OOPS!!! The index to delete cannot be less than 0 or greater than the length of the list."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t? OOPS!!! The index to delete cannot be less than 0 or greater than the length of the list."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t? OOPS!!! The index to remove cannot be blank or not an integer."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tNoted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t\t[D][?] buy books (by: 20th August)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tNow you have 2 tasks in the list."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tHere are the tasks in your list:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t1. [T][?] test todo"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t2. [E][?] project meeting (at: 21st August)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t\t[E][?] event (at: 15/10/2015 14:50:00)"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tNow you have 3 tasks in the list."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t\t[D][?] deadline (by: 12/10/2016 15:00:00)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tNow you have 4 tasks in the list."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tHere are the tasks in your list:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t1. [T][?] test todo"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t2. [E][?] project meeting (at: 21st August)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t3. [E][?] event (at: 15/10/2015 14:50:00)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t4. [D][?] deadline (by: 12/10/2016 15:00:00)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tBye. Hope to see you again soon!"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 146
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "todo test todo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "deadline buy books /by 20th August"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "event project meeting /at 21st August"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "done"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "listabc"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "todo"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "deadline test /by"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "event test /at"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "deadline /by test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "event /at test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "deadline test /at test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "event test /by test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "done abcdef"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "delete abcdef"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "event event /at 15/10/2015 1450"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "deadline deadline /by 12/10/2016 1500"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 32
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\main\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\command\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 22
    }
  }
]
