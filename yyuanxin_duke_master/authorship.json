[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 10,
      "-": 14
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * subclass of command"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * execute adding tasks operations: todo, event, deadline"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected Task task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public AddCommand(String type, String command) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            parser.checkTask(type, command);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                this.task \u003d new Todo(command);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                this.type \u003d \"T\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                String[] arr \u003d command.split(\"/by\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                this.task \u003d new Deadline(arr[0].trim(), parser.datetimeformat(arr[1].trim()));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                this.type \u003d \"D\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            } else if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                String[] arr \u003d command.split(\"/at\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                this.task \u003d new Event(arr[0].trim(), arr[1].trim());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                this.type \u003d \"E\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException{"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        tasks.getList().add(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        storage.saveTasks(task, type);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        ui.printAddTask(task, tasks.getList().size());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 42
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * abstract class for command"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    abstract boolean isExit();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 11
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * subclass of task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * handles deadline type task of a specific time"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String getType() { return \"D\"; }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return description + \" | \" + by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return \"[D]\"  +super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 25
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * subclass of command"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * execute delete tasks operations"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected int pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public DeleteCommand(String command) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "       this.command \u003d command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            if (parser.validNumber(command, tasks.getList().size())) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                pos \u003d Integer.parseInt(command);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                Task currTask \u003d tasks.deleteTask(pos);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                storage.updateTasks(currTask, \"delete\", pos - 1);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                ui.printDeletedTask(currTask, tasks.getList().size());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 30
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * main class"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                Command c \u003d parser.parse(fullCommand);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 38,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * inherits from exception class"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * handles all exception of duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * subclass of task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * handles event type tasks with a specific time period"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String getType() { return \"E\"; }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return description + \" | \" + time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return \"[E]\"  + super.toString() + \" (at: \" + time + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 25
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        ui.showBye();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 11
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public FindCommand(String command) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "       this.command \u003d command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            ArrayList\u003cTask\u003e results \u003d tasks.searchTasks(command);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            if (results.isEmpty()) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                throw new DukeException(\"     0 Matching Results found!\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                ui.printMatches(results);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 26
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * subclass of command"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * operation to print all list information"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        ui.showList(tasks);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 16
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * deals with making sense of the user command"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public Command parse(String fullcommand) throws DukeException{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            if (fullcommand.equals(\"list\")) { //LIST"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            } else if (fullcommand.startsWith(\"done\")) { //DONE"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                command \u003d fullcommand.replaceFirst(\"done\", \"\").trim();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                return new UpdateCommand(command);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            } else if (fullcommand.startsWith(\"delete\")) { //DELETE"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                command \u003d fullcommand.replaceFirst(\"delete\", \"\").trim();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                return new DeleteCommand(command);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            } else if (fullcommand.startsWith(\"find\")) { //FIND"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                command \u003d fullcommand.replaceFirst(\"find\", \"\").trim();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                return new FindCommand(command);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            } else if (fullcommand.startsWith(\"todo\")) { //ADD: TODO"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                command \u003d fullcommand.replaceFirst(\"todo\", \"\").trim();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                return new AddCommand(\"T\", command);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            } else if (fullcommand.startsWith(\"deadline\")) { //ADD: DEADLINE"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                command \u003d fullcommand.replaceFirst(\"deadline\", \"\").trim();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                return new AddCommand(\"D\", command);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            } else if (fullcommand.startsWith(\"event\")) { //ADD: EVENT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                command \u003d fullcommand.replaceFirst(\"event\", \"\").trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                return new AddCommand(\"E\", command);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            } else if (fullcommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                throw new DukeException(\"       OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    // check if task command is valid"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void checkTask(String type, String command) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            if (command.isEmpty()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                throw new DukeException(\"       OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            String[] arr \u003d command.split(\"/by\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            if (arr[0].trim().isEmpty()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                throw new DukeException(\"       OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            } else if (arr.length \u003c 2 || arr[1].trim().isEmpty()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                throw new DukeException(\"       OOPS!!! The deadline must have a specified date/time.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } else if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            String[] arr \u003d command.split(\"/at\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            if (arr[0].trim().isEmpty()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                throw new DukeException(\"       OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            } else if (arr.length \u003c 2 || arr[1].trim().isEmpty()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                throw new DukeException(\"       OOPS!!! The event must have a specified date/time.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    // check if command is valid number"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public boolean validNumber(String command, int listSize) throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            if (command.isEmpty()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                throw new DukeException(\"       OOPS!!! Command cannot be empty! Please try again!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            if (!command.matches(\"\\\\d+\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                throw new DukeException(\"       OOPS!!! Task id has to be numeric type!\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            int pos \u003d Integer.parseInt(command);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            if (pos \u003e listSize || pos \u003c\u003d 0) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                throw new DukeException(\"       OOPS!!! Task id not within range of total number of tasks!\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    // format date and time"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String datetimeformat(String input) throws DukeException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            System.out.println(input);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            LocalDateTime datetime \u003d LocalDateTime.parse(input, DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\")); //convert to ISO_LOCAL_DATE_TIME"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\" MMMM yyyy, ha\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            return getSuffix(datetime.getDayOfMonth()).concat(datetime.format(format));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            throw new DukeException(\"Invalid date format: dd/mm/yyyy HHmm only!\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    // get day suffix for date formatter"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String getSuffix(int day) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        switch (day) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            case 21:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            case 31:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                return day + \"st\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            case 2:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            case 22:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                return day + \"nd\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            case 3:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            case 23:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                return day + \"rd\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                return day + \"th\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 117
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.nio.file.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public File file;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public File dir;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String filepath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        String[] arr \u003d filepath.split(\"/\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        dir \u003d new File(arr[0]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        dir.mkdirs();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        this.dir \u003d dir;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        this.file \u003d new File(dir, arr[1]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        this.filepath \u003d arr[1];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    // transform data in file to array"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws Exception{"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            if (file.exists()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                return loadTasks();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                throw new DukeException(\"New Path: File does not exist\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    // Helper Function to load method"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public ArrayList\u003cTask\u003e loadTasks() throws IOException{"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            FileReader reader \u003d new FileReader(file);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(reader);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            while ((line \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                String[] arr \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                switch (arr[0]) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                    case \"T\": //todo"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                        task \u003d new Todo(arr[2]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                    case \"D\": //deadline"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                        task \u003d new Deadline(arr[2], arr[3]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                    case \"E\": //event"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                        task \u003d new Deadline(arr[2], arr[3]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                        throw new IOException(\"Something is Wrong!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                if (Integer.parseInt(arr[1]) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    // add new tasks information in file"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void saveTasks(Task task, String type) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            FileWriter writer \u003d new FileWriter(file, true); //initialize file writer"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(writer);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            int status;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            if (task.getStatus() \u003d\u003d true) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                status \u003d 1;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                status \u003d 0;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            bufferedWriter.write(type + \" | \" + status + \" | \" + task.getDescription());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            bufferedWriter.newLine();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    // edit existing tasks in file: delete and done commands"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void updateTasks(Task task, String command, int position) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            File temp \u003d new File(dir, \"temp.txt\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            FileWriter writer \u003d new FileWriter(temp);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(writer);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            FileReader reader \u003d new FileReader(file); //initialize file reader"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(reader);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            int counter \u003d 0;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            while ((line \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                if (counter !\u003d position \u0026\u0026 (!command.equals(\"delete\") || !command.equals(\"done\"))) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                    bufferedWriter.write(line);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                    bufferedWriter.newLine();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                    counter++;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                // DONE COMMAND: counter \u003d\u003d position"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                    int status \u003d 1;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                    bufferedWriter.write(task.getType() + \" | \" + status + \" | \" + task.getDescription());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                    bufferedWriter.newLine();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                // DELETE COMMAND: ignore current line"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            //overwrite master txt copy"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            file.delete();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            file \u003d new File(dir, filepath);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            temp.renameTo(file);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 130
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * handles task types"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    // initialize new task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return (isDone ? \"X\" : \" \"); //return tick or X symbols"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public boolean getStatus() { return isDone; }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String getType() { return \"GENERAL\"; }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 35
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * contains the task list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * - contains operations for commands to list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    //update task in list of given position"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public Task updateTask(int num) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        Task currTask \u003d tasks.get(num - 1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        currTask.markAsDone();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return currTask;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    //delete task in list of given position"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public Task deleteTask(int num) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        Task currTask \u003d tasks.get(num - 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        tasks.remove(num - 1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return currTask;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public ArrayList\u003cTask\u003e searchTasks(String command) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        ArrayList\u003cTask\u003e results \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            if (task.getDescription().contains(command)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                results.add(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            } // else ignore"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return results;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 46
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * subclass of task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * handles todo task"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public Todo (String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String getType() { return \"T\"; }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return \"[T]\"  + super.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 18
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * deals with interactions with user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public static String liner \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    //greet user"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        String greeting \u003d \"     Hello! I\u0027m Duke\\n     What can I do for you?\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        System.out.println(liner + \"\\n\" + greeting + \"\\n\" + liner);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    //say goodbye"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void showBye() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        System.out.println(liner);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        System.out.println(liner);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    //show divider line"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        System.out.println(liner);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    //show error message"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        System.out.println(\"New task list generated: no existing file found!\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    // print add task message"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void printAddTask(Task newTask, int totalTasks) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        System.out.println(liner);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        System.out.println(\"       \" + newTask.toString());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        System.out.println(\"     Now you have \" + totalTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        System.out.println(liner);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    // print done task message"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void printDoneTask(Task currTask) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        System.out.println(liner);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        System.out.println(\"     Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        System.out.println(\"       \"  + currTask.toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        System.out.println(liner);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    // print deleted task message"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void printDeletedTask(Task currTask, int totalTasks) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        System.out.println(liner);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        System.out.println(\"     Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        System.out.println(\"       \"  + currTask.toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        System.out.println(\"     Now you have \" + totalTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        System.out.println(liner);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    // print all contents of task list"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void showList(TaskList tasks) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d tasks.getList();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            int num \u003d i + 1;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            Task currTask \u003d list.get(i);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            System.out.println(\"     \" + num + \". \" + currTask.toString());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    // print matching tasks from search result"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void printMatches(ArrayList\u003cTask\u003e results) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        System.out.println(\"     Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        for (int i \u003d 0; i \u003c results.size(); i++) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            int num \u003d i + 1;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            Task currTask \u003d results.get(i);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            System.out.println(\"     \" + num + \". \" + currTask.toString());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    // get user input"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 91
    }
  },
  {
    "path": "src/main/java/UpdateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * subclass of command"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * operation to update tasks: done commands"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class UpdateCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected int pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public UpdateCommand(String command) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            if (parser.validNumber(command, tasks.getList().size())) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                pos \u003d Integer.parseInt(command);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                Task currTask \u003d tasks.updateTask(pos);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                storage.updateTasks(currTask, \"done\", pos - 1);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                ui.printDoneTask(currTask);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 31
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void testTodo() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        Task todo \u003d new Todo(\"hello\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        String expected \u003d \"[T][ ] hello\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        assertEquals(expected, todo.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void testEvent() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        Task event \u003d new Event(\"return book\", \"2/12/2019 1800\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        String expected \u003d \"[E][ ] return book (at: 2/12/2019 1800)\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        assertEquals(expected, event.toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void testDeadline() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        Task deadline \u003d new Deadline(\"return book\", \"2/12/2019 1800\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        String expected \u003d \"[D][ ] return book (by: 2/12/2019 1800)\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        assertEquals(expected, deadline.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 26
    }
  }
]
