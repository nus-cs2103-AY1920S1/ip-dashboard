[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jascxx"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jascxx"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jascxx"
        },
        "content": "sourceSets {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    main {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        java {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            srcDir \u0027src\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    test {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        java {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            srcDir \u0027test\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jascxx"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jascxx"
        },
        "content": "run {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jascxx"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jascxx"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jascxx"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jascxx"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jascxx"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jascxx"
        },
        "content": "test {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jascxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jascxx": 39,
      "-": 14
    }
  },
  {
    "path": "checkstyle.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jascxx"
        },
        "content": "./gradlew checkstyleMain checkstyleTest"
      }
    ],
    "authorContributionMap": {
      "jascxx": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jascxx"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jascxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jascxx"
        },
        "content": " * Main class of Duke application."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jascxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    Duke(String filePath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        parser \u003d new Parser(sc, storage);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * Runs the app. Method keeps running as long as parser does not return an exit response."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    void run() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        ui.greeting();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        int response;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            String command \u003d sc.next();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            ui.printBreakLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            response \u003d parser.process(command);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            if (response \u003d\u003d -1) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jascxx"
        },
        "content": "                ui.goodbye();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            ui.printBreakLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        } while (response !\u003d -1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        new Duke(\"./duke_data.txt\").run();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jascxx": 39,
      "-": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jascxx"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import seedu.duke.exceptions.ArgumentNotNumberException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import seedu.duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import seedu.duke.exceptions.EmptyDeadlineArgException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import seedu.duke.exceptions.EmptyDeadlineDescException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import seedu.duke.exceptions.EmptyEventArgException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import seedu.duke.exceptions.EmptyEventDescException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import seedu.duke.exceptions.EmptyTodoDescException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import seedu.duke.exceptions.TaskNotSpecifiedException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import seedu.duke.exceptions.UnknownCommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import seedu.duke.exceptions.TaskDoesNotExistException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import seedu.duke.task.Deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import seedu.duke.task.Todo;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jascxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jascxx"
        },
        "content": " * Parses string commands and execute them."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jascxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jascxx"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private static final String BYE_COMMAND \u003d \"bye\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private static final String LIST_COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private static final String DONE_COMMAND \u003d \"done\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private static final String TODO_COMMAND \u003d \"todo\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private static final String DEADLINE_COMMAND \u003d \"deadline\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private static final String EVENT_COMMAND \u003d \"event\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private static final String DELETE_COMMAND \u003d \"delete\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private static final String FIND_COMMAND \u003d \"find\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private static final String INDENT \u003d \"     \";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    Parser(Scanner sc, Storage storage) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        this.sc \u003d sc;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        taskList \u003d new TaskList(storage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        taskList.addAll(storage.load());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * Processes the command and execute it."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * @param command The command."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * @return -1 if command is an exit command, 0 otherwise."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    int process(String command) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        if (command.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            case TODO_COMMAND:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jascxx"
        },
        "content": "                addTodo(sc.nextLine());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jascxx"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            case DEADLINE_COMMAND:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jascxx"
        },
        "content": "                addDeadline(sc.nextLine());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jascxx"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            case EVENT_COMMAND:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jascxx"
        },
        "content": "                addEvent(sc.nextLine());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jascxx"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            case BYE_COMMAND:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jascxx"
        },
        "content": "                return -1;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            case LIST_COMMAND:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jascxx"
        },
        "content": "                list();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jascxx"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            case DONE_COMMAND:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jascxx"
        },
        "content": "                done(sc.nextLine().trim());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jascxx"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            case DELETE_COMMAND:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jascxx"
        },
        "content": "                delete(sc.nextLine().trim());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jascxx"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            case FIND_COMMAND:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jascxx"
        },
        "content": "                find(sc.nextLine().trim());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jascxx"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jascxx"
        },
        "content": "                throw new UnknownCommandException();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            print(e.toString());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        return 0;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * Finds and lists the tasks containing \u003ccode\u003ekeyword\u003c/code\u003e."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * @param keyword The keyword to find."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private void find(String keyword) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        List\u003cTask\u003e list \u003d taskList"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jascxx"
        },
        "content": "                .stream()"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jascxx"
        },
        "content": "                .filter(x -\u003e x.getDescription().contains(keyword))"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jascxx"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        print(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); ++i) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            print((i + 1) + \". \" + list.get(i));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * @param s The index of the task to be marked as done, represented as a String"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * @throws DukeException If \u003ccode\u003es\u003c/code\u003e cannot be parsed to an Integer, or if the integer as an index is not"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     *         within the \u003ccode\u003eTaskList\u003c/code\u003e bound."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private void done(String s) throws DukeException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            if (s.isEmpty()) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jascxx"
        },
        "content": "                throw new TaskNotSpecifiedException();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            int i \u003d Integer.parseInt(s);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            taskList.notifyChange();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            print(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            print(\"  \" + task.toString());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            throw new ArgumentNotNumberException();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            throw new TaskDoesNotExistException();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * Deletes a task."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * @param s The index of the task to be deleted, represented as a String."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * @throws DukeException If \u003ccode\u003es\u003c/code\u003e cannot be parsed to an Integer, or if the integer as an index is not"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     *         within the \u003ccode\u003eTaskList\u003c/code\u003e bound."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private void delete(String s) throws DukeException {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            if (s.isEmpty()) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jascxx"
        },
        "content": "                throw new TaskNotSpecifiedException();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            int i \u003d Integer.parseInt(s);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            taskList.remove(i);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            print(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            print(\"  \" + task.toString());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            printListSize();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            throw new ArgumentNotNumberException();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            throw new TaskDoesNotExistException();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * Lists all the tasks."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private void list() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        print(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d taskList.size(); ++i) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            print(i + \". \" + taskList.get(i));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * Adds a Todo to the list of tasks."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * @param desc The description of the todo"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * @throws DukeException If \u003ccode\u003edesc\u003c/code\u003e is empty."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private void addTodo(String desc) throws DukeException {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        if (desc.isEmpty()) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            throw new EmptyTodoDescException();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        Task task \u003d new Todo(desc);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        printAdded(task);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * Adds a Deadline to the list of tasks."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * @param desc The description of the Deadline"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * @throws DukeException If \u003ccode\u003edesc\u003c/code\u003e is empty, or does not contain the second argument separated by"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     *         the regex \"/by\""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private void addDeadline(String desc) throws DukeException {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            if (desc.isEmpty()) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jascxx"
        },
        "content": "                throw new EmptyDeadlineDescException();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            String[] strs \u003d desc.split(Deadline.REGEX);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            Task task \u003d new Deadline(strs[0], strs[1]);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            printAdded(task);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            throw new EmptyDeadlineArgException();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * Adds an Event to the list of tasks."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * @param desc The description of the Deadline"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * @throws DukeException If \u003ccode\u003edesc\u003c/code\u003e is empty, or does not contain the second argument separated by"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     *         the regex \"/at\""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private void addEvent(String desc) throws DukeException {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            if (desc.isEmpty()) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jascxx"
        },
        "content": "                throw new EmptyEventDescException();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            String[] strs \u003d desc.split(Event.REGEX);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            Task task \u003d new Event(strs[0], strs[1]);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            printAdded(task);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            throw new EmptyEventArgException();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private void printAdded(Task task) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        print(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        print(\"  \" + task);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        printListSize();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private void print(String s) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        System.out.println(INDENT + s);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private void printListSize() {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        print(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "jascxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jascxx": 231
    }
  },
  {
    "path": "src/main/java/seedu/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jascxx"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import seedu.duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jascxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jascxx"
        },
        "content": " * Handles storage related functions, e.g. loads data from disk and saves data to disk."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jascxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jascxx"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    Storage(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * Loads the data in the file path and returns the corresponding list of tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * @return The list of tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public List\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            String data \u003d Files.readString(Path.of(filePath));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            Scanner sc \u003d new Scanner(data);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jascxx"
        },
        "content": "                list.add(Task.parse(sc.nextLine()));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            // no such file"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            System.out.println(e.toString());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * Saves the list to the current directory."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * @param list The list to be saved."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public void save(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            sb.append(task.getStringRepresentation());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            sb.append(\"\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        String text \u003d sb.toString();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        BufferedWriter output \u003d null;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jascxx"
        },
        "content": "                boolean created \u003d file.createNewFile();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            output \u003d new BufferedWriter(new FileWriter(file));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            output.write(text);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            output.flush();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jascxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jascxx": 71
    }
  },
  {
    "path": "src/main/java/seedu/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jascxx"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jascxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jascxx"
        },
        "content": " * Represents a list of tasks. Every time the data is changed, the new data will be saved."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jascxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jascxx"
        },
        "content": "public class TaskList extends ArrayList\u003cTask\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public TaskList(Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public boolean add(Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        boolean added \u003d super.add(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        storage.save(this);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        return added;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public Task remove(int index) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        Task removed \u003d super.remove(index - 1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        storage.save(this);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        return removed;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        return super.get(index - 1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * Notifies the change of the tasks such that the tasks can be saved."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public void notifyChange() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        storage.save(this);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jascxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jascxx": 42
    }
  },
  {
    "path": "src/main/java/seedu/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jascxx"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jascxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jascxx"
        },
        "content": " * The UI class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jascxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jascxx"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public static final String logo \u003d \"     ____        _        \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            + \"    |  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            + \"    | | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            + \"    | |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            + \"    |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private static String BREAKLINE \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private static String GREETING \u003d \"     Hello! I\u0027m Duke\\n\" + \"     What can I do for you?\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private static String GOODBYE \u003d \"     Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * Prints a greeting to System.out"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public void greeting() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        printBreakLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        System.out.println(GREETING);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        printBreakLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * Prints a goodbye to System.out"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public void goodbye() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        System.out.println(GOODBYE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * Prints a line break to System.out"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public void printBreakLine() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        System.out.println(BREAKLINE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * Prints a new line to System.out"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public void printLine() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jascxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jascxx": 48
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/ArgumentNotNumberException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jascxx"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jascxx"
        },
        "content": "public class ArgumentNotNumberException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public ArgumentNotNumberException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        super(\" OOPS!!! Argument must be a number.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jascxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jascxx": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/DateParseException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jascxx"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jascxx"
        },
        "content": "public class DateParseException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public DateParseException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        super(\" OOPS!!! Date is in the wrong format\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jascxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jascxx": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jascxx"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jascxx"
        },
        "content": "public abstract class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private String desc;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    DukeException(String desc) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        return desc;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jascxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jascxx": 14
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/EmptyDeadlineArgException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jascxx"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jascxx"
        },
        "content": "public class EmptyDeadlineArgException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public EmptyDeadlineArgException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        super(\" OOPS!!! The time of an deadline cannot be empty, e.g. deadline do homework /by August 9\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jascxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jascxx": 9
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/EmptyDeadlineDescException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jascxx"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jascxx"
        },
        "content": "public class EmptyDeadlineDescException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public EmptyDeadlineDescException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        super(\" OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jascxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jascxx": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/EmptyEventArgException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jascxx"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jascxx"
        },
        "content": "public class EmptyEventArgException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public EmptyEventArgException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        super(\" OOPS!!! The time of an event cannot be empty, e.g. event play tennis /at Monday\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jascxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jascxx": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/EmptyEventDescException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jascxx"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jascxx"
        },
        "content": "public class EmptyEventDescException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public EmptyEventDescException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        super(\" OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jascxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jascxx": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/EmptyTodoDescException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jascxx"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jascxx"
        },
        "content": "public class EmptyTodoDescException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public EmptyTodoDescException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        super(\" OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jascxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jascxx": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/TaskDoesNotExistException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jascxx"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jascxx"
        },
        "content": "public class TaskDoesNotExistException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public TaskDoesNotExistException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        super(\" OOPS!!! Task does not exist.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jascxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jascxx": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/TaskNotSpecifiedException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jascxx"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jascxx"
        },
        "content": "public class TaskNotSpecifiedException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public TaskNotSpecifiedException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        super(\" OOPS!!! Which task have you done?\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jascxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jascxx": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jascxx"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jascxx"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public UnknownCommandException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        super(\" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jascxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jascxx": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jascxx"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import seedu.duke.exceptions.DateParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jascxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jascxx"
        },
        "content": " * Represents a task with a deadline."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jascxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jascxx"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public static final String REGEX \u003d \"/by\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public static final String INITIAL \u003d \"D\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private Date by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * @param desc The description of the deadline."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * @param by The date of the deadline as a string."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * @throws DateParseException If \u003ccode\u003eby\u003c/code\u003e cannot be parsed to a Date."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public Deadline(String desc, String by) throws DateParseException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        super(desc.trim());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            this.by \u003d INPUT_DATE_FORMAT.parse(by);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            throw new DateParseException();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    String getInitial() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        return INITIAL;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    Date getDate() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    String getDatePrefix() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        return \"by: \";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jascxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jascxx": 46
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jascxx"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import seedu.duke.exceptions.DateParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jascxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jascxx"
        },
        "content": " * Represents an event task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jascxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jascxx"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public static final String REGEX \u003d \"/at\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public static final String INITIAL \u003d \"E\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private Date at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * @param desc The description of the event."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * @param at The date of the event as a string."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * @throws DateParseException If \u003ccode\u003eat\u003c/code\u003e cannot be parsed to a Date."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public Event(String desc, String at) throws DateParseException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        super(desc.trim());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            this.at \u003d INPUT_DATE_FORMAT.parse(at);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            throw new DateParseException();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    String getInitial() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        return INITIAL;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    Date getDate() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    String getDatePrefix() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        return \"at: \";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jascxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jascxx": 46
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jascxx"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import seedu.duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jascxx"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jascxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jascxx"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jascxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jascxx"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private static final String DELIMITER \u003d \" ` \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public static final SimpleDateFormat INPUT_DATE_FORMAT \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public static final SimpleDateFormat OUTPUT_DATE_FORMAT \u003d new SimpleDateFormat(\"dd MMMM yyyy hh:mma\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * Parses and returns the object representation of \u003ccode\u003estr\u003c/code\u003e."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * @param str The string to be parsed."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * @return The corresponding task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * @throws DukeException If the initial does not match any Task\u0027s subclasses\u0027 initials."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public static Task parse(String str) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        String[] data \u003d str.split(DELIMITER);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        String type \u003d data[0];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        boolean isDone \u003d Integer.parseInt(data[1]) \u003d\u003d 1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        String desc \u003d data[2];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        case Todo.INITIAL:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            task \u003d new Todo(desc);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        case Deadline.INITIAL:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            task \u003d new Deadline(desc, data[3]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        case Event.INITIAL:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            task \u003d new Event(desc, data[3]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            throw new IllegalArgumentException(\"Initial does not match any known initials\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * Returns a unique initial of the subtype of Task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * @return The initial."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    abstract String getInitial();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * Returns a date associated to the task."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * @return The associated date if applicable, null otherwise."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    Date getDate() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * Returns the prefix that describes the date, e.g. \"by: \", \"at: \"."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * @return The prefix if applicable, null otherwise"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    String getDatePrefix() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * @return The description."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * Returns the status icon that describes \u003ccode\u003eisDone\u003c/code\u003e."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * @return The status icon."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * Marks this task as done."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * Returns the string representation of this task to be saved to the disk."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     * @return The string representation."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jascxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public String getStringRepresentation() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        sb.append(getInitial());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        sb.append(DELIMITER);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        sb.append(isDone ? 1 : 0);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        sb.append(DELIMITER);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        sb.append(description);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        if (getDate() !\u003d null) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            sb.append(DELIMITER);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jascxx"
        },
        "content": "            sb.append(INPUT_DATE_FORMAT.format(getDate()));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        return \"[\" + getInitial() + \"]\" + \"[\" + getStatusIcon() + \"] \" + description + \" \""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jascxx"
        },
        "content": "                + (getDate() \u003d\u003d null ? \"\" : \"(\" + getDatePrefix() + OUTPUT_DATE_FORMAT.format(getDate()) + \")\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jascxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jascxx": 125
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jascxx"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jascxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jascxx"
        },
        "content": " * Represents a todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jascxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jascxx"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public static final String INITIAL \u003d \"T\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    public Todo(String desc) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        super(desc.trim());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    String getInitial() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jascxx"
        },
        "content": "        return INITIAL;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jascxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jascxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jascxx": 17
    }
  },
  {
    "path": "src/test/java/seedu/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jascxx"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jascxx"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jascxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jascxx": 5
    }
  },
  {
    "path": "src/test/java/seedu/duke/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jascxx"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jascxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jascxx"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jascxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jascxx": 4
    }
  }
]
