[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joannasara"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    protected String  by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public Deadline(String description, String info) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        super(Type.DEADLINE, description, info);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        String[] infos \u003d info.split(\" \", 2);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        by \u003d  infos[1];"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        return \"[D][\" + getStatusIcon() + \"] \" + description + \" (by: \" +  by + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joannasara"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joannasara": 15
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joannasara"
        },
        "content": "//        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        ArrayList\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        String word \u003d sc.nextLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        while (!word.equals(\"bye\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                if (word.equals(\"list\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    int counter \u003d 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    for (Task task : lst) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                        System.out.println(counter + \". \" + task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                        counter++;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                } else if (word.startsWith(\"delete \")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    String[] arr \u003d word.split(\" \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    int i \u003d Integer.parseInt(arr[1]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    if (i \u003e lst.size()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                        throw new DukeException(\"Number can\u0027t be bigger than list size.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    } else if (i \u003c 1) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                        throw new DukeException(\"Number must be greater than 0\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    Task task \u003d lst.remove(i - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    System.out.println(\"Noted. I\u0027ve removed this task: : \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    System.out.println(\"\\t\" + task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    System.out.println(\"Now you have \" +  lst.size()  +  \" tasks in the list.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                } else if (word.startsWith(\"done \")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    String[] arr \u003d word.split(\" \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    int i \u003d Integer.parseInt(arr[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    if (i \u003e lst.size()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                        throw new DukeException(\"Number can\u0027t be bigger than list size.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    } else if (i \u003c 1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                        throw new DukeException(\"Number must be greater than 0\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    Task task \u003d lst.get(i - 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    lst.get(i - 1).markAsDone();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    System.out.println(\"\\t\" + task);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    String[] arr \u003d word.split(\"/\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    String[] arr2 \u003d arr[0].split(\" \", 2);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    Task task;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    if (arr2[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                        if (arr2.length \u003c 2  || arr2[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                        task \u003d new Todo(arr2[1], \"\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                        lst.add(task);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    } else  if (arr2[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                        if (arr2.length \u003c 2 || arr2[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                        if (arr.length \u003c 2 || arr[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The time of a deadline cannot be empty, add a /by description!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                        if (!arr[1].startsWith(\"by \")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                            throw new DukeException(\"Use /by  \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                        task \u003d new Deadline(arr2[1], arr[1]);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                        lst.add(task);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    } else if (arr2[0].equals(\"event\")){"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                        if (arr2.length \u003c 2 || arr2[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                        if (arr.length \u003c 2 || arr[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The time of a deadline cannot be empty, add a /at description!\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                        if (!arr[1].startsWith(\"at \")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                            throw new DukeException(\"Use /at  \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                        task \u003d new Event(arr2[1], arr[1]);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                        lst.add(task);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    System.out.println(\"\\t\" + task.toString());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    System.out.println(\"Now you have \" +  lst.size()  +  \" tasks in the list.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                System.out.println(\"Done must be followed by an integer\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                word \u003d sc.nextLine();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joannasara": 99,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joannasara"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public DukeException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public DukeException(Throwable cause) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        super(cause);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public DukeException(String message, Throwable cause, boolean enableSuppression, boolean writableStackTrace) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        super(message, cause, enableSuppression, writableStackTrace);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joannasara"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joannasara": 20
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joannasara"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public Event(String description, String info) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        super(Type.EVENT, description, info);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        String[] infos \u003d info.split(\" \", 2);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        this.at \u003d infos[1] ;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        return \"[E][\" + getStatusIcon() + \"] \" + description + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joannasara"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joannasara": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joannasara"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    protected Type type;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    protected String info;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public Task(Type type, String description, String info) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        this.info \u003d info;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public String getSymbol() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        switch (type){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                return \"T\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                return \"D\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                return \"E\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                return \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public Type getType() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public String getInfo() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        return info;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        return  description;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        if (info.equals(\"\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            return \"[\" + getSymbol() + \"][\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            String[] infos \u003d info.split(\" \", 2);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            return \"[\" + getSymbol() + \"][\" + getStatusIcon() + \"] \" + description + \" (\" + infos[0] +\":  \" +  infos[1] + \")\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joannasara"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joannasara": 60
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joannasara"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public Todo(String description, String info) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        super(Type.TODO, description, info);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        return \"[T][\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joannasara"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joannasara": 10
    }
  },
  {
    "path": "src/main/java/Type.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joannasara"
        },
        "content": "public enum Type {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    TODO, DEADLINE, EVENT"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joannasara"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joannasara": 3
    }
  }
]
