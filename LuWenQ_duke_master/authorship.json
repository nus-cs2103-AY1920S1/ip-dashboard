[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LuWenQ": 23,
      "-": 15
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "null|0|terminal1234"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "null|0|terminal"
      }
    ],
    "authorContributionMap": {
      "LuWenQ": 2
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "rootProject.name \u003d \u0027Duke\u0027"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "include \u0027src\u0027"
      }
    ],
    "authorContributionMap": {
      "LuWenQ": 2
    }
  },
  {
    "path": "src/main/java/duke/AddList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 3,
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 6,
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "content": ""
      },
      {
        "lineNumber": 9,
        "content": "public class AddList {"
      },
      {
        "lineNumber": 10,
        "content": "\tList\u003cMission\u003e ls;"
      },
      {
        "lineNumber": 11,
        "content": "\tint counter \u003d 0;"
      },
      {
        "lineNumber": 12,
        "content": "\tpublic AddList() {"
      },
      {
        "lineNumber": 13,
        "content": "\t\tls \u003d new ArrayList\u003cMission\u003e();"
      },
      {
        "lineNumber": 14,
        "content": "\t}"
      },
      {
        "lineNumber": 15,
        "content": "\tpublic String printAllEvent() {"
      },
      {
        "lineNumber": 16,
        "content": "\t\tint counter \u003d 1;"
      },
      {
        "lineNumber": 17,
        "content": "\t\tString ans \u003d \"\";"
      },
      {
        "lineNumber": 18,
        "content": "\t\tfor(Mission a : ls) {"
      },
      {
        "lineNumber": 19,
        "content": "\t\t\tans +\u003d counter + \". \\n\";"
      },
      {
        "lineNumber": 20,
        "content": "\t\t\tls.get(counter - 1).printMission();"
      },
      {
        "lineNumber": 21,
        "content": "\t\t\tcounter +\u003d 1;"
      },
      {
        "lineNumber": 22,
        "content": "\t\t}"
      },
      {
        "lineNumber": 23,
        "content": "\t\treturn ans;"
      },
      {
        "lineNumber": 24,
        "content": "\t}"
      },
      {
        "lineNumber": 25,
        "content": ""
      },
      {
        "lineNumber": 26,
        "content": "\tpublic String printEvent(int index) {"
      },
      {
        "lineNumber": 27,
        "content": "\t\treturn ls.get(index).printMission();"
      },
      {
        "lineNumber": 28,
        "content": "\t}"
      },
      {
        "lineNumber": 29,
        "content": ""
      },
      {
        "lineNumber": 30,
        "content": "\tpublic void addEventWithTime(String str, String type, String time, String atby) {"
      },
      {
        "lineNumber": 31,
        "content": "\t\tls.add(new Mission(str, type, time, atby));"
      },
      {
        "lineNumber": 32,
        "content": "\t\tcounter +\u003d 1;"
      },
      {
        "lineNumber": 33,
        "content": "\t}"
      },
      {
        "lineNumber": 34,
        "content": ""
      },
      {
        "lineNumber": 35,
        "content": "\tpublic void addEventWithoutTime(String str, String type) {"
      },
      {
        "lineNumber": 36,
        "content": "\t\tls.add(new Mission(str, type));"
      },
      {
        "lineNumber": 37,
        "content": "\t\tcounter +\u003d 1;"
      },
      {
        "lineNumber": 38,
        "content": "\t}"
      },
      {
        "lineNumber": 39,
        "content": ""
      },
      {
        "lineNumber": 40,
        "content": "\tpublic void changeEvent(int index) {"
      },
      {
        "lineNumber": 41,
        "content": "\t\tls.get(index).changeState();"
      },
      {
        "lineNumber": 42,
        "content": "\t}"
      },
      {
        "lineNumber": 43,
        "content": ""
      },
      {
        "lineNumber": 44,
        "content": "\tpublic void deleteMission(int index) {"
      },
      {
        "lineNumber": 45,
        "content": "\t\tls.remove(index);"
      },
      {
        "lineNumber": 46,
        "content": "\t}"
      },
      {
        "lineNumber": 47,
        "content": ""
      },
      {
        "lineNumber": 48,
        "content": "\tpublic void saveToFile() {"
      },
      {
        "lineNumber": 49,
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 50,
        "content": "\t\t\tFileWriter fw \u003d new FileWriter(\"duke.txt\");"
      },
      {
        "lineNumber": 51,
        "content": "\t\t\tint counter \u003d 1;"
      },
      {
        "lineNumber": 52,
        "content": "\t\t\tfor (Mission a : ls) {"
      },
      {
        "lineNumber": 53,
        "content": "\t\t\t\tint x \u003d a.state.contentEquals(\"✗\") ? 0 : 1;"
      },
      {
        "lineNumber": 54,
        "content": "\t\t\t\tString str \u003d a.type + \"|\" + x + \"|\" + a.content + (a.time\u003d\u003dnull ? \"\" : (\"|\" + a.time)) + \"\\n\";"
      },
      {
        "lineNumber": 55,
        "content": "\t\t\t\tfw.write(str);"
      },
      {
        "lineNumber": 56,
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 57,
        "content": "\t\t\tfw.close();"
      },
      {
        "lineNumber": 58,
        "content": "\t\t} catch (Exception e) {"
      },
      {
        "lineNumber": 59,
        "content": "\t\t\tSystem.out.println(e);"
      },
      {
        "lineNumber": 60,
        "content": "\t\t}"
      },
      {
        "lineNumber": 61,
        "content": "\t}"
      },
      {
        "lineNumber": 62,
        "content": ""
      },
      {
        "lineNumber": 63,
        "content": "\tpublic void readFromFile() {"
      },
      {
        "lineNumber": 64,
        "content": "\t\tString path \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 65,
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 66,
        "content": "\t\t\tList\u003cString\u003e contents \u003d Files.readAllLines(Paths.get(path), StandardCharsets.US_ASCII);"
      },
      {
        "lineNumber": 67,
        "content": "\t\t\tfor(String s : contents) {"
      },
      {
        "lineNumber": 68,
        "content": "\t\t\t\t// System.out.println(\"\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\" + s);"
      },
      {
        "lineNumber": 69,
        "content": "\t\t\t\tls.add(Mission.newMission(s));"
      },
      {
        "lineNumber": 70,
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 71,
        "content": "\t\t} catch (Exception e) {"
      },
      {
        "lineNumber": 72,
        "content": "\t\t\tSystem.out.println(e);"
      },
      {
        "lineNumber": 73,
        "content": "\t\t}"
      },
      {
        "lineNumber": 74,
        "content": "\t}"
      },
      {
        "lineNumber": 75,
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "null": 74,
      "LuWenQ": 1
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LuWenQ": 61
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        return \"Duke: \" + run(input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public String run(String input) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        int book \u003d 1;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        //Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        AddList adl \u003d new AddList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        adl.readFromFile();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "/*"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "*/"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        String ans \u003d \"\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        String in \u003d input;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        String subin1 \u003d in.split(\" \")[0];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        ans +\u003d \"_____________________________________________________\\n\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        System.out.print(\"\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        if (in.contentEquals(\"bye\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            ans +\u003d \"Bye. \\n\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            ans +\u003d \"Hope to see you again soon!\\n\\n\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            book \u003d 0;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            adl.saveToFile();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        } else if (in.contentEquals(\"list\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            ans +\u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            ans +\u003d adl.printAllEvent();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            adl.saveToFile();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        } else if (subin1.contentEquals(\"done\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            if (in.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                ans +\u003d \"☹ OOPS!!! The description of a todo cannot be empty.\\n\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                String subin2 \u003d in.split(\" \")[1];"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                ans +\u003d \"Nice! I have marked this task as done:\\n\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                int index \u003d Integer.parseInt(subin2);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                adl.changeEvent(index - 1);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                ans +\u003d adl.printEvent(index - 1);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                adl.saveToFile();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        } else if (subin1.contentEquals(\"delete\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            if (in.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                ans +\u003d \"☹ OOPS!!! The description of a todo cannot be empty.\\n\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                String subin2 \u003d in.split(\" \")[1];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                int index \u003d Integer.parseInt(subin2);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                ans +\u003d \"Noted. I\u0027ve removed this task: \\n\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                ans +\u003d adl.printEvent(index - 1);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                adl.deleteMission(index - 1);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                counter -\u003d 1;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                ans +\u003d \"Now you have \" + counter + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                adl.saveToFile();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        } else if (subin1.contentEquals(\"event\") || subin1.contentEquals(\"deadline\") || subin1.contentEquals(\"todo\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            if (in.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                ans +\u003d \"☹ OOPS!!! The description of a todo cannot be empty.\\n\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                counter +\u003d 1;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                ans +\u003d subin1 + \"\\n\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                if (in.split(\"/\").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                    adl.addEventWithoutTime(in.split(\" \")[1], subin1);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                    adl.addEventWithTime(in.split(\" \")[1].split(\"/\")[0], subin1, in.split(\"/\")[1].split(\" \")[1], in.split(\"/\")[1].split(\" \")[0]);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                ans +\u003d \"Got it. I have added this task:\\n\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                ans +\u003d adl.printEvent(counter - 1);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                ans +\u003d \"Now you have \" + counter + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                adl.saveToFile();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            ans +\u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        ans +\u003d \"_____________________________________________________\\n\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        return ans;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LuWenQ": 120
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        //Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LuWenQ": 13
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LuWenQ": 33
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LuWenQ": 51
    }
  },
  {
    "path": "src/main/java/duke/Mission.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "public class Mission {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    enum MissionType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        T, D, E;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    String content;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    String state;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    String time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    String atby;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    MissionType type;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    Time realtime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public Mission(String content, String type) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.time \u003d null;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.state \u003d \"✗\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        if(type.contentEquals(\"todo\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            this.type \u003d MissionType.T;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        } else if(type.contentEquals(\"deadline\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            this.type \u003d MissionType.D;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        } else if(type.contentEquals(\"event\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            this.type \u003d MissionType.E;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public Mission(String content, String type, String state) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.time \u003d null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.state \u003d state;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        if(type.contentEquals(\"todo\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            this.type \u003d MissionType.T;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        } else if(type.contentEquals(\"deadline\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            this.type \u003d MissionType.D;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        } else if(type.contentEquals(\"event\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            this.type \u003d MissionType.E;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public Mission(String content, String type, String state, String time, String atby) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.time \u003d null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.state \u003d state;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.atby \u003d atby;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        if(type.contentEquals(\"todo\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            this.type \u003d MissionType.T;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        } else if(type.contentEquals(\"deadline\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            this.type \u003d MissionType.D;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        } else if(type.contentEquals(\"event\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            this.type \u003d MissionType.E;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public Mission(String content, String type, String time, String atby) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        realtime \u003d new Time(time);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.state \u003d \"✗\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.atby \u003d atby;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        if(type.contentEquals(\"todo\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            this.type \u003d MissionType.T;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        } else if(type.contentEquals(\"deadline\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            this.type \u003d MissionType.D;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        } else if(type.contentEquals(\"event\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            this.type \u003d MissionType.E;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public void changeState() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        if(this.state.contentEquals(\"✗\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            this.state \u003d \"✓\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public String printMission() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        if(time !\u003d null) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            return \"[\" + type + \"][\" + state + \"] \" + content + \" (\" + atby + \":\" + time + \")\\n\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            return \"[\" + type + \"][\" + state + \"] \" + content + \"\\n\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public String getState() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        return state;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public static Mission newMission(String str) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        System.out.println(\"*******\" + str);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        String[] s \u003d str.split(\"\\\\|\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        String MissionType \u003d s[0];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        String state \u003d (s[1].contentEquals(\"0\")) ? \"✗\" : \"✓\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        String content \u003d s[2];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        Mission m;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        if(s.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            String time \u003d s[3];"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            m \u003d new Mission(content, MissionType, state, time, \"by\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            m \u003d new Mission(content, MissionType, state);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        return m;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LuWenQ": 100
    }
  },
  {
    "path": "src/main/java/duke/Time.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "public class Time {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    int date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    int month;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    int year;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    int time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public Time(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        String[] sa \u003d s.split(\"/\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.date \u003d Integer.parseInt(sa[0]);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.month \u003d Integer.parseInt(sa[1]);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.year \u003d Integer.parseInt(sa[2]);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.time \u003d Integer.parseInt(sa[3]);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LuWenQ": 14
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "LuWenQ": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "LuWenQ": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        public static void main(String[] args) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            System.out.println(\"nothing to put\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LuWenQ": 6
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "--------------------------------------"
      }
    ],
    "authorContributionMap": {
      "LuWenQ": 9
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "LuWenQ": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "LuWenQ": 34
    }
  }
]
