[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "version \u00270.2.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    archiveVersion \u003d \"0.2.0\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "C-likethis123": 45,
      "-": 11
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "[T]|1|read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "[D]|0|return book|6/6/2019 1700"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "[E]|0|project meeting|6/8/2019 1400"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "[T]|1|join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "[T]|0|borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "[D]|0|return book|25/8/2019 1200"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "[E]|0|project meeting|26/08/2019 1130"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "[T]|0|read book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "[D]|0|return book|6/6/2019 1700"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "[E]|0|project meeting|6/8/2019 1400"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "[T]|0|join sports club"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "[T]|0|borrow book"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "[D]|0|return book|25/8/2019 1200"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "[E]|0|project meeting|26/08/2019 1130"
      }
    ],
    "authorContributionMap": {
      "C-likethis123": 14
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "1. [Introduction](#introduction)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "2. [Quick Start](#quick-start)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "3. [Features](#features)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    3.1 [Adding a task](#adding-a-task)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    3.2 [Deleting a task](#deleting-a-task)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    3.3 [Listing all tasks](#listing-all-tasks)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    3.4 [Finding tasks by name](#finding-tasks-by-name)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    3.5 [Updating a task](#updating-a-task)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    3.6 [Checking off tasks](#checking-off-tasks)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    3.7 [Exiting the application](#exiting-the-application)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "Duke is a desktop personal assistant application. It is **optimised for users who prefer to work"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "with a Command Line Interface (CLI)**."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "## Quick start"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "1. Ensure you have `Java 11` or above installed on your computer."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "2. Download the latest jar file [here](https://github.com/C-likethis123/duke/releases/tag/A-Release)."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "3. Copy the jar file to a desired folder. In the folder, create a folder `/data`. In `/data`, add a file called `duke.txt`."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "3. Start a terminal from the folder where the jar file is. Type `java -jar duke-0.1.3.jar`. The GUI should appear in a few seconds."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "4. After starting up, Duke greets its users upon starting up."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "![alt text](https://github.com/C-likethis123/duke/blob/master/docs/Initialisation.png?raw\u003dtrue \"Duke greeting users\")"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "5. Type commands in the text box and press `Enter` to execute it."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "6. Some example commands to try:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    1. `list`: lists all tasks in the task list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    2. `todo some task`: adds a `ToDo` with a task description `some task` to the task list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    3. `bye`: exits the application"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "7. Refer to Features for details on each command.    "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "### Adding a task "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "There are three types of tasks:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "* Todos: Tasks that only has a task description."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "* Deadlines: Tasks with a task description and a deadline."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "* Events: Tasks that represents events. It has a task description and an event date."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "To add a ToDo, type `todo DESCRIPTION`. "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "`DESCRIPTION` refers to the task description. "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "For example:   `todo read book` creates a ToDo with description \u0027read book\u0027."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "To add a Deadline, type `deadline DESCRIPTION /by DATE`."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "`DESCRIPTION` refers to the task description. "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "`DATE` refers to the deadline of the date, which has a format DD/MM/YYYY HHMM."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "For example, `deadline do CS2100 tutorial /by 19/09/2019 1400`."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "To add an Event, type `event DESCRIPTION /at DATE`."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "`DESCRIPTION` refers to the task description. "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "`DATE` refers to the deadline of the date, which has a format DD/MM/YYYY HHMM."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "For example, `event Connect with Facebook Engineers /at 20/09/2019 1700`."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "### Deleting a task"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "To delete a task, the format: `delete INDEX`."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "This deletes a task at a specified index. "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "`INDEX` refers to the index number shown in the displayed task list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "### Listing all tasks"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "To see all the tasks, type `list`. "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "It returns a list of all the tasks in the task list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "### Finding tasks by name"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "To find a task by name, type `find KEYWORD`."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "It returns a list of tasks with descriptions that contain the keywords."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "`find read`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "Note: "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "* The search is case-sensitive."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "* Only the task description is searched."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "### Updating a task"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "To update a task, type `update INDEX DESCRIPTION DATE`."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "`INDEX` refers to the index number shown in the displayed task list."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "`DESCRIPTION` refers to the updated task description to update "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "a task with. "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "`DATE` refers to the date of the task."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "![alt text](https://github.com/C-likethis123/duke/blob/master/docs/TaskList.png?raw\u003dtrue \"Task List\")"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "**Referring to the above screenshot:**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "1. To update task 8, a ToDo task, type `update 8 read 2103T example user guide`."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "The task description will be updated to `read 2103T example user guide`."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "2. To update task 1, a Deadline task, type `update 1 do CS2100 tutorial /by 17/09/2018 1700`."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "3. To update task 7, an Event task, type `update 7 AngelHack 2019: Singapore /at 03/06/2019`."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "### Checking off tasks"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "To mark a task as done, type `done INDEX`. "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "This deletes a task at a specified index. "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "The index refers to the index number shown in the displayed task list."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "### Exiting the application"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "To exit the application, type `bye`."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "The GUI window closes. "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "### Saving data of tasks"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "Data of tasks are saved in the hard disk automatically after any "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "command that changes the data. "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "There is no need to save manually. "
      }
    ],
    "authorContributionMap": {
      "C-likethis123": 104,
      "-": 18
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.parse.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.task.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Retrieves response from Duke based on user input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            return command.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            return ui.showError(ex.getMessage());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Constructor for Duke object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        storage \u003d new Storage(System.getProperty(\"user.dir\") + \"//data//duke.txt\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Getter method for isExit."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @return boolean value of isExit"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "C-likethis123": 46
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.ui.Main;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "C-likethis123": 14
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.task.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " * AddCommands represent the addition of Tasks to the TaskList."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private Task userTask;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Constructor for AddCommand."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param userTask task to be added to TaskList"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public AddCommand(Task userTask) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        this.userTask \u003d userTask;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Adds a task to the TaskList, displays messages to user, and saves tasks to the hard disk."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param tasks a TaskList to add the Task to"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param ui Ui object"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param storage Storage object to save changes to text file"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        tasks.add(userTask);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        Integer numberOfTasks \u003d tasks.getNumberOfTasks();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        message +\u003d ui.showAddMessage();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        message +\u003d ui.showTask(userTask);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        message +\u003d ui.showNumberOfTasks(numberOfTasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        storage.writeTaskToFile(tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "C-likethis123": 41
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.task.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " * A base class for Commands that other specific commands inherit from."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    protected String message \u003d \"\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    protected boolean isUpdate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "C-likethis123": 21
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.task.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " * DeleteCommands represents user commands to delete a task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private Integer taskNumber;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Constructor for DeleteCommand."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param taskNumber index of task to delete from TaskList"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public DeleteCommand(Integer taskNumber) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Deletes a task from the TaskList, displays messages to user, and saves changes to the hard disk."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param tasks the TaskList to delete the task from"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param ui Ui object to display messages"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param storage Storage object to save changes to"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        Task taskToDelete \u003d tasks.getTask(taskNumber);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        tasks.delete(taskNumber);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        Integer numberOfTasks \u003d tasks.getNumberOfTasks();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        message +\u003d ui.showDeleteMessage();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        message +\u003d ui.showTask(taskToDelete);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        message +\u003d ui.showNumberOfTasks(numberOfTasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        storage.writeTaskToFile(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "C-likethis123": 43
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.task.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " * DoneCommands represents user commands to mark a task as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private Integer taskNumber;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Constructor for DoneCommand."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param taskNumber index of task to mark as done"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public DoneCommand(Integer taskNumber) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Mark a task as done, displays the marked task, then saves the changes."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param tasks a TaskList that stores the list of tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param ui Ui object to display messages"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param storage Storage object to save changes to"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @return String that shows what task marked as done"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        Task taskCompleted \u003d tasks.getTask(taskNumber);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        taskCompleted.markAsDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        message +\u003d ui.showDoneMessage();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        message +\u003d ui.showTask(taskCompleted);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        storage.writeTaskToFile(tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "C-likethis123": 42
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.task.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " * ExitCommands represent a user command to exit the program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Shows an exit message."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param tasks a TaskList that stores the list of tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param ui a TaskList that stores the list of tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param storage Storage object to save task changes to text file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return ui.showExit();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "C-likethis123": 25
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " * ListCommands represents the user command to display the task list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.task.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Displays the task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param tasks a TaskList that stores the list of tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param ui a TaskList that stores the list of tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param storage Storage object to save task changes to text file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @return String that shows all the tasks in the task list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return ui.showTaskList(taskList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "C-likethis123": 31
    }
  },
  {
    "path": "src/main/java/duke/command/SearchCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " * SearchCommand represents a user command to search for tasks that contains a particular word in"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " * its description."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.task.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "public class SearchCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private String searchDescription;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Constructor for SearchCommand."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param searchDescription keyword user entered to find a task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public SearchCommand(String searchDescription) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        this.searchDescription \u003d searchDescription;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        HashMap\u003cInteger, Task\u003e searchResults \u003d tasks.search(searchDescription);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return ui.showSearchResults(searchResults);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "C-likethis123": 32
    }
  },
  {
    "path": "src/main/java/duke/command/UpdateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.exception.WrongTaskFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.task.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " * UpdateCommands represents user commands to update a task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "public class UpdateCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private String taskContents;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public UpdateCommand(String taskContents) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        this.taskContents \u003d taskContents;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            String[] taskContentsList \u003d taskContents.split(\" \", 2);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            String taskNumber \u003d taskContentsList[0];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            int indexOfTask \u003d Integer.parseInt(taskNumber) - 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            Task taskToUpdate \u003d tasks.getTask(indexOfTask);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            String updatedContents \u003d taskContentsList[1];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            taskToUpdate.update(updatedContents);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            message +\u003d ui.showUpdateMessage();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            message +\u003d ui.showTask(taskToUpdate);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            storage.writeTaskToFile(tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            return message;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            throw new WrongTaskFormatException(\"To update a task, you should follow this format:\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "                    + \"update \u003ctask number\u003e \u003ctask description\u003e [optional]\u003ctime in DD/MM/YYYY HHMM\u003e\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "C-likethis123": 44
    }
  },
  {
    "path": "src/main/java/duke/controllers/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "package duke.controllers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " * This is a custom control using FXML."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " * user\u0027s avatar and a label containing text from the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private Text dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Constructor for DialogBox, a custom control."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param text String of text in a DialogBox"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param image Image to display as avatar"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public DialogBox(String text, Image image) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        displayPicture.setImage(image);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Flips the dialog box such that ImageView is on the left and text is on the right."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Returns DialogBoxes that represent User messages."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param text String containing user input"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param image Image of user\u0027s avatar"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @return DialogBox to contain User messages"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image image) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return new DialogBox(text, image);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Returns DialogBoxes that represents Duke messages."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param text String that represents Duke messages"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param image Image of Duke\u0027s avatar"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @return DialogBox to contain Duke messages"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image image) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        DialogBox dialogBox \u003d new DialogBox(text, image);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        dialogBox.flip();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return dialogBox;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "C-likethis123": 80
    }
  },
  {
    "path": "src/main/java/duke/controllers/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "package duke.controllers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.ui.Main;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Initialises the application."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        assert userImage !\u003d null : \"userImage cannot be null\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        assert dukeImage !\u003d null : \"dukeImage cannot be null\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        showWelcome();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Creates a dialog box with Duke\u0027s welcome message."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        String welcomeMessage \u003d \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\";;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "                DialogBox.getDukeDialog(welcomeMessage, dukeImage)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        );"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        );"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        if (duke.isExit()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            Main.stopApplication();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "C-likethis123": 69
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " * Base class for all exceptions in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "C-likethis123": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyToDoDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " * This exception occurs when a ToDo description is empty."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "public class EmptyToDoDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public EmptyToDoDescriptionException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "C-likethis123": 11
    }
  },
  {
    "path": "src/main/java/duke/exception/TaskDoesNotExistException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " * This exception is thrown when a user wants to perform an action"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " * on a task that does not exist in the task list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "public class TaskDoesNotExistException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public TaskDoesNotExistException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "C-likethis123": 11
    }
  },
  {
    "path": "src/main/java/duke/exception/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " * UnknownCommandExceptions represents commands not recognised by Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public UnknownCommandException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "C-likethis123": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/WrongTaskFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " * This exception is thrown when a user\u0027s commands are not in"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " * the correct format as specified by Duke."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "public class WrongTaskFormatException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public WrongTaskFormatException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "C-likethis123": 11
    }
  },
  {
    "path": "src/main/java/duke/parse/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "package duke.parse;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.command.SearchCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.command.UpdateCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.exception.EmptyToDoDescriptionException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.exception.UnknownCommandException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.exception.WrongTaskFormatException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " * Parser deals with the logic of parsing user inputs."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private static Command createToDoTask(String command) throws EmptyToDoDescriptionException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        Task userTask;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        String task \u003d command.replaceFirst(\"todo\", \"\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        if (task.isBlank()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            throw new EmptyToDoDescriptionException(\"The description of a todo cannot be empty. \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            //removes space in the beginning"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            task \u003d task.replaceFirst(\" \", \"\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            userTask \u003d new ToDo(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return new AddCommand(userTask);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private static Command createSearchCommand(String command) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        String searchDescription \u003d command.replaceFirst(\"find \", \"\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return new SearchCommand(searchDescription);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private static Command createDeleteCommand(String command) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(command.substring(7)) - 1;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return new DeleteCommand(taskNumber);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private static Command createDoneCommand(String command) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(command.substring(5)) - 1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return new DoneCommand(taskNumber);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private static Command createEventTask(String command) throws WrongTaskFormatException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            Task userTask;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            String task \u003d command.replaceFirst(\"event \", \"\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            String[] taskInformation \u003d task.split(\" /at \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            userTask \u003d new Event(taskInformation[0], taskInformation[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            return new AddCommand(userTask);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            throw new WrongTaskFormatException(\"To create a task, you should follow this format: \""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "                    + \"event \u003cdescription\u003e /at DD/MM/YYYY HHMM\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private static Command createDeadlineTask(String command) throws WrongTaskFormatException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            Task userTask;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            String task \u003d command.replaceFirst(\"deadline \", \"\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            String[] taskInformation \u003d task.split(\" /by \");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            userTask \u003d new Deadline(taskInformation[0], taskInformation[1]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            return new AddCommand(userTask);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            throw new WrongTaskFormatException(\"To create a Deadline, you should follow this format:\\n\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "                    + \"deadline \u003cdescription\u003e /by DD/MM/YYYY HHMM\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private static Command createUpdateCommand(String command) throws WrongTaskFormatException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        String task \u003d command.replaceFirst(\"update \", \"\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return new UpdateCommand(task);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Parses user input and returns the relevant command to be executed in the main message."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param userInput user command"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @return Command to be executed in main message"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @throws DukeException when the user input is not understood"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public static Command parse(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        String[] commandInformation \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        String command \u003d commandInformation[0];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            return createDoneCommand(userInput);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            return createDeleteCommand(userInput);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            return createSearchCommand(userInput);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            return createToDoTask(userInput);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            return createDeadlineTask(userInput);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            return createEventTask(userInput);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        case \"update\":"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            return createUpdateCommand(userInput);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            throw new UnknownCommandException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "C-likethis123": 120
    }
  },
  {
    "path": "src/main/java/duke/task/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " * DateTime represents dates specified in Deadlines and Event Tasks."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private static final String[] MONTHS_OF_YEAR \u003d {\"January\", \"February\", \"March\", \"April\", \"May\", \"June\","
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"};"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private Integer day;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private Integer month;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private Integer year;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private Integer hours;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private Integer minutes;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private String rawForm;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Constructor for a DateTime object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Parses String representation of date and stores its components."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param date String representing a date"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public DateTime(String date) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        rawForm \u003d date;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        String[] dateComponents \u003d date.split(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        //Parsing the dayComponent, example: 2/05/2019"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        String dayComponent \u003d dateComponents[0];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        String[] componentsOfDate \u003d dayComponent.split(\"/\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        this.day \u003d Integer.parseInt(componentsOfDate[0]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        this.month \u003d Integer.parseInt(componentsOfDate[1]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        this.year \u003d Integer.parseInt(componentsOfDate[2]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        //Parsing the timeComponent, example: 1800"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        String timeComponent \u003d dateComponents[1];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        String hoursString \u003d timeComponent.substring(0, 2);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        String minutesString \u003d timeComponent.substring(2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        this.hours \u003d Integer.parseInt(hoursString);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        this.minutes \u003d Integer.parseInt(minutesString);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public String getRawForm() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return rawForm;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Adds the \"st\", \"nd\", \"rd\" ordinals based on numerical value of day."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param day a number representing which day of the month it is"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @return String with an ordinal appended to the day, eg \u002713th\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public String appendOrdinal(Integer day) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        assert (day \u003e 0 \u0026\u0026 day \u003c 32) : \"Days are from 0-31\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        if (day \u003e\u003d 11 \u0026\u0026 day \u003c\u003d 13) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            return day.toString() + \"th\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        } else if (day % 10 \u003d\u003d 1) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            return day.toString() + \"st\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        } else if (day % 10 \u003d\u003d 2) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            return day.toString() + \"nd\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        } else if (day % 10 \u003d\u003d 3) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            return day.toString() + \"rd\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            return day.toString() + \"th\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Converts 24H timing to 12H timing."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param hours Hours of the time"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param minutes minutes of the time"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @return a String representing 12H timing"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public String to12HourTime(Integer hours, Integer minutes) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        assert (hours \u003e 0 \u0026\u0026 hours \u003c 24) : \"In 24 hours timing, hours should be between 0 - 23\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        assert (minutes \u003e\u003d 0 \u0026\u0026 minutes \u003c 60) : \"Minutes should be between 0-59\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        String hoursString;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        String minutesString;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        String noonString;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        if (hours \u003c\u003d 12) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            hoursString \u003d hours.toString();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            hoursString \u003d Integer.toString(hours - 12);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        if (minutes \u003d\u003d 0) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            minutesString \u003d \"\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            minutesString \u003d \".\" + minutes.toString();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        noonString \u003d hours \u003e\u003d 12 ? \"pm\" : \"am\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return String.format(\"%s%s%s\", hoursString, minutesString, noonString);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return String.format(\"%s of %s %s, %s\","
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "                appendOrdinal(day),"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "                MONTHS_OF_YEAR[month - 1],"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "                year.toString(),"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "                to12HourTime(hours, minutes));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "C-likethis123": 105
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " * This class represents Deadline tasks which is a type of Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private DateTime deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Constructor for Deadline class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param description Task description"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param deadline a String representing the deadline"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        this.typeOfTask \u003d \"[D]\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        this.deadline \u003d new DateTime(deadline);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public void setDeadline(String deadline) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        this.deadline \u003d new DateTime(deadline);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Updates a a particular task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param updatedContents String specifying contents to be updated with"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public void update(String updatedContents) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        String[] taskContentsList \u003d updatedContents.split(\" /by \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        String description \u003d taskContentsList[0];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        String deadline \u003d taskContentsList[1];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        setDescription(description);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        setDeadline(deadline);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return super.toString() + \" (by: \" + deadline.toString() + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return super.writeToFile() + \"|\" + deadline.getRawForm();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "C-likethis123": 49
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " * This class represents Event tasks which is a type of Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    DateTime at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Constructor for Events."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param description Event description"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param at String representation of date of event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        this.typeOfTask \u003d \"[E]\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        this.at \u003d new DateTime(at);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public void setAt(String at) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        this.at \u003d new DateTime(at);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        this.description  \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Updates a particular task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param updatedContents String specifying contents to be updated with"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public void update(String updatedContents) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        String[] taskContentsList \u003d updatedContents.split(\" /at \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        setDescription(taskContentsList[0]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        setAt(taskContentsList[1]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return super.toString() + \" (at: \" + at.toString() + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return super.writeToFile() + \"|\" + at.getRawForm();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "C-likethis123": 47
    }
  },
  {
    "path": "src/main/java/duke/task/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " * Storage deals with loading tasks from a file and saving tasks to the file."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Tasks are stored in the /data/duke.txt file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * This method checks if the file exists. If it does not, a new file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * is created."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * The method below is adapted from: https://github.com/WilliamRyank/duke/blob/master/src/main/java/Storage.java"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * after permission is obtained from original author."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public void checkFileExists() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            String folder \u003d \"data\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            File directory \u003d new File(folder);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            if (!directory.exists()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "                directory.mkdir();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            File taskFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            if (!taskFile.exists()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "                taskFile.createNewFile();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            assert taskFile.exists() : \"File should exist now!\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Loads tasks from specified file."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @return ArrayList containing tasks saved in specified file"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            checkFileExists();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            File taskFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            Scanner sc \u003d new Scanner(taskFile);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            //Loads task from hard disk to ArrayList"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "                Task taskFromFile \u003d convertToTask(sc.nextLine());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "                taskList.add(taskFromFile);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            System.out.println(filePath + \" cannot be found!\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            return new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Parses text file contents to a Task object."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param task String representation of task"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @return Task object representing task"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private Task convertToTask(String task) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        String[] taskInformation \u003d task.split(\"\\\\|\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        String typeOfTask \u003d taskInformation[0];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        String completionStatus \u003d taskInformation[1];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        String taskDescription \u003d taskInformation[2];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        Task convertedTask;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        if (typeOfTask.equals(\"[T]\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            convertedTask \u003d new ToDo(taskDescription);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        } else if (typeOfTask.equals(\"[E]\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            convertedTask \u003d new Event(taskDescription, taskInformation[3]);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            assert typeOfTask.equals(\"[D]\") : \"typeOfTask cannot be \" + typeOfTask;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            convertedTask \u003d new Deadline(taskDescription, taskInformation[3]);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        if (completionStatus.equals(\"1\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            convertedTask.markAsDone();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return convertedTask;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Writes tasks to the file."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param taskList TaskList containing tasks to write to file"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public void writeTaskToFile(TaskList taskList) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            FileWriter taskFile \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            ArrayList\u003cTask\u003e taskArrayList \u003d taskList.getTaskList();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            for (Task taskToWrite : taskArrayList) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "                taskFile.write(taskToWrite.writeToFile() + \"\\n\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            taskFile.close();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            System.out.println(filePath + \" cannot be found!\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "C-likethis123": 118
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " * A base class that Deadline, Event, and ToDo inherit from."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    protected String typeOfTask \u003d \"\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Marks the current Task as done."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public abstract void update(String updatedContents);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        String statusIcon \u003d isDone ? \"[\\u2713]\" : \"[\\u2718]\"; // \\u2713 represents a tick, \\u2718 represents a cross"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return String.format(\"%s%s %s\", typeOfTask, statusIcon, description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        String status \u003d isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return String.format(\"%s|%s|%s\", typeOfTask, status, description);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "C-likethis123": 39
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " * TaskLists represent the task list, and is in charge of addition and deletion of tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.exception.TaskDoesNotExistException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public Integer getNumberOfTasks() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Retrieves a task from the TaskList."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param index index of task to retrieve"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @return a Task object"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @throws DukeException when the requested task does not exist"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public Task getTask(Integer index) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            return taskList.get(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            String errorMessage \u003d String.format(\"There are only %d tasks but task %d was requested\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "                    taskList.size(), (index + 1));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            throw new TaskDoesNotExistException(errorMessage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Looks through tasks in the task list for tasks that contain the user entered keyword."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Puts such tasks in a HashMap."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param searchDescription keyword user entered to find a task"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @return HashMap with task number as key and corresponding task as value"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public HashMap\u003cInteger, Task\u003e search(String searchDescription) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        HashMap\u003cInteger, Task\u003e searchResults \u003d new HashMap\u003cInteger, Task\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        Integer index \u003d 1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            String description \u003d task.getDescription();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            if (description.contains(searchDescription)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "                searchResults.put(index, task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return searchResults;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public void add(Task userTask) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        taskList.add(userTask);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Deletes a task from the TaskList."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param taskNumber index of task to delete"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public void delete(Integer taskNumber) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        taskList.remove(taskNumber.intValue());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "C-likethis123": 75
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " * This class represents ToDo tasks which is a type of Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        this.typeOfTask \u003d \"[T]\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public void update(String updatedContents) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        setDescription(updatedContents);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "C-likethis123": 19
    }
  },
  {
    "path": "src/main/java/duke/ui/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Entry point to the application."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Shuts down the application safely."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public static void stopApplication() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        Platform.exit();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "C-likethis123": 40
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " * The Ui class is in charge of interactions with user, such as reading user commands and displaying"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " * formatted messages to the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Prints a message when a task is marked as done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public String showDoneMessage() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done: \\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Prints a message when a task is deleted."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public String showDeleteMessage() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return \"Noted. I\u0027ve removed this task: \\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Prints a message when a task is updated."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public String showUpdateMessage() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return \"The following task is updated: \\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Prints the addition message when a task is added."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public String showAddMessage() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return \"Got it. I\u0027ve added this task: \\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Prints the number of tasks in the task list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param numberOfTasks number of tasks in task list"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @return String of message showing number of tasks"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public String showNumberOfTasks(Integer numberOfTasks) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        if (numberOfTasks \u003d\u003d 1) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            return String.format(\"Now you have %d task in the list.\\n\", numberOfTasks);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            return String.format(\"Now you have %d tasks in the list.\\n\", numberOfTasks);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public String showTask(Task taskToDisplay) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return taskToDisplay.toString() + \"\\n\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public String showExit() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return \"Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Displays the task list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param taskList the task list to be displayed"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public String showTaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        message +\u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        Integer index \u003d 1;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        for (Task taskToShow : taskList) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            message +\u003d \"\\t\" + index.toString() + \".\" + taskToShow.toString() + \"\\n\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Displays tasks in the taskList argument supplied to the screen."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * The taskList argument is derived from the search() method in the TaskList class."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param taskList taskList containing tasks which has task descriptions matching a user supplied keyword."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public String showSearchResults(HashMap\u003cInteger, Task\u003e taskList) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        message +\u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        for (Integer index : taskList.keySet()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            Task currentTask \u003d taskList.get(index);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            message +\u003d \"\\t\" + index.toString() + \".\" + currentTask.toString() + \"\\n\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * Displays a DukeException."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     * @param message exception message to be displayed"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    public String showError(String message) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        return \"\\u2639 OOPS!!! \" + message + \"\\n\"; //displays a sad face"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "C-likethis123": 105
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "\u003c?import javafx.scene.text.Text?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "\u003cfx:root spacing\u003d\"10.0\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        \u003cText fx:id\u003d\"dialog\" text\u003d\"Label\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "C-likethis123": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"500.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" AnchorPane.leftAnchor\u003d\"0.0\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.controllers.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"421.0\" promptText\u003d\"Enter your command here!\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"424.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" AnchorPane.topAnchor\u003d\"0.0\" AnchorPane.bottomAnchor\u003d\"41.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"500.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "C-likethis123": 19
    }
  },
  {
    "path": "src/test/java/DateTimeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import duke.task.DateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "class DateTimeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    void testGetRawForm() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        assertEquals(\"12/12/1999 1830\", new DateTime(\"12/12/1999 1830\").getRawForm());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        assertEquals(\"2/12/2019 1800\", new DateTime(\"2/12/2019 1800\").getRawForm());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        assertEquals(\"2/5/2000 1159\", new DateTime(\"2/5/2000 1159\").getRawForm());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        assertEquals(\"3/5/2005 0932\", new DateTime(\"3/5/2005 0932\").getRawForm());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    void testAppendOrdinal() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        DateTime dateTime \u003d new DateTime(\"12/12/1999 1830\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        String[] expectedResults \u003d {\"1st\", \"2nd\", \"3rd\", \"4th\", \"5th\",\"6th\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "                \"7th\", \"8th\", \"9th\", \"10th\", \"11th\", \"12th\", \"13th\", \"14th\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "                \"15th\", \"16th\", \"17th\", \"18th\", \"19th\", \"20th\", \"21st\", \"22nd\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "                \"23rd\", \"24th\", \"25th\", \"26th\", \"27th\", \"28th\", \"29th\", \"30th\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "                \"31st\"};"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        for (String expected : expectedResults) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            assertEquals(expected, dateTime.appendOrdinal(index));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    void testTo12HourTime() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        DateTime dateTime \u003d new DateTime(\"12/12/2019 1300\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        assertEquals(\"1pm\", dateTime.to12HourTime(13, 0));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        assertEquals(\"1.25pm\", dateTime.to12HourTime(13, 25));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        assertEquals(\"9am\", dateTime.to12HourTime(9,0));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        assertEquals(\"1am\", dateTime.to12HourTime(1,0));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        assertEquals(\"4.59pm\", dateTime.to12HourTime(16, 59));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        assertEquals(\"10.32am\", dateTime.to12HourTime(10,32));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        assertEquals(\"10.32pm\", dateTime.to12HourTime(22, 32));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        assertEquals(\"2nd of December 2019, 6pm\", new DateTime(\"2/12/2019 1800\").toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        assertEquals(\"3rd of December 2019, 6pm\", new DateTime(\"3/12/2019 1800\").toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        assertEquals(\"4th of December 2019, 6pm\", new DateTime(\"4/12/2019 1800\").toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        assertEquals(\"11th of December 2019, 6pm\", new DateTime(\"11/12/2019 1800\").toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        assertEquals(\"12th of December 2019, 6pm\", new DateTime(\"12/12/2019 1800\").toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        assertEquals(\"13th of December 2019, 6pm\", new DateTime(\"13/12/2019 1800\").toString());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        assertEquals(\"21st of December 2019, 6pm\", new DateTime(\"21/12/2019 1800\").toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        assertEquals(\"22nd of December 2019, 6pm\", new DateTime(\"22/12/2019 1800\").toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        assertEquals(\"23rd of December 2019, 6pm\", new DateTime(\"23/12/2019 1800\").toString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "        assertEquals(\"24th of December 2019, 6pm\", new DateTime(\"24/12/2019 1800\").toString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "C-likethis123": 56
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "deadline return book /by 6/6/2019 1700"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "event project meeting /at 6/8/2019 1400"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "deadline return book /by 25/8/2019 1200"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "event project meeting /at 26/08/2019 1130"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "C-likethis123": 11
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "then "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "# compile the code into the bin folder, terminates if error occurs"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "if ! javac -cp ../src/main/java/*.java -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "then "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "#compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "then "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "else "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "C-likethis123"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "C-likethis123": 34
    }
  }
]
