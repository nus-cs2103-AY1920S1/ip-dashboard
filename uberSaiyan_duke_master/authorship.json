[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "test {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "application {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    mainClassName \u003d \"duke.core.Launcher\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "run {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 48
    }
  },
  {
    "path": "src/main/java/duke/command/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class AddDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public AddDeadlineCommand(String description, Date date) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public String execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        Task task \u003d new Deadline(description, date);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                + String.format(\"%s\\n\", task.toString())"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                + String.format(\"Now you have %d tasks in the list.\\n\", taskList.size());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 32
    }
  },
  {
    "path": "src/main/java/duke/command/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public AddEventCommand(String description, Date date) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public String execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        Task task \u003d new Event(description, date);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                + String.format(\"%s\\n\", task.toString())"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                + String.format(\"Now you have %d tasks in the list.\\n\", taskList.size());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 32
    }
  },
  {
    "path": "src/main/java/duke/command/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class AddTodoCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public AddTodoCommand(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public String execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        Task task \u003d new Todo(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                + String.format(\"%s\\n\", task.toString())"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                + String.format(\"Now you have %d tasks in the list.\\n\", taskList.size());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 28
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public abstract String execute(TaskList taskList, Storage storage);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 10
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public String execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            Task task \u003d taskList.remove(index - 1);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            return \"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    + String.format(\"%s\\n\", task.toString())"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    + String.format(\"Now you have %d tasks in the list.\\n\", taskList.size());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            throw new DukeException(\"Invalid index.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 31
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public String execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            Task task \u003d taskList.get(index - 1);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            return \"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    + String.format(\"%s\\n\", task.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            throw new DukeException(\"Invalid index.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 31
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public String execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        storage.save(taskList.getTasks());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return \"Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 17
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private String searchText;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public FindCommand(String searchText) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        this.searchText \u003d searchText;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public String execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return \"Here are the matching tasks in your list:\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                + taskList.filter(searchText).toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 23
    }
  },
  {
    "path": "src/main/java/duke/command/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public String execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 16
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public String execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return \"Here are the tasks in your list:\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                + taskList.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 17
    }
  },
  {
    "path": "src/main/java/duke/core/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    Duke() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        String filePath \u003d \"data/tasks.txt\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * Returns a response {@link String} from {@link Duke} according to input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @param input A query {@link String}."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @return A corresponding {@link String} response."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        String response \u003d c.execute(taskList, storage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        if (c.isExit()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 33,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/core/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.Main;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 13
    }
  },
  {
    "path": "src/main/java/duke/core/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.ui.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 32
    }
  },
  {
    "path": "src/main/java/duke/core/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.command.AddEventCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.command.AddTodoCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.command.InvalidCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * Converts a {@link String} into its corresponding {@link Date}."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @param dateString A {@link String} in the form dd/MM/yyyy HHmm."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @return A corresponding {@link Date}."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @throws ParseException If dateString is not in the form dd/MM/yyyy HHmm."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private static Date parseDate(String dateString) throws ParseException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(dateString);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * Parses a {@link String} into a {@link Command}."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @param fullCommand Any {@link String}."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @return A {@link Command} specified by the input {@link String}."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public static Command parse(String fullCommand) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        String command \u003d fullCommand.split(\" \")[0];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            String description \u003d fullCommand.substring(4).trim();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            if (description.length() \u003e 0) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                return new AddTodoCommand(description);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                String[] deadlineInfo \u003d fullCommand.substring(8).split(\" /by \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                if (deadlineInfo[0].length() \u003e 0) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    Date date \u003d parseDate(deadlineInfo[1].trim());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    return new AddDeadlineCommand(deadlineInfo[0].trim(), date);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                throw new DukeException(\"Error while parsing input.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                String[] eventInfo \u003d fullCommand.substring(5).split(\" /at \");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                if (eventInfo[0].length() \u003e 0) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    Date date \u003d parseDate(eventInfo[1].trim());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    return new AddEventCommand(eventInfo[0].trim(), date);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                throw new DukeException(\"Error while parsing input.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                int doneIndex \u003d Integer.parseInt(fullCommand.substring(4).split(\" \")[1]);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                return new DoneCommand(doneIndex);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                throw new DukeException(\"Error while parsing input.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                int deleteIndex \u003d Integer.parseInt(fullCommand.substring(6).split(\" \")[1]);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                return new DeleteCommand(deleteIndex);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                throw new DukeException(\"Error while parsing input.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            String searchText \u003d fullCommand.substring(4).trim();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            if (searchText.length() \u003e 0) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                return new FindCommand(searchText);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The search text of a find command cannot be empty.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            return new InvalidCommand();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 107
    }
  },
  {
    "path": "src/main/java/duke/core/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * Loads saved data from hard disk."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @return A {@link List} of {@link Task}."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public List\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            FileInputStream file \u003d new FileInputStream(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            ObjectInputStream in \u003d new ObjectInputStream(file);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            List\u003cTask\u003e tasks \u003d (List\u003cTask\u003e)in.readObject();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            in.close();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            file.close();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        } catch (IOException | ClassNotFoundException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            throw new DukeException(\"Failed to load stored data.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * Saves a {@link List} of {@link Task} into a file on the hard disk."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @param tasks A {@link List} of {@link Task}."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public void save(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            FileOutputStream file \u003d new FileOutputStream(filePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            ObjectOutputStream out \u003d new ObjectOutputStream(file);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            out.writeObject(tasks);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            out.close();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            file.close();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            throw new DukeException(\"Failed to save data.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 57
    }
  },
  {
    "path": "src/main/java/duke/core/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return this.tasks.get(index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public Task remove(int index) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return this.tasks.remove(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * Filters the {@link Task} in the list according to searchText."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @param searchText A query {@link String}."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @return A new {@link TaskList} with {@link Task} that contain searchText in its description."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public TaskList filter(String searchText) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        List\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            if (task.getDescription().contains(searchText)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                filteredTasks.add(task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return new TaskList(filteredTasks);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            result +\u003d String.format(\"%d. %s\\n\", (i + 1), task.toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 63
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class DukeException extends RuntimeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 7
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private Date by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public Deadline(String description, Date by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 17
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private Date at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public Event(String description, Date at) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 17
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public abstract class Task implements Serializable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    protected Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 30
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 12
    }
  },
  {
    "path": "src/main/java/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 61
    }
  },
  {
    "path": "src/main/java/duke/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * Sets initial values upon loading."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        String welcome \u003d \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                + \"What can I do for you?\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                DialogBox.getDukeDialog(welcome, dukeImage)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 62
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 19
    }
  },
  {
    "path": "src/test/java/AddDeadlineCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class AddDeadlineCommandTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            String dateString \u003d \"28/08/2019 1700\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            AddDeadlineCommand c \u003d new AddDeadlineCommand(\"Example.\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(dateString));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            Storage storage \u003d new Storage(\"This does not matter.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            String crossSymbol \u003d \"\\u2718\"; // x symbol"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            String desired \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    + String.format(\"[D][%s] Example. (by: Wed Aug 28 17:00:00 SGT 2019)\\n\", crossSymbol)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    + \"Now you have 1 tasks in the list.\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            assertEquals(c.execute(taskList, storage), desired);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 30
    }
  },
  {
    "path": "src/test/java/AddEventCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.command.AddEventCommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class AddEventCommandTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            String dateString \u003d \"28/08/2019 1700\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            AddEventCommand c \u003d new AddEventCommand(\"Example.\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(dateString));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            Storage storage \u003d new Storage(\"This does not matter.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            String crossSymbol \u003d \"\\u2718\"; // x symbol"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            String desired \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    + String.format(\"[E][%s] Example. (at: Wed Aug 28 17:00:00 SGT 2019)\\n\", crossSymbol)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    + \"Now you have 1 tasks in the list.\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            assertEquals(c.execute(taskList, storage), desired);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 30
    }
  },
  {
    "path": "src/test/java/AddTodoCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.command.AddTodoCommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class AddTodoCommandTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        AddTodoCommand c \u003d new AddTodoCommand(\"Example.\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        Storage storage \u003d new Storage(\"This does not matter.\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        String crossSymbol \u003d \"\\u2718\"; // x symbol"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        String desired \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                + String.format(\"[T][%s] Example.\\n\", crossSymbol)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                + \"Now you have 1 tasks in the list.\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        assertEquals(c.execute(taskList, storage), desired);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 20
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public void stringConversion_isNotDone_crossSymbol() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            Task testTake \u003d new Deadline(\"Example.\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(\"28/08/2019 1700\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            String crossSymbol \u003d \"\\u2718\"; // x symbol"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            assertEquals(String.format(\"[D][%s] Example. (by: Wed Aug 28 17:00:00 SGT 2019)\", crossSymbol),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    testTake.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public void stringConversion_isDone_tickSymbol() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            Task testTake \u003d new Deadline(\"Example.\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(\"28/08/2019 1700\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            testTake.markAsDone();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            String tickSymbol \u003d \"\\u2713\"; // tick symbol"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            assertEquals(String.format(\"[D][%s] Example. (by: Wed Aug 28 17:00:00 SGT 2019)\", tickSymbol),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    testTake.toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 39
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public void stringConversion_isNotDone_crossSymbol() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            Task testTake \u003d new Event(\"Example.\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(\"28/08/2019 1700\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            String crossSymbol \u003d \"\\u2718\"; // x symbol"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            assertEquals(String.format(\"[E][%s] Example. (at: Wed Aug 28 17:00:00 SGT 2019)\", crossSymbol),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    testTake.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public void stringConversion_isDone_tickSymbol() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            Task testTake \u003d new Event(\"Example.\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(\"28/08/2019 1700\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            testTake.markAsDone();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            String tickSymbol \u003d \"\\u2713\"; // tick symbol"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            assertEquals(String.format(\"[E][%s] Example. (at: Wed Aug 28 17:00:00 SGT 2019)\", tickSymbol),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    testTake.toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 38
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public void stringConversion_isNotDone_crossSymbol() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        Task testTake \u003d new Todo(\"This is an example.\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        String crossSymbol \u003d \"\\u2718\"; // x symbol"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        assertEquals(String.format(\"[T][%s] This is an example.\", crossSymbol), testTake.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public void stringConversion_isDone_tickSymbol() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        Task testTask \u003d new Todo(\"This is an example.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        testTask.markAsDone();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        String tickSymbol \u003d \"\\u2713\"; // tick symbol"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        assertEquals(String.format(\"[T][%s] This is an example.\", tickSymbol), testTask.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 22
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "delete 7"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 11
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\tmkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\trm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\techo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\texit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\techo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\texit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\techo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\texit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 34
    }
  }
]
