[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    archiveVersion \u003d \"0.2\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "\ttoolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "test {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 39,
      "-": 19
    }
  },
  {
    "path": "config/travis/check-eof-newline.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "# Checks that all text files end with a newline."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "ret\u003d0"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "# Preserve filename with spaces by only splitting on newlines."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "IFS\u003d\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        echo \"ERROR:$filename:$line: no newline at EOF.\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        ret\u003d1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "done"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "exit $ret"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 18
    }
  },
  {
    "path": "config/travis/check-line-endings.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "# Checks for prohibited line endings."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "# Prohibited line endings: \\r\\n"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "awk \u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    BEGIN {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        FS \u003d \":\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        OFS \u003d \":\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        ret \u003d 0"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        ret \u003d 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    END {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        exit ret"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "\u0027"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 19
    }
  },
  {
    "path": "config/travis/check-trailing-whitespace.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "# Checks for trailing whitespace"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "awk \u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    BEGIN {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        FS \u003d \":\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        OFS \u003d \":\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        ret \u003d 0"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        # Only warn for markdown files (*.md) to accomodate text editors"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        # which do not properly handle trailing whitespace."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        # (e.g. GitHub web editor)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if ($1 ~ /\\.md$/) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            severity \u003d \"WARN\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            severity \u003d \"ERROR\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            ret \u003d 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        print severity, $1, $2, \" trailing whitespace.\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    END {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        exit ret"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "\u0027"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 26
    }
  },
  {
    "path": "config/travis/deploy_github_pages.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "# Pushes files generated by Asciidoctor and associated files to gh-pages branch for commits to master branch."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "set -o errexit # exit with nonzero exit code if any line fails"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "if [ -z \"$GITHUB_TOKEN\" ]; then"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "  echo \u0027GITHUB_TOKEN is not set up in Travis. Skipping deploy.\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "  exit 0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "fi;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "set -o nounset # exit if variable is unset"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "cd build/docs/html5"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "git init"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "git config user.name \u0027Deployment Bot (Travis)\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "git config user.email \u0027deploy@travis-ci.org\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "git config credential.helper \u0027store --file\u003d.git/credentials\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "echo \"https://${GITHUB_TOKEN}:@github.com\" \u003e .git/credentials"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "git remote add upstream \"https://github.com/${TRAVIS_REPO_SLUG}.git\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "# Reset to gh-pages branch, or create orphan branch if gh-pages does not exist in remote."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "if git ls-remote --exit-code --heads upstream gh-pages; then"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    git fetch --depth\u003d1 upstream gh-pages"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    git reset upstream/gh-pages"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "elif [ $? -eq 2 ]; then # exit code of git ls-remote is 2 if branch does not exist"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    git checkout --orphan gh-pages"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "else # error occurred"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    exit $?"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "fi"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "# Exit if there are no changes to gh-pages files."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "if changes\u003d$(git status --porcelain) \u0026\u0026 [ -z \"$changes\" ]; then"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    echo \u0027No changes to GitHub Pages files; exiting.\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "fi"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "git add -A ."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "git commit -m \"Rebuild pages at ${TRAVIS_COMMIT}\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "git push --quiet upstream HEAD:gh-pages"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 42
    }
  },
  {
    "path": "config/travis/run-checks.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "# Runs all check-* scripts, and returns a non-zero exit code if any of them fail."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "ret\u003d0 \u0026\u0026"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "for checkscript in \"$dir\"/check-*; do"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    if ! \"$checkscript\"; then"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        ret\u003d1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "done"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "exit $ret"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 11
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "T | 0 | borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "E | 1 | project meeting | Tue Oct 01 2019 14:00 PM | 15:00 PM"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "D | 0 | return book | Sat Oct 05 2019 17:00 PM"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "T | 0 | read book"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 4
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "# Milk \u0026 Mocha\u0027s Task Manager - User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "By: Sim Khiang Leon "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Since: 30/9/2019"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Milk \u0026 Mocha\u0027s (M\u0026M) task manager serves as a personal chatbot assistant to help individuals manage and record their daily tasks in a readily available format. For those who prefer to work with a Command Line Interface (CLI) on top of a beautiful Graphical User Interface (GUI), this application will be perfect for you! "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "1. Ensure you have Java 11 or above installed on your computer. "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "2. Download the latest jar file [here](https://github.com/khiangleon/duke/releases). "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "3. Double-click the jar file to start the app. The GUI should appear in a few seconds. "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "4. Type the command in the command box and press enter to execute it. Refer to the Features section for a list of all the commands you can try. "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "#### Command Format: "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Words in { } are parameters supplied by the user. "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Input integers for *task index*. "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "### Adding a todo task: `todo`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Adds a todo to the list of tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Format: todo {*task*}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "`todo exercise`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "`I\u0027ve added this task: [T][x] exercise`"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "### Adding a deadline task: `deadline`"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Adds a task with a deadline to the list of tasks."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Format: deadline {*task*} /by {*deadline*}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Specify *deadline* in date and time (24hr) format: DD/MM/YYYY HHMM"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "`deadline return book /by 24/11/2019 1700`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "`I\u0027ve added this task: [D][x] return book (by: Nov 24 2019 17:00 PM)`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "### Adding an event task: `event`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Adds a task as an event with starting and ending times to the list of tasks."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Format: event {*task*} /at {*starting date and time*} /to {*ending time*}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Specify *starting date and time* in date and time (24hr) format: DD/MM/YYYY HHMM"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Specify *ending time* in time (24hr) format: HHMM"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "`event project meeting /at 1/12/2019 1000 /to 1200`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "`I\u0027ve added this task: [E][x] project meeting (at: Dec 1 2019 10:00 AM - 12:00 PM)`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "### Adding a \u0027do after\u0027 task: `do`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Adds a task that needs to be done after an existing task in the list of tasks."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Format: do {*task*} /after {*task index*}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "*task index* is the index of the task on the list which needs to be done first."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "`do return book /after 2`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "`I\u0027ve added this task: [DA][x] return book (after: read book)`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "### Listing all tasks: `list`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Shows all current existing tasks in a list. "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Format: list"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "### Marking a task as done: `done`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Marks a task with a slash (/) to show that task has been completed. All tasks are set undone (x) initially."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Format: done {*task index*} "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "*task index* is the index of the task on the list which is completed. "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "`done 3`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "`I\u0027ve marked this task as done: [D][/] return book (by: Nov 24 2019 17:00 PM)`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "### Deleting a task: `delete`"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Removes a task permanently from the list of tasks. "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Format: delete {*task index*}"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "*task index* is the index of the task on the list which is to be removed. "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "`delete 5`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "`I\u0027ve removed this task: [D][x] return book (by: Nov 24 2019 17:00 PM)`"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "### Searching a task: `find`"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Searches for a task in the list of tasks containing the provided keyword/phrase. "
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "The search is case sensitive."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "You can search for specific dates and numbers too."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Format: find {*keyword/phrase*}"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "`find book`"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "`Here are the matching tasks in your list: "
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "1.[T][x] borrow book"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "2.[T][x] read book"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "3.[D][x] return book (by: Nov 24 2019 17:00 PM)`   "
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "### Exiting the app: `bye`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Automatically saves the list of tasks to the existing text file and closes the app window."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "Format: bye"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "## Acknowledgements"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "I do not own the below images used in the GUI:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "[milk.png](https://www.google.com/url?sa\u003di\u0026source\u003dimages\u0026cd\u003d\u0026ved\u003d2ahUKEwi_2omdsfjkAhWFA3IKHU6UD_YQjRx6BAgBEAQ\u0026url\u003dhttps%3A%2F%2Fwww.pinterest.com%2Fpin%2F847521223607434910%2F\u0026psig\u003dAOvVaw192gEcdS1P0WUpcOzgMk1q\u0026ust\u003d1569927264785686)"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "[mocha.jpg](https://www.google.com/url?sa\u003di\u0026source\u003dimages\u0026cd\u003d\u0026ved\u003d2ahUKEwiW7cONtPjkAhW38HMBHVDABN8QjRx6BAgBEAQ\u0026url\u003dhttps%3A%2F%2Fwww.pinterest.com%2Fpin%2F329748003963651491%2F\u0026psig\u003dAOvVaw301bzFVBbSvHHLicpDmO8X\u0026ust\u003d1569928107397874) "
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "[background.jpg](https://www.google.com/url?sa\u003di\u0026source\u003dimages\u0026cd\u003d\u0026ved\u003d2ahUKEwiTjaGhtPjkAhV1ILcAHZ3UC1sQjRx6BAgBEAQ\u0026url\u003dhttps%3A%2F%2Ftwitter.com%2Fmilkmochabear%2Fstatus%2F1034453857961631744\u0026psig\u003dAOvVaw1VWNuf1e0gPT00n4ElEd6M\u0026ust\u003d1569928152359688)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "khiangleon": 150,
      "-": 12
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        Circle clipImg \u003d new Circle(50,50,50);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        displayPicture.setClip(clipImg);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Creates a dialog box for the user."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param text text input by user."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param img image of user."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return dialog box with user text and image."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return new DialogBox(\"Mocha: \\n\" + text, img);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Creates a dialog box for Duke."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param text text response from Duke."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param img image of Duke."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return dialog box with Duke response and image."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        var db \u003d new DialogBox(\"Milk: \\n\" + text, img);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 76
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * This is a Personal Assistant Chatbot named Duke. It acts like a task manager to help a person keep track of"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * tasks to do, various deadlines and events. The name Duke was chosen in honor of Duke, the Java Mascot."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private TaskList tasklist;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private boolean isLoaded;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Initialises the Duke class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Creates a new user interface and storage."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Load any existing tasks from the file found in filepath to a list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * If no file is found in the filepath, shows an error and creates a new list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        storage \u003d new Storage(\"data/duke.txt\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            tasklist \u003d new TaskList(storage.loadFile());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            isLoaded \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            tasklist \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            isLoaded \u003d false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Gets welcome message."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return welcome message."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String getWelcome() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return ui.showWelcome();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Shows whether data has been successfully loaded."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return loaded successfully or loading failed."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String getLoaded() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (isLoaded) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return ui.showLoaded();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return ui.showLoadingError();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Starts receiving commands from user inputs."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Executes commands accordingly."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Generates a response to user inputs."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    protected String getResponse(String input) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        boolean isTerminated;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        String result;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        input \u003d input.trim();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            result \u003d c.execute(tasklist, ui, storage);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            isTerminated \u003d c.isTerminated();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return e.toString();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (isTerminated) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return ui.sendBye();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 79,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public static Stage stage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            this.stage \u003d stage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            stage.setTitle(\"Milk \u0026 Mocha\u0027s TaskManager\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().handleStartup();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 33
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import javafx.animation.PauseTransition;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/mocha.jpg\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/milk.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Displays application startup messages."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void handleStartup() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        String welcome \u003d duke.getWelcome();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        String loaded \u003d duke.getLoaded();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                DialogBox.getDukeDialog(loaded + \"\\n\" + welcome, dukeImage)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * After executing Bye response, waits for 2 seconds before automatically terminating the application and"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * closing the window."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        );"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (response.equals(\"Bye. Hope to see you again soon!\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            PauseTransition pause \u003d new PauseTransition(Duration.seconds(2));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            pause.setOnFinished(event -\u003e Main.stage.hide());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            pause.play();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 71
    }
  },
  {
    "path": "src/main/java/duke/command/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.InvalidDateTimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.ListFullException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.format.DateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * This command adds a Deadline to the list of tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class AddDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private String task;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Initialises the task and its deadline to be added."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param task name of task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param deadline deadline to be met."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public AddDeadlineCommand(String task, String deadline) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Ensures that Duke application continues to read in user inputs."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return not terminated."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public boolean isTerminated() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Executes the adding of Deadline to the list of tasks."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Firstly checks whether list of tasks is already full (maximum 100 tasks)."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Then reformats date and time of the deadline provided and creates a new Deadline to be added to list of tasks."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Finally outputs what has been added successfully to the list of tasks using the UI."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param tasklist existing list of tasks."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param ui user interface to inform user what has been added."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param storage is not used here."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @throws DukeException if list of tasks is full or if dateTime provided is invalid."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (tasklist.size() \u003e\u003d 100) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            throw new ListFullException();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            SimpleDateFormat raw \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            Date properDeadline;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                properDeadline \u003d raw.parse(deadline);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                throw new InvalidDateTimeException();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            DateTime dateTime \u003d new DateTime();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            String formattedDeadline \u003d dateTime.getDeadline().format(properDeadline);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            tasklist.add(new Deadline(task, formattedDeadline));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            Task current \u003d tasklist.get(tasklist.size() - 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return \"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    + \"  \" + current.toString() + \"\\n\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    + String.format(\"Now you have %d tasks in the list.\", tasklist.size());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 76
    }
  },
  {
    "path": "src/main/java/duke/command/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.InvalidEventException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.ListFullException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.format.DateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * This command adds an Event to the list of tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private String task;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private String start;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private String end;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Initialises the task and its start and end times to be added."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param task name of task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param start start time of event."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param end end time of event."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public AddEventCommand(String task, String start, String end) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.start \u003d start;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.end \u003d end;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Ensures that Duke application continues to read in user inputs."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return not terminated."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public boolean isTerminated() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Executes the adding of Event to the list of tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Firstly checks whether list of tasks is already full (maximum 100 tasks)."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Then reformats date and time of the event provided and creates a new Event to be added to list of tasks."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Finally outputs to the user what has been added successfully to the list of tasks using the UI."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param tasklist existing list of tasks."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param ui user interface to inform user what has been added."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param storage is not used here."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @throws DukeException if list of tasks is full or if dateTime provided is invalid."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (tasklist.size() \u003e\u003d 100) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            throw new ListFullException();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            SimpleDateFormat rawStart \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            SimpleDateFormat rawEnd \u003d new SimpleDateFormat(\"HHmm\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            Date properStart;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            Date properEnd;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                properStart \u003d rawStart.parse(start);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                properEnd \u003d rawEnd.parse(end);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                throw new InvalidEventException();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            DateTime dateTime \u003d new DateTime();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            String formattedStart \u003d dateTime.getEventStart().format(properStart);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            String formattedEnd \u003d dateTime.getEventEnd().format((properEnd));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            tasklist.add(new Event(task, formattedStart, formattedEnd));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            Task current \u003d tasklist.get(tasklist.size() - 1);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return \"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    + \"  \" + current.toString() + \"\\n\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    + String.format(\"Now you have %d tasks in the list.\", tasklist.size());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 83
    }
  },
  {
    "path": "src/main/java/duke/command/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.ListFullException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * This command adds a Todo to the list of tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class AddTodoCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private String item;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Initialises the task to be added."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param item name of task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public AddTodoCommand(String item) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.item \u003d item;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Ensures that Duke application continues to read in user inputs."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return not terminated."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public boolean isTerminated() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Executes the adding of Todo to the list of tasks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Firstly checks whether list of tasks is already full (maximum 100 tasks)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Then creates a new Todo to be added to list of tasks."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Finally outputs what has been added successfully to the list of tasks using the UI."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param tasklist existing list of tasks."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param ui user interface to inform user what has been added."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param storage is not used here."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @throws DukeException if list of tasks is full."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (tasklist.size() \u003e\u003d 100) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            throw new ListFullException();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            tasklist.add(new Todo(item));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            Task current \u003d tasklist.get(tasklist.size() - 1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return \"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    + \"  \" + current.toString() + \"\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    + String.format(\"Now you have %d tasks in the list.\", tasklist.size());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 59
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * This command terminates the application."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Stops application from reading anymore user inputs."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return terminated."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public boolean isTerminated() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Executes the termination of the application."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Initiates saving(overwriting) of list of tasks using storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Show any errors in saving and outputs a final farewell message to the user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param tasklist existing list of tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param ui user interface to say bye to the user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param storage saves list of tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String execute(TaskList tasklist, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            storage.saveFile(tasklist);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return \"Unable to save data: \" + e.getMessage();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return ui.sendBye();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 41
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public abstract String execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public abstract boolean isTerminated();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 14
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * This command deletes task from the list of tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class DeleteTaskCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private String itemIndex;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Initialises deleting of a task using the task index."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param itemIndex task index."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public DeleteTaskCommand(String itemIndex) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.itemIndex \u003d itemIndex;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Ensures that Duke application continues to read in user inputs."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return not terminated."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public boolean isTerminated() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Executes the deletion of a task from the list of tasks."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Firstly converts the task index string to an integer."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Then check that the task index entered by the user is valid."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Finally remove the task from the list of tasks and output what has been successfully deleted using the UI."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param tasklist existing list of tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param ui user interface to inform user what has been deleted."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param storage is not used here."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @throws DukeException if task index is invalid."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        // convert string to int"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        int index \u003d Integer.parseInt(itemIndex) - 1;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d tasklist.size()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            Task item \u003d tasklist.get(index);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            // delete task"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            tasklist.remove(index);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return \"Noted. I\u0027ve removed this task: \\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    + \"  \" + item.toString() + \"\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    + String.format(\"Now you have %d tasks in the list.\", tasklist.size());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 61
    }
  },
  {
    "path": "src/main/java/duke/command/DoAfterTasksCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.ListFullException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.DoAfterTasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * This command adds a DoAfterTasks to the list of tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class DoAfterTasksCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private String task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private String taskIndex;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Initialises the task and prerequisite task\u0027s index."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param task name of task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param taskIndex prerequisite task\u0027s index."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public DoAfterTasksCommand(String task, String taskIndex) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Ensures that Duke application continues to read in user inputs."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return not terminated."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public boolean isTerminated() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Executes the adding of DoAfterTasks to the list of tasks."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Firstly converts the task index string to an integer and checks whether list of tasks"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * is already full (maximum 100 tasks)."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Then check that the task index entered by the user is valid."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Finally creates a new DoAfterTasks to be added to list of tasks and output what has been successfully"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * added using the UI."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param tasklist existing list of tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param ui user interface to inform user what has been done."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param storage is not used here."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @throws DukeException if list of tasks is already full or task index is invalid."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        // convert string to int"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        int index \u003d Integer.parseInt(taskIndex) - 1;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (tasklist.size() \u003e\u003d 100) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            throw new ListFullException();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else if (index \u003c 0 || index \u003e\u003d tasklist.size()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            Task item \u003d tasklist.get(index);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            tasklist.add(new DoAfterTasks(task, item.toString()));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            Task current \u003d tasklist.get(tasklist.size() - 1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return \"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    + \"  \" + current.toString() + \"\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    + String.format(\"Now you have %d tasks in the list.\", tasklist.size());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 72
    }
  },
  {
    "path": "src/main/java/duke/command/DoneTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * This command marks task as done from the list of tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class DoneTaskCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private String itemIndex;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Initialises marking a task as done using the task index."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param itemIndex task index."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public DoneTaskCommand(String itemIndex) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.itemIndex \u003d itemIndex;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Ensures that Duke application continues to read in user inputs."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return not terminated."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public boolean isTerminated() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Executes the marking of a task as done from the list of tasks."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Firstly converts the task index string to an integer."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Then check that the task index entered by the user is valid."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Finally mark the task as done from the list of tasks and output what has been successfully"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * completed using the UI."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param tasklist existing list of tasks."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param ui user interface to inform user what has been done."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param storage is not used here."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @throws DukeException if task index is invalid."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        // convert string to int"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        int index \u003d Integer.parseInt(itemIndex) - 1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d tasklist.size()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            Task item \u003d tasklist.get(index);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            // tick completed task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            item.setDone();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return \"Nice! I\u0027ve marked this task as done: \\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    + \"  \" + item.toString();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 61
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * This command gives users a way to find a task by searching for a keyword."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Initialises the keyword to be searched."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param keyword keyword to be searched."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Ensures that Duke application continues to read in user inputs."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return not terminated."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public boolean isTerminated() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Executes the search of a task from the list of tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * If any task is found to contain the searched keyword string, prints the task out."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param tasklist existing list of tasks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param ui user interface to print out matching tasks in a new list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param storage is not used here."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String execute(TaskList tasklist, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        StringBuilder temp \u003d new StringBuilder(\"Here are the matching tasks in your list: \\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        for (int i \u003d 0; i \u003c tasklist.size(); i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            String task \u003d tasklist.get(i).toString();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            boolean isMatch \u003d task.contains(keyword);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            if (isMatch) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                temp.append((i + 1) + \".\" + task + \"\\n\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return temp.toString();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 54
    }
  },
  {
    "path": "src/main/java/duke/command/SendTasksCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * This command lists down all tasks from the list of tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class SendTasksCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Ensures that Duke application continues to read in user inputs."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return not terminated."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public boolean isTerminated() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Executes listing down of all existing tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param tasklist existing list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param ui user interface to inform user what tasks are available."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param storage is not used here."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String execute(TaskList tasklist, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        StringBuilder temp \u003d new StringBuilder(\"Here are the tasks in your list: \\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        for (int i \u003d 0; i \u003c tasklist.size(); i++) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            Task item \u003d tasklist.get(i);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            temp.append((i + 1) + \".\" + item.toString() + \"\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return temp.toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 38
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 4
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidDateTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class InvalidDateTimeException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return \"OOPS!!! Please provide the date and time in the correct format as follows: \""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                + \"DD/MM/YYYY HHMM (eg. 2/12/2019 1800)\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class InvalidEventException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return \"OOPS!!! Please provide the starting date and time and the ending time in the correct format \""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                + \"as follows: DD/MM/YYYY HHMM /to HHMM (eg. 2/12/2019 1800 /to 2100)\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class InvalidIndexException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return \"OOPS!!! Please indicate the correct task index.\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/ListFullException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class ListFullException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return \"OOPS!!! You can add no more than 100 tasks!\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class MissingCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return \"Please talk to me, Mocha... \u003d(\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingDateTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class MissingDateTimeException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return \"OOPS!!! Please provide a date and time.\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class MissingDeadlineException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return \"OOPS!!! The description of a deadline cannot be empty.\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingDoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class MissingDoException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return \"OOPS!!! The description of a doAfterTask cannot be empty.\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingEndException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class MissingEndException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return \"OOPS!!! Please provide an ending time.\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class MissingEventException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return \"OOPS!!! The description of an event cannot be empty.\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingKeywordException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class MissingKeywordException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return \"OOPS!!! Please indicate keyword to be searched.\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingStartException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class MissingStartException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return \"OOPS!!! Please provide a start date and time.\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingTaskIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class MissingTaskIndexException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return \"OOPS!!! Please indicate a task index.\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingTodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class MissingTodoException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return \"OOPS!!! The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 9
    }
  },
  {
    "path": "src/main/java/duke/format/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.format;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * Teaching Duke to understand dates and times."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * Converts original dateTime string to a different format."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * eg. Converts 2/12/2019 1800 -\u003e 2nd of December 2019, 6pm."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "//@@Zhang Dongjun {Auxinnn}-reused"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "//reused from his repo after adopting his suggestion to use Java library for SimpleDateFormat"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private static SimpleDateFormat reformatDeadline"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            \u003d new SimpleDateFormat(\"EEE MMM dd yyyy HH:mm a\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private static SimpleDateFormat reformatEventStart"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            \u003d new SimpleDateFormat(\"EEE MMM dd yyyy HH:mm a\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private static SimpleDateFormat reformatEventEnd"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            \u003d new SimpleDateFormat(\"HH:mm a\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public SimpleDateFormat getDeadline() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return reformatDeadline;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public SimpleDateFormat getEventStart() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return reformatEventStart;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public SimpleDateFormat getEventEnd() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return reformatEventEnd;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "//@@Zhang Dongjun"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 34
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.SendTasksCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.DoneTaskCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.AddTodoCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.AddEventCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.DeleteTaskCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.DoAfterTasksCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.MissingCommandException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.MissingDateTimeException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.MissingDeadlineException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.MissingEventException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.MissingKeywordException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.MissingTaskIndexException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.MissingTodoException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.MissingStartException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.MissingEndException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.MissingDoException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * Deals with making sense of the user command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * Determines which command to be executed by Duke."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    String fullCommand;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private static Command command;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public Parser(String fullCommand) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Recognises certain user inputs as a valid Duke command to be executed."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param fullCommand raw user input."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return a suitable command."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @throws DukeException if incomplete or invalid user input given."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        String[] splitStr \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        switch (splitStr[0]) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            command \u003d new ByeCommand();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            command \u003d new SendTasksCommand();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            checkString(splitStr);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            command \u003d new DoneTaskCommand(splitStr[1].trim());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            checkString(splitStr);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            command \u003d new AddTodoCommand(splitStr[1].trim());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            checkString(splitStr);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            String item \u003d splitStr[1].trim();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            if (item.startsWith(\"/by\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                throw new MissingDeadlineException();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            } else if (item.endsWith(\"/by\") || (!item.contains(\"/by\"))) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                throw new MissingDateTimeException();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                String[] data \u003d item.split(\"/by\", 2);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                command \u003d new AddDeadlineCommand(data[0].trim(), data[1].trim());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            checkString(splitStr);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            String event \u003d splitStr[1].trim();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            if (event.startsWith(\"/at\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                throw new MissingEventException();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            } else if (event.endsWith(\"/at\") || (!event.contains(\"/at\"))) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                throw new MissingDateTimeException();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                String[] data \u003d event.split(\"/at\", 2);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                String duration \u003d data[1].trim();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                if (duration.startsWith(\"/to\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    throw new MissingStartException();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                } else if (duration.endsWith(\"/to\") || (!duration.contains(\"/to\"))) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    throw new MissingEndException();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    String[] times \u003d duration.split(\"/to\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    command \u003d new AddEventCommand(data[0].trim(), times[0].trim(), times[1].trim());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            checkString(splitStr);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            command \u003d new DeleteTaskCommand(splitStr[1].trim());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            checkString(splitStr);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            command \u003d new FindCommand(splitStr[1].trim());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        case \"do\":"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            checkString(splitStr);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            String raw \u003d splitStr[1].trim();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            if (raw.startsWith(\"/after\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                throw new MissingDoException();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            } else if (raw.endsWith(\"/after\") || (!raw.contains(\"/after\"))) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                throw new MissingTaskIndexException();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                String[] data \u003d raw.split(\"/after\", 2);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                command \u003d new DoAfterTasksCommand(data[0].trim(), data[1].trim());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        case \"\":"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            throw new MissingCommandException();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Method to check number of words in string parsed, and throw the correct exception where appropriate."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param splitStr string array being checked."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @throws DukeException correct exception to be thrown."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private static void checkString(String[] splitStr) throws DukeException {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        // if less than 2 words"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (splitStr.length \u003c 2) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            switch (splitStr[0]) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                throw new MissingTaskIndexException();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                throw new MissingTodoException();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                throw new MissingDeadlineException();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                throw new MissingEventException();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                throw new MissingKeywordException();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            case \"do\":"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                throw new MissingDoException();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                assert false : splitStr[0];"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 153
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.DoAfterTasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * Deals with the loading and saving of tasks to the assigned file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Creates a new list of tasks and load tasks one by one from the saved file in filepath to this list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return list of saved tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @throws FileNotFoundException if no such file is found in filepath."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public ArrayList\u003cTask\u003e loadFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        // create a file object"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        Scanner load \u003d new Scanner(f);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        while (load.hasNext()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            String item \u003d load.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            loadTask(item, tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Figures out the type of task being loaded from saved file, creates the new task and adds to the"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * new list of tasks."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * For each task being created, check if it is done already and mark it accordingly while loading."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param item entire task as a string."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param tasks new task list to be loaded with tasks."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private static void loadTask(String item, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        String[] splitStr \u003d item.split(\" \\\\| \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        switch (splitStr[0]) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            tasks.add(new Todo(splitStr[2]));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            checkDone(splitStr[1], tasks.get(tasks.size() - 1));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            tasks.add(new Deadline(splitStr[2], splitStr[3]));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            checkDone(splitStr[1], tasks.get(tasks.size() - 1));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            tasks.add(new Event(splitStr[2], splitStr[3], splitStr[4]));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            checkDone(splitStr[1], tasks.get(tasks.size() - 1));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        case \"DA\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            tasks.add(new DoAfterTasks(splitStr[2], splitStr[3]));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            checkDone(splitStr[1], tasks.get(tasks.size() - 1));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assert false : splitStr[0];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Mark any task loaded as done accordingly."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param splitStr saved as 1 to indicate done and 0 to indicate not done."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param task task to be marked."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private static void checkDone(String splitStr, Task task) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (splitStr.equals(\"1\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            task.setDone();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Saves the existing list of tasks to the filepath."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param tasklist existing list of tasks."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @throws IOException if unable to save file."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void saveFile(TaskList tasklist) throws IOException {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        FileWriter save \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        for (int i \u003d 0; i \u003c tasklist.size(); i++) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            save.write(tasklist.get(i).saveTask());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        save.close();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 111
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * Represents a type of task known as Deadline."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    // the Deadline subclass adds one field"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Initialises a Deadline."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * A Deadline consists of the task itself and a deadline to be met."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param item name of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param by deadline to be met."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    // the Deadline subclass has one constructor"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public Deadline(String item, String by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        super(item);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Prints a Deadline as a string to the user in a specific format."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return Deadline."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    // overrides toString method in Task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return \"[D][\" + \"/\" + \"] \" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return \"[D][\" + \"x\" + \"] \" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Saves a Deadline as a string to the file in a specific format."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return Deadline."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    // overrides saveTask method in Task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String saveTask() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return \"D\" + \" | \" + \"1\" + \" | \" + super.toString() + \" | \" + by + \"\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return \"D\" + \" | \" + \"0\" + \" | \" + super.toString() + \" | \" + by + \"\\n\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 54
    }
  },
  {
    "path": "src/main/java/duke/task/DoAfterTasks.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class DoAfterTasks extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private String after;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Initialises a DoAfterTasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * A DoAfterTasks consist of the task itself and the prerequisite task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param item name of the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param after name of the prerequisite task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public DoAfterTasks(String item, String after) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        super(item);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.after \u003d after;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Prints a DoAfterTasks as a string to the user in a specific format."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return DoAfterTasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    // overrides toString method in Task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return \"[DA][\" + \"/\" + \"] \" + super.toString() + \" (after: \" + after + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return \"[DA][\" + \"x\" + \"] \" + super.toString() + \" (after: \" + after + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Saves a DoAfterTasks as a string to the file in a specific format."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return DoAfterTasks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    // overrides saveTask method in Task"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String saveTask() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return \"DA\" + \" | \" + \"1\" + \" | \" + super.toString() + \" | \" + after + \"\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return \"DA\" + \" | \" + \"0\" + \" | \" + super.toString() + \" | \" + after + \"\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 49
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * Represents a type of task known as Event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    // the Event subclass adds two fields"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private String end;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Initialises an Event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * An Event consists of the task itself, starting time and ending time."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param item name of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param at starting time of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param end ending time of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    // the Event subclass has one constructor"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public Event(String item, String at, String end) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        super(item);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.end \u003d end;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Prints an Event as a string to the user in a specific format."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return Event."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    // overrides toString method in Task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return \"[E][\" + \"/\" + \"] \" + super.toString() + \" (at: \" + at + \" - \" + end + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return \"[E][\" + \"x\" + \"] \" + super.toString() + \" (at: \" + at + \" - \" + end + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Saves an Event as a string to the file in a specific format."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return Event."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    // overrides saveTask method in Task"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String saveTask() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return \"E\" + \" | \" + \"1\" + \" | \" + super.toString() + \" | \" + at + \" | \" + end + \"\\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return \"E\" + \" | \" + \"0\" + \" | \" + super.toString() + \" | \" + at + \" | \" + end + \"\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 57
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * Represents a Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String item;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Initialises a Task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * A Task consist of the task name and whether the task has been done."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param item name of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    // Constructor"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public Task(String item) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.item \u003d item;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Marks this Task as done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Returns the task name as a string."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return name of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return this.item;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Returns the task name as a string."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return name of the task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    // overridden method by Deadline, Event and Todo, define method so as not to make the Task class an abstract class."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String saveTask() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return this.item;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 49
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * Represents a list of tasks inputted by the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Returns a particular task with the requested index from this list of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param index task number."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return task with the requested index."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public static Task get(int index) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Returns the total number of tasks in this list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return total number of tasks"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public static int size() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Deletes a particular task with the requested index from this list of tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param index task number."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public static void remove(int index) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Adds a task to the list of tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param task task to be added."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public static void add(Task task) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 57
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * Represents a type of task known as Todo."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Initialises a Todo."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * A Todo consists of the task itself."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param item name of the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    // the Todo subclass has one constructor"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public Todo(String item) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        super(item);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Prints a Todo as a string to the user in a specific format."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return Todo."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    // overrides toString method in Task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return \"[T][\" + \"/\" + \"] \" + super.toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return \"[T][\" + \"x\" + \"] \" + super.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Saves a Todo as a string to the file in a specific format."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return Todo."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    // overrides saveTask method in Task"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String saveTask() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return \"T\" + \" | \" + \"1\" + \" | \" + super.toString() + \"\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return \"T\" + \" | \" + \"0\" + \" | \" + super.toString() + \"\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 49
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * Represents the user interface for the Duke application."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * Controls how outputs are shown to the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Initialises the UI class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Shows welcome message."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public static String showWelcome() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return \"Hello Mocha! \\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Shows an error to the user when no previously saved file is found."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public static String showLoadingError() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return \"File not found. Creating new list... \\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public static String showLoaded() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return \"File found. Your data has been loaded.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Prints farewell message to the user."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public static String sendBye() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 40
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "\u003c?import javafx.scene.effect.DropShadow?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" cache\u003d\"true\" cacheHint\u003d\"QUALITY\" cacheShape\u003d\"false\" centerShape\u003d\"false\" fillHeight\u003d\"false\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"400.0\" scaleShape\u003d\"false\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"1.7976931348623157E308\" style\u003d\"-fx-background-color: #f8b1b1; -fx-background-radius: 10; -fx-padding: 10; -fx-border-radius: 10; -fx-border-color: #fbf3f3; -fx-border-width: 3;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "         \u003ceffect\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            \u003cDropShadow /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "         \u003c/effect\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            \u003cFont name\u003d\"Lucida Bright Demibold\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "         \u003c/font\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 24
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "\u003c?import javafx.scene.effect.InnerShadow?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"600.0\" minWidth\u003d\"400.0\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Enter command here\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            \u003cFont name\u003d\"Lucida Bright Demibold Italic\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "         \u003ceffect\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            \u003cInnerShadow choke\u003d\"0.3\" color\u003d\"#3300ff\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "         \u003c/effect\u003e\u003c/TextField\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" defaultButton\u003d\"true\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" textAlignment\u003d\"CENTER\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            \u003cFont name\u003d\"Lucida Bright Demibold\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "         \u003ceffect\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            \u003cInnerShadow choke\u003d\"0.3\" color\u003d\"#3300ff\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "         \u003c/effect\u003e\u003c/Button\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-image: url(\u0027images/background.jpg\u0027); -fx-background-size: 100%;\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "         \u003ceffect\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            \u003cInnerShadow choke\u003d\"0.9\" color\u003d\"#3300ff\" /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "         \u003c/effect\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "   \u003ceffect\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "      \u003cInnerShadow choke\u003d\"0.5\" color\u003d\"#3300ff\" /\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "   \u003c/effect\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 43
    }
  },
  {
    "path": "src/test/java/duke/parser/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.SendTasksCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.DoneTaskCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.AddTodoCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.AddEventCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.DeleteTaskCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void parse_correctCommand_success() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        assertEquals(new ByeCommand().getClass(),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                new Parser(\"bye\").parse(\"bye\").getClass());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        assertEquals(new SendTasksCommand().getClass(),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                new Parser(\"list\").parse(\"list\").getClass());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        assertEquals(new DoneTaskCommand(\"2\").getClass(),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                new Parser(\"done 2\").parse(\"done 2\").getClass());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        assertEquals(new AddTodoCommand(\"project increments\").getClass(),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                new Parser(\"todo project increments\").parse(\"todo \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                        + \"project increments\").getClass());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        assertEquals(new AddDeadlineCommand(\"return book\", \"15/09/2019 1700\").getClass(),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                new Parser(\"deadline return book /by 15/09/2019 1700\").parse(\"deadline \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                        + \"return book /by 15/09/2019 1700\").getClass());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        assertEquals(new AddEventCommand(\"project meeting\", \"17/12/2019 1500\", \"1800\").getClass(),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                new Parser(\"event project meeting /at 17/12/2019 1500 /to \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                        + \"1800\").parse(\"event project meeting /at 17/12/2019 1500 /to 1800\").getClass());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        assertEquals(new DeleteTaskCommand(\"5\").getClass(),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                new Parser(\"delete 5\").parse(\"delete 5\").getClass());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        assertEquals(new FindCommand(\"book\").getClass(),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                new Parser(\"find book\").parse(\"find book\").getClass());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void parse_missingDone_exceptionThrown() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(new DoneTaskCommand(\"2\"),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    new Parser(\"done\").parse(\"done\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(\"OOPS!!! Please indicate a task index.\", e.toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void parse_missingTodo_exceptionThrown() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(new AddTodoCommand(\"project increments\"),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    new Parser(\"todo\").parse(\"todo\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(\"OOPS!!! The description of a todo cannot be empty.\", e.toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void parse_missingDeadline_exceptionThrown() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(new AddDeadlineCommand(\"return book\", \"15/09/2019 1700\"),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    new Parser(\"deadline\").parse(\"deadline\"));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(\"OOPS!!! The description of a deadline cannot be empty.\", e.toString());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void parse_missingDateTime1_exceptionThrown() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(new AddDeadlineCommand(\"return book\", \"15/09/2019 1700\"),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    new Parser(\"deadline return book\").parse(\"deadline return book\"));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(\"OOPS!!! Please provide a date and time.\", e.toString());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void parse_missingDateTime2_exceptionThrown() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(new AddEventCommand(\"project meeting\", \"17/12/2019 1500\", \"1800\"),"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    new Parser(\"event project meeting /at\").parse(\"event \""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                            + \"project meeting /at\"));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(\"OOPS!!! Please provide a date and time.\", e.toString());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void parse_missingEvent_exceptionThrown() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(new AddEventCommand(\"project meeting\", \"17/12/2019 1500\", \"1800\"),"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    new Parser(\"event\").parse(\"event\"));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(\"OOPS!!! The description of an event cannot be empty.\", e.toString());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void parse_missingStart_exceptionThrown() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(new AddEventCommand(\"project meeting\", \"17/12/2019 1500\", \"1800\"),"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    new Parser(\"event project meeting /at /to 1800\").parse(\"event \""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                            + \"project meeting /at /to 1800\"));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(\"OOPS!!! Please provide a start date and time.\", e.toString());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void parse_missingEnd_exceptionThrown() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(new AddEventCommand(\"project meeting\", \"17/12/2019 1500\", \"1800\"),"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    new Parser(\"event project meeting /at 17/12/2019 1500\").parse(\"event \""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                            + \"project meeting /at 17/12/2019 1500\"));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(\"OOPS!!! Please provide an ending time.\", e.toString());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void parse_missingDelete_exceptionThrown() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(new DeleteTaskCommand(\"5\"),"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    new Parser(\"delete\").parse(\"delete\"));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(\"OOPS!!! Please indicate a task index.\", e.toString());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void parse_invalidCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(new SendTasksCommand(), new Parser(\"blah\").parse(\"blah\"));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", e.toString());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void parse_missingKeyword_exceptionThrown() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(new FindCommand(\"book\"), new Parser(\"find\").parse(\"find\"));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(\"OOPS!!! Please indicate keyword to be searched.\", e.toString());"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void parse_missingCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(new ByeCommand(), new Parser(\"\").parse(\"\"));"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(\"Please talk to me, Mocha... \u003d(\", e.toString());"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 173
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "﻿Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " ____        _"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "|  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "       [T][?] borrow book"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     1.[T][?] borrow book"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "       [D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "       [E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "       [D][?] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     1.[T][?] borrow book"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     2.[D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     3.[E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     4.[D][?] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "       [D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     1.[T][?] borrow book"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     2.[D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     3.[E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     4.[D][?] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     ☹ OOPS!!! The description of a todo cannot be empty."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     1.[T][?] borrow book"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     2.[D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     3.[E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     4.[D][?] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Noted. I\u0027ve removed this task: "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "       [E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     1.[T][?] borrow book"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     2.[D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     3.[D][?] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 83
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "﻿"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "todo"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "blah"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 15
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 21
    }
  }
]
