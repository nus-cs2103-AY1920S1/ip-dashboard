[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "application {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "checkstyle{"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "run{"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    filter {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        includeTestsMatching \"myduke.*\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "jar {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    manifest {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        attributes \u0027Main-Class\u0027: \u0027myduke.Duke\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    from {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "version \u00270.1.0\u0027"
      }
    ],
    "authorContributionMap": {
      "wongsm7": 55
    }
  },
  {
    "path": "docs/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "T|1|dadsad "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "T|1|dsadsad "
      }
    ],
    "authorContributionMap": {
      "wongsm7": 2
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " * Command to add tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Constructor for AddCommand."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param task A task to be added to the task list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Execute the add command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param listOfTasks the list of tasks to be added to"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param ui The ui which displays the output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param storage to store the task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public void execute(TaskList listOfTasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        listOfTasks.addTask(task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        ui.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        ui.println(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        ui.println(\"Now you have \" + listOfTasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        storage.writeToFile(listOfTasks.getListOfTasks());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Method to know if it is an exit command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @return A boolean which states if it is an exit command"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongsm7": 39
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " * Abstract command class to be inherited."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Abstract method execute which executes commands."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public abstract void execute(TaskList listOfTasks, Ui ui, Storage storage) throws DukeException, IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Abstract boolean method to know if it is an exit command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongsm7": 16
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " * Deadline task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Constructor for Deadline."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param description representing the task description"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param by representing the time of the dateline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public Deadline(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        this.type \u003d \"D\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Constructor for Deadline."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param description representing the task description"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param done representing if the task is done"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param by representing the time of the deadline"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public Deadline(String description, String done, LocalDateTime by) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        this.type \u003d \"D\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Method to return the deadline time."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @return A String which represents the time"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        return by.format(OUT_DTF);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Override toString method."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(OUT_DTF) + \")\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongsm7": 48
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " * Command to delete a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Constructor for DeleteCommand."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param index of the task in the task list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Execute the delete command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param listOfTasks the list of tasks to be added to"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param ui The ui which displays the output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param storage to store the task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @throws DukeException if error"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public void execute(TaskList listOfTasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d listOfTasks.getSize()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            throw new DukeException(\"Invalid index\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        Task temp \u003d listOfTasks.removeTask(index);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        System.out.println(temp);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        System.out.println(\"Now you have \" + listOfTasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        storage.writeToFile(listOfTasks.getListOfTasks());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Method to know if it is an exit command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @return A boolean which states if it is an exit command"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongsm7": 44
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " * Command to set tasks as done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Constructor for DoneCommand."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param index of the task in the task list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Execute the delete command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param listOfTasks the list of tasks to be added to"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param ui The ui which displays the output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param storage to store the task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @throws DukeException, IOException if error"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public void execute(TaskList listOfTasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        if (index \u003c 0 || index \u003e listOfTasks.getSize() - 1) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            throw new DukeException(\"Invalid task number\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        listOfTasks.getListOfTasks().get(index).setDone();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        storage.writeToFile(listOfTasks.getListOfTasks());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        ui.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        ui.println(listOfTasks.getListOfTasks().get(index));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Method to know if it is an exit command."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @return A boolean which states if it is an exit command"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongsm7": 42
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " * A program that keeps track of a person\u0027s tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    private TaskList listOfTasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Constructor for Duke."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param filePath a String representing the file path"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        listOfTasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Method to run the program."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                c.execute(listOfTasks, ui, storage);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Main method."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        new Duke(\"D:\\\\CS2103T\\\\duke\\\\docs\\\\duke.txt\").run();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongsm7": 44,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " * Exceptions for Duke errors."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Constructor for DukeException."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Override the toString method."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        return \"☹ OOPS!!! \" + getMessage();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongsm7": 21
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " * Event type of task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Constructor for Event."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param description representing the task description"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param at representing the location"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        this.type \u003d \"E\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Constructor for Deadline."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param description representing the task description"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param done representing if the task is done"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param at representing the place"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public Event(String description, String done, String at) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        this.type \u003d \"E\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Method to return the location."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @return A String which represents the location"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Override toString method."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongsm7": 45
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " * Command to exit program."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Execute the exit command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param listOfTasks the list of tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param ui The ui which displays the output"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param storage to store the task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public void execute(TaskList listOfTasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        ui.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Method to know if it is an exit command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @return A boolean which states if it is an exit command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongsm7": 24
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " * Command to find tasks by keyword."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    private String find;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Constructor for DeleteCommand."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param find representing a string containing the keyword"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public FindCommand(String find) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        this.find \u003d find;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Execute the find command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param listOfTasks the list of tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param ui The ui which displays the output"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param storage the place that stores the tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @throws DukeException, IOException if error"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public void execute(TaskList listOfTasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        ui.println(\" Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        for (Task t : listOfTasks.getListOfTasks()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            if(t.getDescription().contains(find)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                ui.println(t);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        if (count \u003d\u003d 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            throw new DukeException(\"No matching tasks found\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Method to know if it is an exit command."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @return A boolean which states if it is an exit command"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongsm7": 47
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " * Command to view the task list."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Execute the list command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param listOfTasks the list of tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param ui The ui which displays the output"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param storage to store the task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @throws DukeException if error"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public void execute(TaskList listOfTasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        if(listOfTasks.getSize() \u003c\u003d 0){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            throw new DukeException(\"No tasks in the list\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        for (Task t : listOfTasks.getListOfTasks()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            ui.println(count + \". \" + t);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Method to know if it is an exit command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @return A boolean which states if it is an exit command"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongsm7": 32
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " * Deals with making sense of the user command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public static DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Method to parse input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param input which is the input string"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @return A Command"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        String[] temp \u003d input.split(\" \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        if (temp[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            if (temp.length \u003c 2) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            String temp2 \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            for (int i \u003d 1; i \u003c temp.length; i++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                temp2 \u003d temp2 + temp[i] + \" \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            return new AddCommand(new Todo(temp2));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        } else if (temp[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            if (temp.length \u003c\u003d 2) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                throw new DukeException(\"The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            String temp2 \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            String time \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            int index \u003d 0;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            for (int i \u003d 1; i \u003c temp.length; i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                if (temp[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                    index \u003d i + 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                    temp2 \u003d temp2 + temp[i] + \" \";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            for (int j \u003d index; j \u003c temp.length; j++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                time \u003d time + temp[j] + \" \";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            return new AddCommand(new Event(temp2, time));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        } else if (temp[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            if (temp.length \u003c\u003d 2) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            String temp2 \u003d \"\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            String time \u003d \"\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            int index \u003d 0;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            for (int i \u003d 1; i \u003c temp.length; i++) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                if (temp[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                    index \u003d i + 1;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                    temp2 \u003d temp2 + temp[i] + \" \";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            for (int j \u003d index; j \u003c temp.length; j++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                time \u003d time + temp[j] + \" \";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            LocalDateTime dateTime \u003d null;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                dateTime \u003d LocalDateTime.parse(time.trim(), dtf);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                throw new DukeException(\"Please enter deadline in dd/mm/yyyy HHmm format\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            return new AddCommand(new Deadline(temp2, dateTime));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        } else if (temp[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        } else if (temp[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            if (temp.length \u003e 2) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                throw new DukeException(\"Invalid index given\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            return new DoneCommand(Integer.parseInt(temp[1]) - 1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        } else if (temp[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        } else if (temp[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            if (temp.length \u003e 2) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                throw new DukeException(\"Invalid index given\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            return new DeleteCommand(Integer.parseInt(temp[1]) - 1);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        } else if (temp[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            if (temp.length \u003e 2) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                throw new DukeException(\"Invalid keyword given\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            return new FindCommand(temp[1]);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "}"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wongsm7": 96
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " * Takes care of storing the tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public static DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Constructor for Storage."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public Storage(String filePath){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Method to load tasks from the file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @return A List\u003cTask\u003e which has tasks loaded from the file"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public List\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        List\u003cTask\u003e tempList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            Scanner fileScanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            while (fileScanner.hasNextLine()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                String[] token \u003d fileScanner.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                if (token.length \u003c\u003d 2) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                    throw new DukeException(\"Invalid line\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                if (token[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                    tempList.add(new Todo(token[2], token[1]));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                } else if (token[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                    tempList.add(new Deadline(token[2], token[1], LocalDateTime.parse(token[3], dtf)));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                } else if (token[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                    tempList.add(new Event(token[2], token[1], token[3]));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                    throw new DukeException(\"Invalid task type\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            return tempList;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        catch(DukeException de){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            System.out.println(de);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        catch(IOException ie){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            System.out.println(\"IOException\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        return tempList;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Method to write to the file."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param tasks a list of tasks to be written to the file"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public void writeToFile(List\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        PrintWriter pw \u003d new PrintWriter(file);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            if (t.getType().equals(\"T\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                output +\u003d t.getType() + \"|\" + t.getIsDone() + \"|\" + t.getDescription() + \"\\n\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            } else if (t.getType().equals(\"E\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                output +\u003d t.getType() + \"|\" + t.getIsDone() + \"|\" + t.getDescription() + \"|\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                        + ((Event) t).getAt() + \"\\n\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            } else if (t.getType().equals(\"D\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                output +\u003d t.getType() + \"|\" + t.getIsDone() + \"|\" + t.getDescription() + \"|\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                        + ((Deadline) t).getBy() + \"\\n\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        pw.write(output);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        pw.close();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongsm7": 83
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " * Parent class for task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    protected final DateTimeFormatter OUT_DTF \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Constructor for Task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param description The task description"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Constructor for Task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param description The task description"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param done representing if the task is done"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public Task(String description, String done) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        if (done.equals(\"1\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            this.isDone \u003d false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Method to return tick of X symbols."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Method to set a task done."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Method to get the type of task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @return A string representing the type of the task"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Method to return a string representing if the task is done"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @return A string 0 or 1 representing if the task is done"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public String getIsDone() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        if(isDone){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            return \"1\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            return \"0\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Method to return the description of the task."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @return A string representing the description"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Override the toString method."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        return getStatusIcon() + \" \" + description;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongsm7": 85
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " * Contains the task list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    private List\u003cTask\u003e listOfTasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Constructor for TaskList."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        this.listOfTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Constructor for TaskList."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        this.listOfTasks \u003d taskList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public Task removeTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d listOfTasks.size()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "            throw new DukeException(\"Invalid index\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        return listOfTasks.remove(index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Method to add a task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param task to be added"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        listOfTasks.add(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Method to get the list of tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @return A list of tasks"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public List\u003cTask\u003e getListOfTasks() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        return listOfTasks;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Method to get size of the list of tasks."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @return An int representing the size"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        return listOfTasks.size();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongsm7": 54
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " * Another type of task, todo."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Constructor for Todo."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param description of the task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        this.type \u003d \"T\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Constructor for Todo."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param description of the task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param done representing if the task is done"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public Todo(String description, String done){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        this.type \u003d \"T\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Override the toString method."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongsm7": 32
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " * Takes care of the Ui."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Constructor for Ui."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Method to read the next line."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @return A string representing the next line"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Method to print out a line."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Method to display error."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param message which is the error message"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Method to display the welcome message."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Method to print a message."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param message to be printed"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public void println(String message) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Method to print a task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * @param task to be printed"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public void println(Task task){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongsm7": 69
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " * Test Class for Duke Class"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongsm7": 13
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " * Test class for testing TaskList class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    private TaskList listOfTasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Tests addTaskTest method of TaskList class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public void addTaskTest() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        listOfTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        listOfTasks.addTask(new Todo(\"todo buy bread\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        assertEquals(\"todo buy bread\", listOfTasks.getListOfTasks().get(0).getDescription());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        assertEquals(1, listOfTasks.getSize());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Tests removeTask method of TaskList class."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public void removeTaskTest() throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        listOfTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        listOfTasks.addTask(new Todo(\"todo buy bread\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        listOfTasks.addTask(new Todo(\"todo buy butter\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        listOfTasks.removeTask(1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        assertEquals(1, listOfTasks.getSize());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        assertEquals(\"todo buy bread\", listOfTasks.getListOfTasks().get(0).getDescription());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongsm7": 36
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " * Test class for testing Task class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongsm7"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    private TaskList listOfTasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Tests setDone method of Task class."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public void setDoneTest() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        Task t \u003d new Task(\"buy book\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        t.setDone();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        assertEquals(\"1\", t.getIsDone());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Tests getDescription method of Task class."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public void getDescriptionTest() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        Task t \u003d new Task(\"buy book\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        assertEquals(\"buy book\", t.getDescription());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongsm7"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     * Tests getType method of Task class."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    public void getTypeTest() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        Todo t  \u003d new Todo(\"buy book\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        assertEquals(\"T\", t.getType());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        Event e \u003d new Event(\"buy book\", \"bookstore\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        assertEquals(\"E\", e.getType());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        Deadline d \u003d new Deadline(\"buy book\", LocalDateTime.parse(\"12/09/2019 1800\", dtf));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "        assertEquals(\"D\", d.getType());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wongsm7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongsm7": 48
    }
  }
]
