[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "damithc"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "damithc": 1,
      "-": 38
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 16,
      "ooimingsheng": 21
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.command.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a duke reminder system with a particular storage filepath."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param filePath the file path to load and store task data."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Initiates the duke reminder system and parses commands to update the reminder list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * The main class to initialize and drive the program."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param args parameters recieved from the command line"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        String filePath \u003d \"C:\\\\Users\\\\Ooi Ming Sheng\\\\Desktop\\\\CS2103\\\\Individual project\\\\duke\\\\data\\\\duke.txt\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        new Duke(filePath).run();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "ooimingsheng": 58
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a command to the system to add a reminder when executed."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param taskDescription the description of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param taskType the type of task to be added to the record."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public AddCommand(String taskDescription, String taskType) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Adds a task to the system."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param tasks the task list system involved in the command execution."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param ui the user interface system involved in the command execution."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param storage the storage system involved in the command execution."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        Task task \u003d taskType !\u003d null ? tasks.addTask(taskDescription, taskType) : tasks.addTask(taskDescription);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        ui.showAddMessage(task, tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 35
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a command to the system to terminate when executed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        super(true);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Terminates the system."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param tasks the task list system involved in the command execution."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param ui the user interface system involved in the command execution."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param storage the storage system involved in the command execution."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        storage.saveTasks((tasks.getTaskList()), ui);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        ui.showGoodbye();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 27
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    protected String[] params;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    protected String action;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Command has a private constructor to prevent the object from being created directly."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private Command() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a command to the system."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param isExit whether the system should terminate after the current command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    protected Command(boolean isExit) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.isExit \u003d isExit;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Returns whether the system should terminate after the current command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return whether the system should terminate after the current command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Does nothing."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param tasks the task list system involved in the command execution."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param ui the user interface system involved in the command execution."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param storage the storage system involved in the command execution."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 44
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private int taskNoToBeRemoved;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a command to the system to delete the task at taskNoToBeRemoved position"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * (one-based index) in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param taskNoToBeRemoved the one-based index position of the task in the task list to be deleted"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public DeleteCommand(int taskNoToBeRemoved) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.taskNoToBeRemoved \u003d taskNoToBeRemoved;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Delete the task at taskNoToBeRemoved position (one-based index) in the task list of the system."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param tasks the task list system involved in the command execution."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param ui the user interface system involved in the command execution."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param storage the storage system involved in the command execution."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        Task task \u003d tasks.removeTask(taskNoToBeRemoved);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        ui.showDeleteMessage(task, tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 33
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private int taskNoToBeChecked;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a command to the system to mark the task at taskNoToBeRemoved position"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * (one-based index) in the list as completed."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param taskNoToBeChecked one-based index position of the task in the task list to be marked as completed."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public DoneCommand(int taskNoToBeChecked) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.taskNoToBeChecked \u003d taskNoToBeChecked;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Marks the task at taskNoToBeRemoved position (one-based index) in the task list of the system as completed."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param tasks the task list system involved in the command execution."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param ui the user interface system involved in the command execution."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param storage the storage system involved in the command execution."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        Task task \u003d tasks.checkOffTask(taskNoToBeChecked);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        ui.showDoneMessage(task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 32
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private String substring;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a command to find tasks with descriptions that contain the substring."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param substring the substring to be searched in the list of task descriptions."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public FindCommand(String substring) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.substring \u003d substring;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Prints a list of tasks that contain the substring in their task descriptions."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param tasks the task list system involved in the command execution."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param ui the user interface system involved in the command execution."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param storage the storage system involved in the command execution."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        ui.showTaskList(tasks.findTasks(substring));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 30
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a command to the system to list all the tasks in the system."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * List all the tasks in the system."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param tasks the task list system involved in the command execution."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param ui the user interface system involved in the command execution."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param storage the storage system involved in the command execution."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        ui.showTaskList(tasks.getTaskList());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 26
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Parser has a private constructor to prevent the object from being created directly."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private Parser() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Returns the appropriate command depending on the string inputted to the system."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param input the input string read by the system."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return the command the system needs to execute according to the input received by the system."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        int taskNo;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        String taskType;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        String taskDescription;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        String[] params \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        String action \u003d params[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        switch (action) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            String substring \u003d params[1];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return new FindCommand(substring);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            taskNo \u003d Integer.parseInt(params[1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return new DeleteCommand(taskNo);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            taskNo \u003d Integer.parseInt(params[1]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return new DoneCommand(taskNo);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            taskType \u003d params[0];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            if (params.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a \" + taskType + \" cannot be empty.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            taskDescription \u003d params[1];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return new AddCommand(taskDescription, taskType);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 52
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a uncompleted task with a deadline."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param by the deadline of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.by \u003d DukeDateFormatter.convertStringToDateIfPossible(by);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a task with a deadline."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param isDone whether the task has been completed."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param by the deadline of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public Deadline(String description, boolean isDone, String by) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Returns the deadline of the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return the deadline of the task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 40
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/DukeDateFormatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "public class DukeDateFormatter {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * DukeDateFormatter has a private constructor to prevent the object from being created directly."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private DukeDateFormatter() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Takes a string and tries to convert it into a date if possible."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param str the string that is attempted to be coverted into a date."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return date format of the string if the string is of a \"d/M/yyyy HHmm\" format and the original string otherwise."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public static String convertStringToDateIfPossible(String str) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            SimpleDateFormat format \u003d new SimpleDateFormat(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            Date date \u003d format.parse(str);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            SimpleDateFormat formatter \u003d new SimpleDateFormat(\"d\u0027suffix\u0027 \u0027of\u0027 MMMM yyyy, h.mma\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            LocalDate localDate \u003d date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return formatter.format(date)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                    .replace(\"suffix\", getDayOfMonthSuffix(localDate.getDayOfMonth()))"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                    .replace(\".00\", \"\")"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                    .replace(\"AM\", \"am\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                    .replace(\"PM\", \"pm\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        } catch (ParseException exception) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return str;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Returns the suffix of the integer n if it is between 1 and 31 and the empty string otherwise."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param n the integer value of the month (i.e. between 1 and 31)."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return the suffix of the integer n if it is between 1 and 31 and the empty string otherwise."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private static String getDayOfMonthSuffix(final int n) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        if (!(n \u003e\u003d 1 \u0026\u0026 n \u003c\u003d 31)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        if (n \u003e\u003d 11 \u0026\u0026 n \u003c\u003d 13) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return \"th\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        switch (n % 10) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return \"st\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return \"nd\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return \"rd\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return \"th\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 61
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a duke exception with a message."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param msg the error message."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a duke exception."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 19
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a uncompleted task with a venue."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param at the venue of the event task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a uncompleted task with a venue."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param isDone whether the task has been completed."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param at the venue of the event task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public Event(String description, boolean isDone, String at) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Returns the event venue of the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return the event venue of the task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public String getEventVenue() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 40
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public static String DIVIDER \u003d \" XXXDIVIDERXXX \";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a task storage system."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param filePath the file path to save and load task data of the system."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Loads the task data from the file at the file path if one exists."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return a list of the tasks loaded from the file located at the file path if one exists."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                String[] taskParams \u003d line.split(Storage.DIVIDER);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                Task task \u003d Task.taskFactory(taskParams);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                taskList.add(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        } catch (IOException ioException) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            throw new DukeException(\"File to be loaded could not be found.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Saves the task list to the file path or otherwise show a saving error."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param taskList the list of tasks to be saved to the file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param ui the user interface to show the saving error if there is an error when saving."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void saveTasks(List\u003cTask\u003e taskList, Ui ui) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        try (FileWriter writer \u003d new FileWriter(filePath)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                if (task instanceof ToDo) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                    writer.write(\"T\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                    writer.write(\"D\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                    writer.write(\"E\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                writer.write(DIVIDER + task.hasBeenDone() + DIVIDER + task.getDescription());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                    writer.write(DIVIDER + ((Deadline) task).getDeadline());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                    writer.write(DIVIDER + ((Event) task).getEventVenue());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                writer.write(\"\\n\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        } catch (IOException ioException) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            ui.showSavingError();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 71
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Factory that creates the appropriate task according to the function parameters."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param taskType the type of task to be created."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return an uncompleted task according to the taskType and description"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public static Task taskFactory(String description, String taskType) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        if (taskType.equals(\"todo\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return new ToDo(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        } else if (taskType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            String[] str \u003d description.split(\" /by \", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            String taskDescription \u003d str[0];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            String by \u003d str[1];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return new Deadline(taskDescription, by);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        } else if (taskType.equals(\"event\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            String[] str \u003d description.split(\" /at \", 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            String taskDescription \u003d str[0];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            String at \u003d str[1];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return new Event(taskDescription, at);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Factory that creates the appropriate task according to the function parameters."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param taskParams an array of the parameters of the task to be created of the following format:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     *      [taskType, isDone, taskDescription, by/at ?]."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return an uncompleted task according to the task params."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public static Task taskFactory(String[] taskParams) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        String taskType \u003d taskParams[0];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        boolean isDone \u003d taskParams[1].equals(\"true\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        String taskDescription \u003d taskParams[2];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return new ToDo(taskDescription, isDone);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        } else if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            String by \u003d taskParams[3];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return new Deadline(taskDescription, isDone, by);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        } else if (taskType.equals(\"E\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            String at \u003d taskParams[3];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return new Event(taskDescription, isDone, at);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor of a task."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor of a task."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param isDone whether the task has been completed."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return the description of the task."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Returns whether the task has been completed."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return whether the task has been completed."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public Boolean hasBeenDone() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Returns a check icon if the task has been completed and a cross otherwise."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return a check icon if the task has been completed and a cross otherwise."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Marks the task as completed."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void checkOff() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Returns whether the task description contains the substring."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return whether the task description contains the substring."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public boolean descriptionContainsSubstr(String substr) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return description.contains(substr);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 120
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private static final String INDENT \u003d \"  \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a task list system with a list of tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param taskList the list of tasks the task list system is initialized with."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a task list system with an empty list of tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Returns the list of tasks from the task list system."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return the list of tasks from the task list system."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public List\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Returns the size of the list of tasks from the task list system."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return the size of the list of tasks from the task list system."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public int getTaskListSize() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Adds a To Do task to the task list system and returns it."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param description the description of the task to be added to the task system."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return the \"To Do\" task that was added to the task list system."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public Task addTask(String description) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return addTask(description, \"todo\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Adds a task of stipulated type to the task list system and returns it."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param description the description of the task to be added to the task system."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param taskType the task type of the task to be added to the task system."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return the \"To Do\" task that was added to the task list system."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public Task addTask(String description, String taskType) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        Task task \u003d Task.taskFactory(description, taskType);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Removes a task at the one-based position of taskNo from the list of tasks."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param taskNo the one-based index of the task to be removed from the task list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return the task that was removed from the task list."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public Task removeTask(int taskNo) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return taskList.remove(taskNo - 1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Marks a task as completed at the one-based position of taskNo from the list of tasks."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param taskNo the one-based index of the task to be removed from the task list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return the task that was marked as completed from the task list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public Task checkOffTask(int taskNo) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        Task task \u003d taskList.get(taskNo - 1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        task.checkOff();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Returns a list of tasks from the tasks list whose description contains the stipulated substring."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param subStr the substring to be found in the task descriptions."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return a list of tasks from the tasks list whose description contains the stipulated substring."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public List\u003cTask\u003e findTasks(String subStr) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        List\u003cTask\u003e tasksWithSubstr \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            if (task.descriptionContainsSubstr(subStr)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                tasksWithSubstr.add(task);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return tasksWithSubstr;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 97
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a uncompleted task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a uncompleted task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param isDone whether the task has been completed."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 26
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private static final String INDENT \u003d \"     \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private static final String SMALL_INDENT \u003d \"  \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a user interface to recieve input and return appropriate output."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Print loading error."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        System.out.println(INDENT + \"No task data found.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Print saving error."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void showSavingError() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        System.out.println(INDENT + \"Task data could not be saved.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Print saving error."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param errorMessage the error message to be printed."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        System.out.println(INDENT + errorMessage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Print welcome message."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        System.out.println(INDENT + \"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        System.out.println(INDENT + \"What can I do for you?\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Print goodbye message."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void showGoodbye() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        System.out.println(INDENT + \"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Print all tasks in the task list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param  taskList the list of tasks to be printed."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void showTaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        System.out.println(INDENT + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            System.out.println(INDENT + counter + \".\" + task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Print out a message to state that the task has been completed."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param task the task that has been completed."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void showDoneMessage(Task task) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        System.out.println(INDENT + \"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        System.out.println(INDENT + SMALL_INDENT + task);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Print out a message to state that the task has been added to the task list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param task the task that has been added."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param taskList the task list that the task has been added to."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void showAddMessage(Task task, TaskList taskList)  {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        System.out.println(INDENT + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        System.out.println(INDENT + SMALL_INDENT + task);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        System.out.println(INDENT + \"Now you have \" + taskList.getTaskListSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Print out a message to state that the task has been deleted from the task list."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param task the task that has been deleted."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param taskList the task list that the task has been deleted from."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void showDeleteMessage(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        System.out.println(INDENT + \"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        System.out.println(INDENT + SMALL_INDENT + task);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        System.out.println(INDENT + \"Now you have \" + taskList.getTaskListSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Read next line of input and return it as a string."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return next line of input as a string."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Print a line."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 114
    }
  },
  {
    "path": "src/test/java/seedu/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        assertEquals(\"[D][\\u2718] return book (by: Sunday)\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                     new Deadline(\"return book\", \"Sunday\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        assertEquals(\"[D][\\u2713] return book (by: Sunday)\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                     new Deadline(\"return book\", true, \"Sunday\").toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void testGetDeadline() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        assertEquals(\"Friday\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                new Deadline(\"return book\", \"Friday\").getDeadline());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        assertEquals(\"Later\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                new Deadline(\"returnsssss book\", true, \"Later\").getDeadline());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 23
    }
  },
  {
    "path": "src/test/java/seedu/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        assertEquals(\"[E][\\u2718] party (at: my house)\","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                new Event(\"party\", \"my house\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        assertEquals(\"[E][\\u2713] party (at: my house)\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                new Event(\"party\", true, \"my house\").toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void testGetVenue() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        assertEquals(\"tonight\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                new Event(\"return book\", \"tonight\").getEventVenue());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        assertEquals(\"CC\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                new Event(\"returnsssss book\", true, \"CC\").getEventVenue());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 22
    }
  },
  {
    "path": "src/test/java/seedu/duke/task/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "class ToDoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        assertEquals(\"[T][\\u2718] return book\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                new ToDo(\"return book\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        assertEquals(\"[T][\\u2713] return book\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                new ToDo(\"return book\", true).toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        assertEquals(\"[T][\\u2718] return book\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                new ToDo(\"return book\", false).toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 18
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 3
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "  [D][✗] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "1.[D][✗] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "  [D][✓] return book (by: Sunday)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "1.[D][✓] do homework (by: no idea :-p)\t"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java ..\\src\\main\\java\\Deadline.java ..\\src\\main\\java\\Event.java ..\\src\\main\\java\\Task.java ..\\src\\main\\java\\ToDo.java ..\\src\\main\\java\\ToDoList.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 21
    }
  },
  {
    "path": "tutorials/textUiTestingTutorial.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "damithc"
        },
        "content": "# Text UI Testing Tutorial"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "damithc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "damithc"
        },
        "content": "1. Create a folder `[project root]\\text-ui-test`"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "damithc"
        },
        "content": "1. Add a `runtest.bat` (if you are on Windows) or `runtest.sh` (if you are on a *nix OS) into the folder, containing the script below.\u003cbr\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "damithc"
        },
        "content": "  `runtest.bat`:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "damithc"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "damithc"
        },
        "content": "   @ECHO OFF"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "damithc"
        },
        "content": "   "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "damithc"
        },
        "content": "   REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "damithc"
        },
        "content": "   if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "damithc"
        },
        "content": "   "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "damithc"
        },
        "content": "   REM delete output from previous run"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "damithc"
        },
        "content": "   del ACTUAL.TXT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "damithc"
        },
        "content": "   "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "damithc"
        },
        "content": "   REM compile the code into the bin folder"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "damithc"
        },
        "content": "   javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "damithc"
        },
        "content": "   IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "damithc"
        },
        "content": "       echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "damithc"
        },
        "content": "       exit /b 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "damithc"
        },
        "content": "   )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "damithc"
        },
        "content": "   REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "damithc"
        },
        "content": "   "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "damithc"
        },
        "content": "   REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "damithc"
        },
        "content": "   java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "damithc"
        },
        "content": "   "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "damithc"
        },
        "content": "   REM compare the output to the expected output"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "damithc"
        },
        "content": "   FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "damithc"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "damithc"
        },
        "content": "   "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "damithc"
        },
        "content": "   `runtest.sh`:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "damithc"
        },
        "content": "   ```shell"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "damithc"
        },
        "content": "   #!/usr/bin/env bash"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "damithc"
        },
        "content": "   "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "damithc"
        },
        "content": "   # create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "damithc"
        },
        "content": "   if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "damithc"
        },
        "content": "   then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "damithc"
        },
        "content": "       mkdir ../bin"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "damithc"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "damithc"
        },
        "content": "   "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "damithc"
        },
        "content": "   # delete output from previous run"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "damithc"
        },
        "content": "   if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "damithc"
        },
        "content": "   then"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "damithc"
        },
        "content": "       rm ACTUAL.TXT"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "damithc"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "damithc"
        },
        "content": "   "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "damithc"
        },
        "content": "   # compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "damithc"
        },
        "content": "   if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "damithc"
        },
        "content": "   then"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "damithc"
        },
        "content": "       echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "damithc"
        },
        "content": "       exit 1"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "damithc"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "damithc"
        },
        "content": "   "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "damithc"
        },
        "content": "   # run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "damithc"
        },
        "content": "   java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "damithc"
        },
        "content": "   "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "damithc"
        },
        "content": "   # compare the output to the expected output"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "damithc"
        },
        "content": "   diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "damithc"
        },
        "content": "   if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "damithc"
        },
        "content": "   then"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "damithc"
        },
        "content": "       echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "damithc"
        },
        "content": "       exit 0"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "damithc"
        },
        "content": "   else"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "damithc"
        },
        "content": "       echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "damithc"
        },
        "content": "       exit 1"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "damithc"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "damithc"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "damithc"
        },
        "content": "1. Update the `javac` and `java` commands in the script to match the name/location of your main class."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "damithc"
        },
        "content": "1. Add an `EXPECTED.txt` to the same folder, containing the expected output."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "damithc"
        },
        "content": "1. Add an `input.txt` containing the input commands."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "damithc"
        },
        "content": "1. Run the `.bat`/`.sh` file to execute the test."
      }
    ],
    "authorContributionMap": {
      "damithc": 70
    }
  }
]
