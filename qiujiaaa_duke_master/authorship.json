[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "run {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 19,
      "-": 14
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "T 1 do tutorials"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "E 1 orbital splashdown | 28/09/2019 1830"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "D 1 ip | 28/08/2019 2359"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "T 1 lecture "
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 4
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Constructor. Creates Ui, Storage and TaskList object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * If the file does not exist, an error will be shown."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param filePath Directory to the data file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        storage \u003d new Storage(filePath, ui);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Shows the welcome message and gets Ui to show the current tasks in the list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Reads in the command line by line, parse it and executes it."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        ui.showWelcome(taskList.getTasks());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                c.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                storage.updateData(taskList.getTasks());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 60,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    String command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Constructor to create an AddCommand object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param command User\u0027s command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public AddCommand(String command) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Get the TaskList object to add the task into the list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param taskList TaskList object containing the current tasks list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param ui The Ui object we are currently using."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param storage The Storage object we are currently using."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        taskList.addTask(command, ui);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Checks if the command is an ExitCommand."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 43
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Execute the corresponding commands."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param taskList TaskList object containing the current tasks list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param ui The Ui object we are currently using."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param storage The Storage object we are currently using."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public abstract void execute(TaskList taskList, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Checks if the command is an ExitCommand."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return True if it is an ExitCommand, false if otherwise."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 27
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    String command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Constructor to create an DeleteCommand object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param command User\u0027s command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public DeleteCommand(String command) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Get the TaskList object to delete the task in the list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param taskList TaskList object containing the current tasks list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param ui The Ui object we are currently using."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param storage The Storage object we are currently using."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        taskList.deleteTask(command, ui);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Checks if the command is an ExitCommand."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 43
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    String command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Constructor to create an DoneCommand object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param command User\u0027s command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public DoneCommand(String command) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Get the TaskList object to mark the task in the list as done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param taskList TaskList object containing the current tasks list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param ui The Ui object we are currently using."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param storage The Storage object we are currently using."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        taskList.doneTask(command, ui);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Checks if the command is an ExitCommand."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 43
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Exit the chatbot. Get Ui to show the exit message."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param taskList TaskList object containing the current tasks list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param ui The Ui object we are currently using."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param storage The Storage object we are currently using."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        ui.showExit();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Checks if the command is an ExitCommand."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return True."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 32
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    String keyword;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Constructor to create a FindCommand object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param keyword The user\u0027s search keyword."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Get Ui to print the matching tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param taskList The TaskList object containing the list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param ui The Ui object we are currently using."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param storage The Storage object we are currently using."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        ui.printMatchingTasks(taskList.getTasks(), keyword);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Check if it is a ExitCommand object."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 43
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Get the TaskList object to list out all the tasks in the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param taskList TaskList object containing the current tasks list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param ui The Ui object we are currently using."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param storage The Storage object we are currently using."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        ui.printTasks(taskList.getTasks());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Checks if the command is an ExitCommand."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 32
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class DukeException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    String message;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Constructor to create a DukeException object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param message The error message for this exception."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Gets the error message."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return The error message of the exception."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 26
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Parses the user\u0027s commands."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param command User\u0027s command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return Command object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @throws DukeException If the input cannot be recognised."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public static Command parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        if (command.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } else if (command.equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } else if (command.length() \u003e\u003d 4 \u0026\u0026 command.substring(0, 4).equalsIgnoreCase(\"done\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            return new DoneCommand(command);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } else if (command.length() \u003e\u003d 6 \u0026\u0026 command.substring(0, 6).equalsIgnoreCase(\"delete\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            return new DeleteCommand(command);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } else if (command.length() \u003e\u003d 4 \u0026\u0026 command.substring(0, 4).equalsIgnoreCase(\"find\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            return new FindCommand(command);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } else {  // add task or wrong command"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            String[] temp \u003d command.split(\" \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            if (temp[0].equalsIgnoreCase(\"deadline\")"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    || temp[0].equalsIgnoreCase(\"event\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    || temp[0].equalsIgnoreCase(\"todo\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                return new AddCommand(command);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                throw new DukeException(\"\\tOOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 44
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    Ui ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Constructor to create a Storage object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param filePath The directory of our database."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param ui The Ui object we are currently using."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public Storage(String filePath, Ui ui) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Gets the current task list in the database if any."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return Returns a list of tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public List\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        List\u003cTask\u003e list \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            // read existing tasks into the list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                String description \u003d line.substring(4);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                if (line.substring(0, 1).equals(\"T\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    task \u003d new Todo(description);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    String[] temp \u003d description.split(\" \\\\| \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    if (line.substring(0, 1).equals(\"D\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                        task \u003d new Deadline(temp[0], temp[1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                        task \u003d new Event(temp[0], temp[1]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                if (line.substring(2, 3).equals(\"1\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                list.add(task);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            ui.showError(\"Data file does not exist.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Updates the database."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param list The most updated list of tasks."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void updateData(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            for (Task task: list) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                if (task instanceof Todo) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    sb.append(\"T \");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    sb.append(\"D \");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    sb.append(\"E \");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                if (task.isCompleted()) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    sb.append(\"1 \");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    sb.append(\"0 \");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                sb.append(task.getDescription());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                fw.write(sb.toString() + \"\\n\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            ui.showError(\"Data file does not exist.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 109
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    protected int date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    protected int month;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    protected int year;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    protected int time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Constructor to create the Deadline object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param description The task description."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param by The date and time it is due."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @throws DukeException If the input format is incorrect."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            date \u003d Integer.valueOf(by.substring(0, 2));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            month \u003d Integer.valueOf(by.substring(3, 5));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            year \u003d Integer.valueOf(by.substring(6, 10));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            String[] temp \u003d by.split(\" \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            time \u003d Integer.valueOf(temp[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw new DukeException(\"\\t☹ OOPS!!! Wrong input format. \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    + \"\\\"Deadline \u003cdescription\u003e /by \u003cDD/MM/YYYY\u003e \u003cXX:XX\u003e\\\"\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw new DukeException(\"\\t☹ OOPS!!! Wrong input format. \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    + \"\\\"Deadline \u003cdescription\u003e /by \u003cDD/MM/YYYY\u003e \u003cXX:XX\u003e\\\"\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Gets the description of the Deadline task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return The description of the Deadline task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return super.description + \" | \" + by;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * The proper representation of the task, with [D], icon and description."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return The output representation of the Deadline task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 59
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    int date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    int month;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    int year;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    int time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Constructor to create the Event object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param description The task description."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param at The date and time it is due."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @throws DukeException If the input format is incorrect."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            date \u003d Integer.valueOf(at.substring(0, 2));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            month \u003d Integer.valueOf(at.substring(3, 5));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            year \u003d Integer.valueOf(at.substring(6, 10));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            String[] temp \u003d at.split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            time \u003d Integer.valueOf(temp[1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw new DukeException(\"\\t☹ OOPS!!! Wrong input format. \\\"Event \u003cdescription\u003e /at \u003cDD/MM/YYYY\u003e \u003cXX:XX\u003e\\\"\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw new DukeException(\"\\t☹ OOPS!!! Wrong input format. \\\"Event \u003cdescription\u003e /at \u003cDD/MM/YYYY\u003e \u003cXX:XX\u003e\\\"\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Gets the description of the Event task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return The description of the Event task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return super.description + \" | \" + at;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * The proper representation of the task, with [E], icon and description."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return The output representation of the Event task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 57
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Constructor to create a Task object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param description The task description."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Gets the tick / cross icon for the status."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return The current status icon of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return (isDone ? \"✓\" : \"✗\"); //return tick or X symbols"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Mark the task as done."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Gets the current completion status of the task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return True if done, false if the task is yet to be completed."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public boolean isCompleted() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Gets the description of the task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return The description of the task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * The proper representation of the task, with Task type, icon and description."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return The output representation of the task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 59
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Constructor to create a TaskList object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        tasks \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Constructor to create a TaskList object with an existing Task list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param tasks Existing tasks list in the database."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Gets the current tasks list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return The list containing the Task objects."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Adds a Task into the list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param command User\u0027s command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param ui The Ui object we are currently using."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @throws DukeException If the input format is incorrect."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void addTask(String command, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        String[] words \u003d command.split(\" \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        String type \u003d words[0];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            if (type.equalsIgnoreCase(\"todo\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                task \u003d new Todo(command.substring(5));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                int index \u003d command.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                if (type.equalsIgnoreCase(\"deadline\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    task \u003d new Deadline(command.substring(9, index - 1), command.substring(index + 4));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                } else if (type.equalsIgnoreCase(\"event\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    task \u003d new Event(command.substring(6, index - 1), command.substring(index + 4));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    throw new IllegalArgumentException(\"\\tOOPS!!!No such task type.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            ui.addedTask(task, tasks.size());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw new DukeException(\"\\tOOPS!!! Wrong input format. \""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    + \"\\\"Deadline \u003cdescription\u003e /by \u003cDD/MM/YYYY\u003e \u003cXX:XX\u003e\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Deletes a Task in the list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param command User\u0027s command."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param ui The Ui object we are currently using."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @throws DukeException If the input format is incorrect."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void deleteTask(String command, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            String[] done \u003d command.split(\" \");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            int number \u003d Integer.valueOf(done[1]);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            Task task \u003d tasks.get(number - 1);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            tasks.remove(number - 1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            ui.deletedTask(task, tasks.size());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw new DukeException(\"\\tOOPS!!! The task number cannot be empty.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw new DukeException(\"\\tOOPS!!! The task number does not exist.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Marks a Task in the list as done."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param command User\u0027s command."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param ui The Ui object we are currently using."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @throws DukeException If the input format is incorrect or if the task is already done."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void doneTask(String command, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            String[] done \u003d command.split(\" \");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            int number \u003d Integer.valueOf(done[1]);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            if (tasks.get(number - 1).isCompleted()) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                throw new DukeException(\"\\tOOPS!!! The task is already marked as done.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                tasks.get(number - 1).markAsDone();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                ui.doneTask(tasks, number);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw new DukeException(\"\\tOOPS!!! The task number cannot be empty.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw new DukeException(\"\\tOOPS!!! The task number does not exist.\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 118
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Constructor to create the Todo object."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param description The task description."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * The proper representation of the task, with [T], icon and description."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return The output representation of the Todo task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 23
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Constructor of Ui object. Creates scanner object for the instance."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Reads the user input and returns it."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @return The user command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Prints error message."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param error Error message to be reflected to the user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void showError(String error) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        System.err.println(error);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Prints the welcome message and the existing tasks if any."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param tasks The existing task list in the database."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void showWelcome(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        System.out.println(\"\\tHello! I\u0027m Duke\\n\" + \"\\tWhat can I do for you?\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            if (!tasks.isEmpty()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                printTasks(tasks);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                System.out.println(\"\\tThere are no tasks in the list right now.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            showError(e.getMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            showLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Prints the exit message."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void showExit() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        System.out.println(\"\\tBye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Prints the available tasks."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param tasks Current task list to be printed."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @throws DukeException If the current task list is empty."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void printTasks(List\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw new DukeException(\"\\tOOPS!!! The list is empty.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        System.out.println(\"\\tHere are the tasks in your list:\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            System.out.println(\"\\t\" + count + \".\" + task);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Prints the tasks that match the user\u0027s keyword."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param tasks The list of tasks."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param keyword User\u0027s keyword."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @throws DukeException If there are no tasks in the list or no search results."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void printMatchingTasks(List\u003cTask\u003e tasks, String keyword) throws DukeException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            keyword \u003d keyword.substring(4).trim();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            if (keyword.isEmpty()) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                throw new DukeException(\"\\tOOPS!!! Search keyword cannot be empty.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw new DukeException(\"\\tOOPS!!! Search keyword cannot be empty.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw new DukeException(\"\\tOOPS!!! The list is empty.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        System.out.println(\"\\tHere are the tasks in your list:\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                System.out.println(\"\\t\" + count + \".\" + task);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        if (count \u003d\u003d 0) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw new DukeException(\"\\tOOPS!!! There are no matching tasks.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Prints error if there is no database."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        showError(\"\\tNo existing task list available!\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Prints the set of sentences after successfully adding a task."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param task The task that was added."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param size The current number of tasks in the list."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void addedTask(Task task, int size) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        System.out.println(\"\\tGot it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        System.out.println(\"\\t  \" + task);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        System.out.println(\"\\tNow you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Prints the set of sentences after successfully deleting a task."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param task The task that was deleted."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param size The current number of tasks in the list."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void deletedTask(Task task, int size) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        System.out.println(\"\\tNoted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        System.out.println(\"\\t  \" + task);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        System.out.println(\"\\tNow you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Prints the set of sentences after successfully marking a task as done."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param tasks The task that was marked as done."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * @param number The index of the task in the list."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void doneTask(List\u003cTask\u003e tasks, int number) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        System.out.println(\"\\tNice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        System.out.println(\"\\t  \" + tasks.get(number - 1));"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     * Prints the horizontal line."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 166
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void test_parse_bye() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        Command bye \u003d Parser.parse(\"BYE\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        assertEquals(true, bye instanceof ExitCommand);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void test_parse_add() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        Command add \u003d Parser.parse(\"deadLINE\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        assertEquals(true, add instanceof AddCommand);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void test_parse_delete() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        Command bye \u003d Parser.parse(\"deLetE\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        assertEquals(true, bye instanceof DeleteCommand);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void test_parse_list() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        Command bye \u003d Parser.parse(\"LIst\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        assertEquals(true, bye instanceof ListCommand);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void test_parse_error() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            Command bye \u003d Parser.parse(\"LALALA\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            assertEquals(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", e.getMessage());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 49
    }
  },
  {
    "path": "src/test/java/duke/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void test_constructor() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        assertEquals(\"[T][\" + \"✓\" + \"] do tutorials\", (new Todo(\"do tutorials\")).toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void test_markAsDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        Todo todo \u003d new Todo(\"do work\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        todo.markAsDone();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        assertEquals(true, todo.isCompleted());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void test_getDescription() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        Todo todo \u003d new Todo(\"do work\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        assertEquals(\"do work\", todo.getDescription());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void test_getStatusIcon() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        Todo todo \u003d new Todo(\"do work\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        assertEquals(\"✗\", todo.getStatusIcon());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 34
    }
  }
]
