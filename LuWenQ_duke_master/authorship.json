[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    archiveVersion \u003d \"1.0.0\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "test {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LuWenQ": 35,
      "-": 15
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "Duke is a task management tools and you can establish and modify tasks in duke conveniently. "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "DUke is basically CLI and if you can type fast you can get a better use experience than GUI "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "tools. "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "### Get help"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "You can get help in the Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "### Create task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "You can create 3 different types of tasks in duke, which are `event`, `deadline`, and `todo`. "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "Each task have 4 features, which are type, stage, content and time(optional)."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "### Delete task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "You can delete a current task from your task list by task number."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "### List all current task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "You can list all current task with all information of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "### Find task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "You can find tasks by their content"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "### Done task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "You can mark tasks as done"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "### "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "### 1. `help` - to find help in Duke"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "The format of the command is `help`"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "`help`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "`Welcome to Duke!……` etc."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "### 2. `event` - to add a event in duke"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "The format of the command is `event \u003cevent content\u003e /at \u003ctime in dd-mm-yyyy-time\u003e`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "`event attend lecture /at 01-01-1970-1200`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "Got it. I have added this task:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "[E][✗]attend lecture (at:01-01-1970-1200)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "```"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "### 3. `dealine` - to add a deadline in duke"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "The format of the command is `deadline \u003cdeadline content\u003e /by \u003ctime in dd-mm-yyyy-time\u003e`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "`deadline submit assignment-0 /by 01-01-1970-1200`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "Got it. I have added this task:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "[D][✗]submit assignment-0 (by:01-01-1970-1200)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "```"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "### 4. `todo` - to add a todo in duke"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "The format of the command is `todo \u003ctodo content\u003e /by \u003ctime in dd-mm-yyyy-time\u003e`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "`todo buy fruits /by 01-01-1970-1200`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "Got it. I have added this task:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "[T][✗]buy fruits (by:01-01-1970-1200)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "```"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "### 5. `list` - to list all current tasks in duke"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "The format of the command is `list`."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "Here are the tasks in your list；"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "1.[E][✗]attend lecture (at:01-01-1970-1200)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "2.[D][✗]submit assignment-0 (by:01-01-1970-1200)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "3.[T][✗]buy fruits (by:01-01-1970-1200)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "```"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "### 6. `delete` - to delete a task in duke by task number"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "The format of the command is `delete \u003ctask number\u003e`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "or `delete all` to delete all the task in duke list."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "[E][✗]attend lecture (at:01-01-1970-1200)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "```"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "### 7. `done` - mark a task in duke as done by task number"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "The format of the command is `done \u003ctask number\u003e`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "`done 2`"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "Nice! I have marked is task as done:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "[T][✓]buy fruits (by:01-01-1970-1200)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "```"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "### 8. `find` - to find a task in duke by content"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "The format of the command is `find \u003ckeyword\u003e`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "`find buy`"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "Here are the matching tasks in our list:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "2.[T][✓]buy fruits (by:01-01-1970-1200)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "```"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "### 9. `bye` - to be prepared to exit duke "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "The format of the command is `bye`"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "Bye."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "Hope to see you again soon!"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "LuWenQ": 126,
      "-": 19
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "rootProject.name \u003d \u0027Duke\u0027"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "include \u0027src\u0027"
      }
    ],
    "authorContributionMap": {
      "LuWenQ": 2
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LuWenQ": 61
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": " * Create functions and commands of duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        return (\"Duke: \\n\" + run(input));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public static int firstcommand \u003d 1;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public void readSaves() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        taskList.readFromFile();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private final String SPLIT_LINE \u003d \"___________________________________________________\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private static int status \u003d 1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public String run(String inputcommand) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        if(status \u003d\u003d 1) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            if(firstcommand \u003d\u003d 1) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                readSaves();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                firstcommand \u003d 0;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            String commandType \u003d inputcommand.split(\" \")[0];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            String dukeOutput;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            switch (commandType) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                case(\"bye\"): dukeOutput \u003d bye(taskList); break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                case(\"help\"): dukeOutput \u003d help(); break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                case(\"list\"): dukeOutput \u003d list(taskList);break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                case(\"done\"): dukeOutput \u003d done(taskList, inputcommand);break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                case(\"delete\"): dukeOutput \u003d delete(taskList, inputcommand);break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                case(\"event\"):"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                case(\"deadline\"):"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                case(\"todo\"):dukeOutput \u003d mission(taskList, inputcommand, commandType);break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                case(\"find\"): dukeOutput \u003d find(taskList, inputcommand);break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                case(\"Hello\"): dukeOutput \u003d welcome();break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                default: dukeOutput \u003d outOfCommand(inputcommand);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            return dukeOutput;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "         * handling exit process after command \"bye\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "         */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        if(status \u003d\u003d 0) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private String help() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        String currentOutput \u003d SPLIT_LINE;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        currentOutput +\u003d \"Welcome to Duke!\\n\" +"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                \"   To add todos, type \\n\" +"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                \"       todo \u003cyour todo content\u003e\\n\" +"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                \"   To add events, type \\n\" +"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                \"       events \u003cyour event content\u003e\\n\" +"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                \"   To add dealines, type \\n\" +"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                \"       dealine \u003cyour deadline content\u003e\\n\" +"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                \"   To see the current missions in your duke list, type\\n\" +"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                \"       list\\n\"+"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                \"   To mark missions as done, type \\n\" +"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                \"       done \u003cnumber of mission in the list\u003e\\n\" +"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                \"   To delete missions, type \\n\" +"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                \"       delete \u003cnumber of mission in the list\u003e\\n\" +"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                \"   To delete all missions, type \\n\" +"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                \"       delete all\\n\" +"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                \"   To find mission by name, type \\n\" +"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                \"       find \u003cmission name\u003e\" +"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                \"   To close duke, just say bye to it and click the close button : )\\n\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        currentOutput +\u003d SPLIT_LINE;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        return currentOutput;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private String list(TaskList taskList) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        String currentOutput \u003d SPLIT_LINE;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        currentOutput +\u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        currentOutput +\u003d taskList.printAllEvent();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        taskList.saveToFile();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        currentOutput +\u003d SPLIT_LINE;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        return currentOutput;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private String bye(TaskList taskList) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        String currentOutput \u003d SPLIT_LINE;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        currentOutput +\u003d \"Bye. \\n\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        currentOutput +\u003d \"Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        currentOutput +\u003d SPLIT_LINE;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        currentOutput +\u003d \"\\nPress enter to quit...\\n\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        taskList.saveToFile();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        status \u003d 0;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        return currentOutput;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private String done(TaskList taskList, String in) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        String currentOutput \u003d SPLIT_LINE;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        if (in.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            currentOutput +\u003d \"☹ OOPS!!! The description of a done cannot be empty.\\n\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        if (in.split(\" \").length \u003e 1) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            String subin2 \u003d in.split(\" \")[1];"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            currentOutput +\u003d \"Nice! I have marked this task as done:\\n\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            int index \u003d Integer.parseInt(subin2);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            taskList.changeEvent(index - 1);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            currentOutput +\u003d taskList.printEvent(index - 1);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            taskList.saveToFile();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        currentOutput +\u003d SPLIT_LINE;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        return currentOutput;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private String delete(TaskList taskList, String in) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        String currentOutput \u003d SPLIT_LINE;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        if (in.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "             currentOutput+\u003d \"☹ OOPS!!! The description of a delete cannot be empty.\\n\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        if (in.split(\" \").length \u003e 1) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            String subin2 \u003d in.split(\" \")[1];"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            if(subin2.contentEquals(\"all\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                taskList.deleteAll();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                taskList.deleteAll();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                taskList.saveToFile();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                currentOutput +\u003d \"Noted. I\u0027ve removed all task.\\n\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                int index \u003d Integer.parseInt(subin2);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                currentOutput +\u003d \"Noted. I\u0027ve removed this task: \\n\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                currentOutput +\u003d taskList.printEvent(index - 1);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                taskList.deleteMission(index - 1);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                currentOutput +\u003d \"Now you have \" + TaskList.missionnum + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                taskList.saveToFile();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        currentOutput +\u003d SPLIT_LINE;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        return currentOutput;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private String find(TaskList taskList, String in) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        String currentOutput \u003d SPLIT_LINE;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        if (in.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            currentOutput +\u003d \"☹ OOPS!!! The description of find cannot be empty.\\n\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        if (in.split(\" \").length \u003e 1) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            currentOutput +\u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            String keyword \u003d in.split(\" \")[1];"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            currentOutput +\u003d taskList.findEvent(keyword);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        currentOutput +\u003d SPLIT_LINE;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        return currentOutput;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private String mission(TaskList taskList, String in, String subin1) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        String currentOutput \u003d SPLIT_LINE;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        if (in.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            currentOutput +\u003d \"☹ OOPS!!! The description of a task cannot be empty.\\n\";"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        if (in.split(\" \").length \u003e 1) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            currentOutput +\u003d subin1 + \"\\n\";"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            String str \u003d in.replaceFirst(subin1, \"\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            str \u003d str.replaceFirst(\" \", \"\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            if (in.split(\"/\").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                taskList.addEventWithoutTime(str, subin1);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            if (in.split(\"/\").length \u003e 1) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                String time \u003d str.split(\"/\")[1].split(\" \")[1];"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                String atby \u003d str.split(\"/\")[1].split(\" \")[0];"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                taskList.addEventWithTime(str.split(\"/\")[0], subin1, time, atby);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            currentOutput +\u003d \"Got it. I have added this task:\\n\";"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            currentOutput +\u003d taskList.printLastEvent();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            currentOutput +\u003d \"Now you have \" + TaskList.missionnum + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            taskList.saveToFile();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        currentOutput +\u003d SPLIT_LINE;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        return currentOutput;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private String welcome() {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        String currentOutput \u003d SPLIT_LINE;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        currentOutput +\u003d \"Welcome to Duke! \\nIf you need for help, type in \\\"help\\\".\\n\";"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        currentOutput +\u003d SPLIT_LINE;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        return currentOutput;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private String outOfCommand(String input) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        String currentOutput \u003d SPLIT_LINE;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        currentOutput +\u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\";"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        currentOutput +\u003d \"Duke receives: \" + input + \"\\n\";"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        currentOutput +\u003d SPLIT_LINE;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        return currentOutput;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LuWenQ": 193
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LuWenQ": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            stage.setTitle(\"Duke App\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LuWenQ": 34
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private static int welcome \u003d 0;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        if(welcome \u003d\u003d 0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            String input \u003d \"Hello\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            welcome \u003d 1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                    // DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                    DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            );"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private void handleUserInput() throws InterruptedException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        );"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LuWenQ": 63
    }
  },
  {
    "path": "src/main/java/duke/Mission.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": " * Represents a mission in task list of duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "public class Mission {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    enum MissionType {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        T, D, E;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    String content;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    String state;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    String time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    String atby;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    MissionType type;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    Time realtime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public Mission(String content, String type) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.time \u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.state \u003d \"✗\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        if(type.contentEquals(\"todo\") || type.contentEquals(\"T\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            this.type \u003d MissionType.T;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        } else if(type.contentEquals(\"deadline\") || type.contentEquals(\"D\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            this.type \u003d MissionType.D;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        } else if(type.contentEquals(\"event\") || type.contentEquals(\"E\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            this.type \u003d MissionType.E;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public Mission(String content, String type, String state) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.time \u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.state \u003d state;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        if(type.contentEquals(\"todo\") || type.contentEquals(\"T\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            this.type \u003d MissionType.T;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        } else if(type.contentEquals(\"deadline\") || type.contentEquals(\"D\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            this.type \u003d MissionType.D;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        } else if(type.contentEquals(\"event\") || type.contentEquals(\"E\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            this.type \u003d MissionType.E;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public Mission(String content, String type, String time, String atby) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        realtime \u003d new Time(time);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.state \u003d \"✗\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.atby \u003d atby;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        if(type.contentEquals(\"todo\") || type.contentEquals(\"T\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            this.type \u003d MissionType.T;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        } else if(type.contentEquals(\"deadline\") || type.contentEquals(\"D\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            this.type \u003d MissionType.D;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        } else if(type.contentEquals(\"event\") || type.contentEquals(\"E\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            this.type \u003d MissionType.E;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public Mission(String content, String type, String state, String time, String atby) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.time \u003d null;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.state \u003d state;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.atby \u003d atby;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        if(type.contentEquals(\"todo\") || type.contentEquals(\"T\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            this.type \u003d MissionType.T;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        } else if(type.contentEquals(\"deadline\") || type.contentEquals(\"D\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            this.type \u003d MissionType.D;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        } else if(type.contentEquals(\"event\") || type.contentEquals(\"E\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            this.type \u003d MissionType.E;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public void changeState() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        if(this.state.contentEquals(\"✗\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            this.state \u003d \"✓\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public static Mission newMission(String str) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        String[] s \u003d str.split(\"\\\\|\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        String MissionType \u003d s[0];"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        String state \u003d (s[1].contentEquals(\"0\")) ? \"✗\" : \"✓\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        String content \u003d s[2];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        Mission mission;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        if(s.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            String time \u003d s[3].replaceFirst(\"\\\\(by: \", \"\").replaceFirst(\"\\\\)\", \"\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            time \u003d time.replaceFirst(\"\\\\(at: \", \"\").replaceFirst(\"\\\\)\", \"\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            mission \u003d new Mission(content, MissionType, state, time, \"by\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            mission \u003d new Mission(content, MissionType, state);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        return mission;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        if(time !\u003d null) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            return \"[\" + type + \"][\" + state + \"] \" + content + \" (\" + atby + \":\" + time + \")\\n\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            return \"[\" + type + \"][\" + state + \"] \" + content + \"\\n\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LuWenQ": 101
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "content": ""
      },
      {
        "lineNumber": 3,
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 6,
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "content": ""
      },
      {
        "lineNumber": 9,
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "content": " * Represents the task list in duke."
      },
      {
        "lineNumber": 11,
        "content": " */"
      },
      {
        "lineNumber": 12,
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "content": ""
      },
      {
        "lineNumber": 14,
        "content": "\tpublic static int missionnum \u003d 0;"
      },
      {
        "lineNumber": 15,
        "content": "\t/**"
      },
      {
        "lineNumber": 16,
        "content": "\t * Duke can create only one list for users."
      },
      {
        "lineNumber": 17,
        "content": "\t */"
      },
      {
        "lineNumber": 18,
        "content": "\tpublic static List\u003cMission\u003e missionlist \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "content": "\tpublic TaskList() {"
      },
      {
        "lineNumber": 20,
        "content": "\t}"
      },
      {
        "lineNumber": 21,
        "content": "\tpublic String printAllEvent() {"
      },
      {
        "lineNumber": 22,
        "content": "\t\tint counter \u003d 1;"
      },
      {
        "lineNumber": 23,
        "content": "\t\tString ans \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "content": "\t\tfor(counter \u003d 1; counter \u003c missionlist.size() + 1; counter +\u003d 1) {"
      },
      {
        "lineNumber": 25,
        "content": "\t\t\tans +\u003d counter + \". \" + missionlist.get(counter - 1).toString();"
      },
      {
        "lineNumber": 26,
        "content": "\t\t}"
      },
      {
        "lineNumber": 27,
        "content": "\t\treturn ans;"
      },
      {
        "lineNumber": 28,
        "content": "\t}"
      },
      {
        "lineNumber": 29,
        "content": ""
      },
      {
        "lineNumber": 30,
        "content": "\tpublic String printEvent(int index) {"
      },
      {
        "lineNumber": 31,
        "content": "\t\treturn missionlist.get(index).toString();"
      },
      {
        "lineNumber": 32,
        "content": "\t}"
      },
      {
        "lineNumber": 33,
        "content": ""
      },
      {
        "lineNumber": 34,
        "content": "\tpublic void addEventWithTime(String str, String type, String time, String atby) {"
      },
      {
        "lineNumber": 35,
        "content": "\t\tmissionlist.add(new Mission(str, type, time, atby));"
      },
      {
        "lineNumber": 36,
        "content": "\t\tmissionnum +\u003d 1;"
      },
      {
        "lineNumber": 37,
        "content": "\t}"
      },
      {
        "lineNumber": 38,
        "content": ""
      },
      {
        "lineNumber": 39,
        "content": "\tpublic void addEventWithoutTime(String str, String type) {"
      },
      {
        "lineNumber": 40,
        "content": "\t\tmissionlist.add(new Mission(str, type));"
      },
      {
        "lineNumber": 41,
        "content": "\t\tmissionnum +\u003d 1;"
      },
      {
        "lineNumber": 42,
        "content": "\t}"
      },
      {
        "lineNumber": 43,
        "content": ""
      },
      {
        "lineNumber": 44,
        "content": "\tpublic void changeEvent(int index) {"
      },
      {
        "lineNumber": 45,
        "content": "\t\tmissionlist.get(index).changeState();"
      },
      {
        "lineNumber": 46,
        "content": "\t}"
      },
      {
        "lineNumber": 47,
        "content": ""
      },
      {
        "lineNumber": 48,
        "content": "\tpublic void deleteMission(int index) {"
      },
      {
        "lineNumber": 49,
        "content": "\t\tmissionlist.remove(index);"
      },
      {
        "lineNumber": 50,
        "content": "\t\tmissionnum -\u003d 1;"
      },
      {
        "lineNumber": 51,
        "content": "\t}"
      },
      {
        "lineNumber": 52,
        "content": ""
      },
      {
        "lineNumber": 53,
        "content": "\tpublic String printLastEvent() {"
      },
      {
        "lineNumber": 54,
        "content": "\t\tString ans \u003d \"\";"
      },
      {
        "lineNumber": 55,
        "content": "\t\tans \u003d missionlist.get(missionlist.size() - 1).toString();"
      },
      {
        "lineNumber": 56,
        "content": "\t\treturn ans;"
      },
      {
        "lineNumber": 57,
        "content": "\t}"
      },
      {
        "lineNumber": 58,
        "content": ""
      },
      {
        "lineNumber": 59,
        "content": "\tpublic void deleteAll() {"
      },
      {
        "lineNumber": 60,
        "content": "\t\tfor(; missionnum \u003e 0; missionnum--) {"
      },
      {
        "lineNumber": 61,
        "content": "\t\t\tmissionlist.remove(missionnum - 1);"
      },
      {
        "lineNumber": 62,
        "content": "\t\t}"
      },
      {
        "lineNumber": 63,
        "content": "\t\tmissionnum \u003d 0;"
      },
      {
        "lineNumber": 64,
        "content": "\t}"
      },
      {
        "lineNumber": 65,
        "content": ""
      },
      {
        "lineNumber": 66,
        "content": "\tpublic String findEvent(String keyword) {"
      },
      {
        "lineNumber": 67,
        "content": "\t\tString findresult \u003d \"\";"
      },
      {
        "lineNumber": 68,
        "content": "\t\tfor(int i \u003d 0; i \u003c missionnum; i +\u003d 1) {"
      },
      {
        "lineNumber": 69,
        "content": "\t\t\tif(missionlist.get(i).content.contains(keyword)) {"
      },
      {
        "lineNumber": 70,
        "content": "\t\t\t    findresult +\u003d (i + 1) + \". \" + missionlist.get(i).toString();"
      },
      {
        "lineNumber": 71,
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 72,
        "content": "\t\t}"
      },
      {
        "lineNumber": 73,
        "content": "\t\treturn findresult;"
      },
      {
        "lineNumber": 74,
        "content": "\t}"
      },
      {
        "lineNumber": 75,
        "content": ""
      },
      {
        "lineNumber": 76,
        "content": "\tpublic void saveToFile() {"
      },
      {
        "lineNumber": 77,
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 78,
        "content": "\t\t\tFileWriter fw \u003d new FileWriter(\"duke.txt\");"
      },
      {
        "lineNumber": 79,
        "content": "\t\t\tfor (Mission a : missionlist) {"
      },
      {
        "lineNumber": 80,
        "content": "\t\t\t\tint x \u003d a.state.contentEquals(\"✗\") ? 0 : 1;"
      },
      {
        "lineNumber": 81,
        "content": "\t\t\t\tString str \u003d a.type + \"|\" + x + \"|\" + a.content + (a.time\u003d\u003dnull ? \"\" : (\"|\" + a.time)) + \"\\n\";"
      },
      {
        "lineNumber": 82,
        "content": "\t\t\t\tfw.write(str);"
      },
      {
        "lineNumber": 83,
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 84,
        "content": "\t\t\tfw.close();"
      },
      {
        "lineNumber": 85,
        "content": "\t\t} catch (Exception e) {"
      },
      {
        "lineNumber": 86,
        "content": "\t\t\tSystem.out.println(e);"
      },
      {
        "lineNumber": 87,
        "content": "\t\t}"
      },
      {
        "lineNumber": 88,
        "content": "\t}"
      },
      {
        "lineNumber": 89,
        "content": ""
      },
      {
        "lineNumber": 90,
        "content": "\tpublic void readFromFile() {"
      },
      {
        "lineNumber": 91,
        "content": "\t\tString path \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 92,
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 93,
        "content": "\t\t\tint i \u003d 0;"
      },
      {
        "lineNumber": 94,
        "content": "\t\t\tList\u003cString\u003e contents \u003d Files.readAllLines(Paths.get(path));"
      },
      {
        "lineNumber": 95,
        "content": "\t\t\tfor(i \u003d 0; i \u003c contents.size(); i +\u003d 1) {"
      },
      {
        "lineNumber": 96,
        "content": "\t\t\t\tmissionlist.add(Mission.newMission(contents.get(i)));"
      },
      {
        "lineNumber": 97,
        "content": "\t\t\t\tmissionnum +\u003d 1;"
      },
      {
        "lineNumber": 98,
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 99,
        "content": "\t\t} catch (Exception e) {"
      },
      {
        "lineNumber": 100,
        "content": "\t\t\tSystem.out.println(e);"
      },
      {
        "lineNumber": 101,
        "content": "\t\t}"
      },
      {
        "lineNumber": 102,
        "content": "\t}"
      },
      {
        "lineNumber": 103,
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "null": 102,
      "LuWenQ": 1
    }
  },
  {
    "path": "src/main/java/duke/Time.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "public class Time {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    int date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    int month;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    int year;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    int time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public Time(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        String[] sa \u003d s.split(\"-\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.date \u003d Integer.parseInt(sa[0]);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.month \u003d Integer.parseInt(sa[1]);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.year \u003d Integer.parseInt(sa[2]);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        this.time \u003d Integer.parseInt(sa[3]);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LuWenQ": 14
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" style\u003d\"-fx-background-color: palegreen; -fx-border-color: white; -fx-border-width: 2px 2px; -fx-border-radius: 1px;\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"999.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "LuWenQ": 15
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" style\u003d\"-fx-background-color: palegreen;\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "LuWenQ": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    private final Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public void checkDukeHelp() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "        assert(duke.run(\"help\") !\u003d null):\"Wrong content of help information\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "            System.out.println(\"Nothing to test\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LuWenQ": 14
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "--------------------------------------"
      }
    ],
    "authorContributionMap": {
      "LuWenQ": 9
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "LuWenQ": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LuWenQ"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "LuWenQ": 34
    }
  }
]
