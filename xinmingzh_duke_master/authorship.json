[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 23,
      "Jeffry Lum": 15
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":init"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":end"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 84
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rootProject.name \u003d \u0027duke\u0027"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 1
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    Deadline(String desc) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.by \u003d \"no idea :-p\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    Deadline(String desc, String by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public String getDateBy() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void setDateBy(String by) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.getDateBy() + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 24
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    String indent \u003d \"     \";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    String input;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    String[] inputs;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    String[] inputFormatted;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    Task task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    int output;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        Duke newDuke \u003d new Duke();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        newDuke.run();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        printIntro();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            UILine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                output \u003d processInput(input);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            UILine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        while (output !\u003d 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    private int processInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        inputs \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        // Exit program"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        switch (inputs[0]) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                System.out.println(indent + \"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                return 1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                if (list.isEmpty()) throw new DukeException(indent + \"Your list is currently empty...\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                System.out.println(indent + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                for (Task t: list) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                    System.out.println(indent + (list.indexOf(t) + 1) + \". \" + t);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                if (inputs.length \u003d\u003d 1)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                    throw new DukeException(indent + \"☹ OOPS!!! The index of \" + inputs[0] + \" operation cannot be empty.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                if (!inputs[1].matches(\"(0|[1-9]\\\\d*)\"))"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                    throw new DukeException(indent + \"☹ OOPS!!! The index of \" + inputs[0] + \" operation must be a positive integer.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                int i \u003d Integer.parseInt(inputs[1]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                if (i \u003e list.size())"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                    throw new DukeException(indent + \"☹ OOPS!!! There is no task at index \" + i + \".\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                switch (inputs[0]) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        task \u003d list.get(i - 1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        task.setDone();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        System.out.println(indent + \"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        System.out.println(indent + \"  \" + task);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                    case \"delete\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        list.remove(i - 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        System.out.println(indent + \"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        System.out.println(indent + \"  \" + task);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        printListSize();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                if (inputs.length \u003d\u003d 1) throw new DukeException(indent + \"☹ OOPS!!! The description of a \" + inputs[0] + \" cannot be empty.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                switch (inputs[0]) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        task \u003d new Todo(inputs[1]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        if (!inputs[1].contains(\" /by \")) throw new DukeException(indent + \"☹ OOPS!!! The due date of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        inputFormatted \u003d inputs[1].split(\" /by \", 2);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        task \u003d new Deadline(inputFormatted[0], inputFormatted[1]);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        if (!inputs[1].contains(\" /at \")) throw new DukeException(indent + \"☹ OOPS!!! The duration of a event cannot be empty.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        inputFormatted \u003d inputs[1].split(\" /at \", 2);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        task \u003d new Event(inputFormatted[0], inputFormatted[1]);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                list.add(task);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                System.out.println(indent + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                System.out.println(indent + \"  \" + task);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                printListSize();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                throw new DukeException(indent + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return 0;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    private void printIntro() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        UILine();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        System.out.println(indent + \"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        System.out.println(indent + \"What can I do for you?\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        UILine();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    private void UILine() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    private void printListSize() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        System.out.println(indent + \"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 114,
      "Jeffry Lum": 1,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    protected String duration;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    Event(String desc) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.duration \u003d \"no idea :-p\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    Event(String desc, String duration) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public String getDuration() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return duration;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void setDuration(String duration) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.getDuration() + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 25
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    protected String desc;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public Task(String desc) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public Task(String desc, boolean done) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.isDone \u003d done;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public String getDesc() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return desc;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void setDesc(String desc) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        setDone(true);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public String getDoneStatus() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return isDone() ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return \"[\" + this.getDoneStatus() + \"] \" + getDesc();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 43
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    Todo(String desc) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 10
    }
  }
]
