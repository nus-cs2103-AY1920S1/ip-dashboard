[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "test {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 20,
      "-": 15
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "D - 1 - return book - 2019-08-29 23:59"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "T - 0 - borrow book"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 2
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "/** Task to represent a deadline. */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Class constructor for Deadline."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param name Description of the deadline."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param date Date of the deadline."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public Deadline(String name, Date date) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Get the task type of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return DEADLINE value of the enum TaskType."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public TaskType getType() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return TaskType.DEADLINE;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Get the date of deadline."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return Date of deadline."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public Date getDate() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * String method to override the toString() in java.lang.Object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return String representation of the object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        String doneStr \u003d this.done ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return String.format(\"[D][%s] %s (by: %s)\", doneStr, this.name, format.format(this.date));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 45
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    // class variables"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    UI ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    Parser parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    TaskList tl;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Class constructor for the Duke class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.ui \u003d new UI();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.parser \u003d new Parser();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.storage \u003d new Storage(\"data/duke.txt\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            this.tl \u003d new TaskList(storage.readTasksFromFile());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            this.ui.printError(e);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Method which runs and performs user input and task addition."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.ui.printWelcome();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.ui.showTaskList(this.tl);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        String input \u003d this.ui.takeInput();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        while (input !\u003d null) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                switch (this.parser.parseCommand(input)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                    this.ui.printExit();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                    System.exit(0);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                    this.ui.showTaskList(this.tl);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                    task \u003d this.tl.taskDone(this.parser.parseInteger(input.split(\" \")[1]));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                    this.ui.showTaskMarkedDone(task);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                    task \u003d this.tl.removeTask(this.parser.parseInteger(input.split(\" \")[1]));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                    this.ui.showTaskDeletion(task, this.tl);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                    task \u003d this.parser.parseTodo(input.split(\" \", 2)[1]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                    tl.addTask(task);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                    this.ui.showTaskAddition(task, this.tl);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                    task \u003d this.parser.parseEvent(input.split(\" \", 2)[1]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                    tl.addTask(task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                    this.ui.showTaskAddition(task, tl);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                    task \u003d this.parser.parseDeadline(input.split(\" \", 2)[1]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                    tl.addTask(task);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                    this.ui.showTaskAddition(task, tl);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                    TaskList newTl \u003d tl.findTasks(input.split(\" \", 2)[1]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                    this.ui.showTaskList(newTl);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                    this.ui.printError(new DukeException(\"Unknown command. :(\"));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                this.storage.writeTasksToFile(this.tl);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                input \u003d this.ui.takeInput();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                this.ui.printError(e);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.ui.printExit();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Main method for the class."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param args Arguments passed while execution."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 93,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "/** Class to define a Duke Exception. */"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "class DukeException extends Exception {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Constructor for the exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param message Message of the exception."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "/** Task to represent an event. */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Constructor for the event."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param name Description of event."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param date Date of event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public Event(String name, Date date) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Get the task type of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return EVENT value of the enum TaskType."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public TaskType getType() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return TaskType.EVENT;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Get the date of event."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return Date of event."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public Date getDate() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * String method to override the toString() in java.lang.Object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return String representation of the object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        String doneStr \u003d this.done ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return String.format(\"[E][%s] %s (at: %s)\", doneStr, this.name, format.format(this.date));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 45
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "/** Class to parse the input given by the user. */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    // static SimpleDateFormat needed to create tasks"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    static final SimpleDateFormat format \u003d new SimpleDateFormat(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Parse the string to determine the command type."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param input Command string."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return String representing the type of command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public String parseCommand(String input) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return input.split(\" \", 2)[0];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Parse a to-do task from a string."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param taskStr String representing the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return A To-Do task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @throws DukeException Exception in case to-do is incomplete."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public ToDo parseTodo(String taskStr) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        if (taskStr.isEmpty()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            throw new DukeException(\"Please enter the to-do description.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return new ToDo(taskStr);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Parse a deadline task from a string."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param taskStr String representing the task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return A Deadline task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @throws DukeException Exception in case deadline is incomplete."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public Deadline parseDeadline(String taskStr) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        if (taskStr.split(\" /by \").length \u003c 1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            throw new DukeException(\"Please enter deadline description and date.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        } else if (taskStr.split(\" /by \").length \u003c 2) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            throw new DukeException(\"Please provide a deadline date.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        String desc \u003d taskStr.split(\" /by \")[0];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            Date date \u003d format.parse(taskStr.split(\" /by \")[1]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            return new Deadline(desc, date);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            throw new DukeException(\"Could not parse the deadline. :(\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Parse an event task from a string."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param taskStr String representing the task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return An Event task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @throws DukeException Exception in case event is incomplete."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public Event parseEvent(String taskStr) throws DukeException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        if (taskStr.split(\" /at \").length \u003c 1) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            throw new DukeException(\"Please enter event description and date.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        } else if (taskStr.split(\" /at \").length \u003c 2) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            throw new DukeException(\"Please provide a event date.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        String desc \u003d taskStr.split(\" /at \")[0];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            Date date \u003d format.parse(taskStr.split(\" /at \")[1]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            return new Event(desc, date);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            throw new DukeException(\"Could not parse the event. :(\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Parse an integer from the string."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param indexStr String representing the index."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return Integer representing the index."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @throws DukeException Exception in case command is incomplete."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public int parseInteger(String indexStr) throws DukeException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        if (indexStr.isEmpty()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            throw new DukeException(\"Please provide an index.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return Integer.parseInt(indexStr);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 86
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.nio.charset.Charset;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "/** Class to manage storage of tasks from/to file. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    // path of storage file"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    Path path;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    // date formatting is a constant"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    static final SimpleDateFormat format \u003d new SimpleDateFormat(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Constructor for the object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param path Path to the storage file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public Storage(String path) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.path \u003d Paths.get(path);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Function to read tasks from the storage file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return A list of read tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @throws DukeException Exception in case cannot read tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public ArrayList\u003cTask\u003e readTasksFromFile() throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            List\u003cString\u003e taskStrings \u003d Files.readAllLines(this.path);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            for (String task : taskStrings) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                tasks.add(readTask(task));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            throw new DukeException(\"Was not able to read the file. :(\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Function to write tasks to the storage file."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param tl TaskList representing the list of tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @throws DukeException Exception in case cannot write tasks."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public void writeTasksToFile(TaskList tl) throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            Path path \u003d Paths.get(\"data/duke.txt\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            BufferedWriter writer \u003d Files.newBufferedWriter(path, Charset.forName(\"UTF-8\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            for (Task task : tl.getTasks()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                writer.write(writeTask(task) + \"\\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            throw new DukeException(\"Was not able to write to the file. :(\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Static method to read task from a string."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param task String representing the task."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return The parsed task."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @throws DukeException Exception in case cannot read task."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public static Task readTask(String task) throws DukeException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        String[] taskParams \u003d task.split(\" - \");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        Task returnTask \u003d null;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        switch (taskParams[0]) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            ToDo todo \u003d new ToDo(taskParams[2]);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            if (Integer.parseInt(taskParams[1]) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                todo.markDone();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            returnTask \u003d todo;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                Event event \u003d new Event(taskParams[2], format.parse(taskParams[3]));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                if (Integer.parseInt(taskParams[1]) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                    event.markDone();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                returnTask \u003d event;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                throw new DukeException(\"Incorrect date format given. :(\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                Deadline dl \u003d new Deadline(taskParams[2], format.parse(taskParams[3]));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                if (Integer.parseInt(taskParams[1]) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                    dl.markDone();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                returnTask \u003d dl;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                throw new DukeException(\"Incorrect date format given. :(\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return returnTask;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Static method to generate a string representing the task."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param task The Task to convert to String."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return String representing the task."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public static String writeTask(Task task) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        String taskStr \u003d \"\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        String doneStr \u003d task.isTaskDone() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        switch (task.getType()) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            taskStr \u003d String.format(\"T - %s - %s\", doneStr, task.getName());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            taskStr \u003d String.format(\"E - %s - %s - %s\", doneStr, task.getName(), format.format(task.getDate()));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            taskStr \u003d String.format(\"D - %s - %s - %s\", doneStr, task.getName(), format.format(task.getDate()));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return taskStr;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 133
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "/** Class to represent a task. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "abstract class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    protected boolean done;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    protected TaskType type;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Constructor for the object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param name Description of the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Mark a task as done."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Get the task description."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return String representing task description."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Check if task is marked done."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return Boolean representing task done status."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public boolean isTaskDone() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return this.done;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Abstract method to represent the task type."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return TaskType of the task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public abstract TaskType getType();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Abstract method representing the task date."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return Date of task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public abstract Date getDate();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 51
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "/** Class to represent a list of tasks. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    // ArrayList to maintain list of tasks"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Constructor for the object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Add a task to task list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * List all tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return String representing all tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public String listTasks() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            sb.append(String.format(\"     %d. %s\\n\", i + 1, this.tasks.get(i).toString()));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Return a new TaskList filtered with the searched task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param findStr String to be searched for in the tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return TaskList where only the filtered tasks are included."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public TaskList findTasks(String findStr) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        ArrayList\u003cTask\u003e newTasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        for (Task task : this.tasks) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            if (task.getName().contains(findStr)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                newTasks.add(task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return new TaskList(newTasks);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Mark a task as done in the list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param index Index of task to mark done."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return Task marked as done."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public Task taskDone(int index) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.tasks.get(index - 1).markDone();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return this.tasks.get(index - 1);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Remove a task from the list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param index Index of task to remove."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return Removed task."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public Task removeTask(int index) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return this.tasks.remove(index - 1);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Get the list of tasks."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return List of tasks."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 77
    }
  },
  {
    "path": "src/main/java/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "/** An enumeration to define the different task types. */"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "enum TaskType {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    TODO, DEADLINE, EVENT"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 4
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "/** Task to represent a To-do. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Constructor for the object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param name Description of to-do."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Get the task type of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return TO-DO value of the enum TaskType."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public TaskType getType() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return TaskType.TODO;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Get the date of event."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return Null because a to-do has no date."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public Date getDate() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * String method to override the toString() in java.lang.Object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return String representation of the object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        String doneStr \u003d this.done ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return String.format(\"[T][%s] %s\", doneStr, this.name);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 39
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "/** Class to handle UI for the application. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "class UI {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    // scanner to take user input"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    private static final String welcomeStr \u003d \"Hello! I\u0027m Duke :)\\n     What can I do for you?\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    private static final String endStr \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Constructor for the object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Print welcome string."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public void printWelcome() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        prettyPrint(welcomeStr);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Print exit string."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public void printExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        prettyPrint(endStr);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Take input from user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return User input."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public String takeInput() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        if (this.sc.hasNextLine()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            return sc.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Method to display task addition."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param task Task added."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param tl TaskList of tasks."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public void showTaskAddition(Task task, TaskList tl) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Got it. I\u0027ve added this task:\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        sb.append(\"       \" + task + \"\\n\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        sb.append(String.format(\"     Now you have %d tasks in the list.\", tl.getTasks().size()));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        prettyPrint(sb.toString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Display a deletion of task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param task Task deleted."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param tl TaskList deleted from."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public void showTaskDeletion(Task task, TaskList tl) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Noted. I\u0027ve removed this task:\\n\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        sb.append(String.format(\"     %s\\n\", task.toString()));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        sb.append(String.format(\"     Now you have %d tasks in the list.\", tl.getTasks().size()));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        prettyPrint(sb.toString());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Display marking task as done."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param task Task marked done."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public void showTaskMarkedDone(Task task) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Nice! I\u0027ve marked this task as done:\\n\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        sb.append(String.format(\"     %s\", task.toString()));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        prettyPrint(sb.toString());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * List the tasks in a TaskList."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param tl TaskList to list tasks from."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public void showTaskList(TaskList tl) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        prettyPrint(tl.listTasks());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Display an error."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param e Error to be displayed."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public void printError(DukeException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        prettyPrint(String.format(\"☹ OOPS!!! %s\", e.getMessage()));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Pretty print a string."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param str String to be printed."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    private static void prettyPrint(String str) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        System.out.println(\"    --------------------------------------------------\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        System.out.println(\"     \" + str);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        System.out.println(\"    --------------------------------------------------\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 103
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 10
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public void parseCommandTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        String todoInput \u003d \"todo bake eggs\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        String deadlineInput \u003d \"deadline return book /by 2019-08-31 18:00\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        String eventInput \u003d \"event concert /at 2019-08-31 21:00\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        assertEquals(parser.parseCommand(todoInput), \"todo\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        assertEquals(parser.parseCommand(deadlineInput), \"deadline\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        assertEquals(parser.parseCommand(eventInput), \"event\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public void parseIntegerTest() throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        assertEquals(parser.parseInteger(\"1\"), 1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public void parseEventTest() throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        String taskStr \u003d \"concert /at 2019-08-31 21:00\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        assertEquals(\"[E][✗] concert (at: 2019-08-31 21:00)\", parser.parseEvent(taskStr).toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 29
    }
  },
  {
    "path": "src/test/java/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public void readTaskTest() throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        String taskStr \u003d \"E - 0 - concert - 2019-08-31 21:00\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        assertEquals(Storage.readTask(taskStr).toString(), \"[E][✗] concert (at: 2019-08-31 21:00)\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public void writeTaskTest() throws ParseException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        Event event \u003d new Event(\"concert\", Storage.format.parse(\"2019-08-31 21:00\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        assertEquals(Storage.writeTask(event), \"E - 0 - concert - 2019-08-31 21:00\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 19
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "event concert /at Mon 2PM"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "deadline return book /by Sun 2PM"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 9
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 34
    }
  }
]
