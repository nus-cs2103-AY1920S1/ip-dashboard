[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weehan"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weehan"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weehan"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weehan"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Weehan"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Weehan"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Weehan"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Weehan"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Weehan": 22,
      "Jeffry Lum": 15
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":init"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":end"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 84
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rootProject.name \u003d \u0027duke\u0027"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 1
    }
  },
  {
    "path": "src/main/java/CLIConsole.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Weehan"
        },
        "content": "class CLIConsole implements Console {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weehan"
        },
        "content": "     * @param lines An array of messages to be wrapped."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weehan"
        },
        "content": "     * Prints an output to the command line including both the wrapper and the messages,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weehan"
        },
        "content": "     * separated by a newline. The wrapper adds a line to the top and bottom of the"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weehan"
        },
        "content": "     * message and adds tab indentation."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    public void print(String ...lines) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        for (String line: lines) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weehan"
        },
        "content": "            System.out.println(\"\\t \" + line);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Weehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Weehan": 15
    }
  },
  {
    "path": "src/main/java/Console.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Weehan"
        },
        "content": "interface Console {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    public void print(String ...lines);"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Weehan": 3
    }
  },
  {
    "path": "src/main/java/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Weehan"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    String dueDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    public DeadlineTask(String description, String dueDateTime) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        this.dueDateTime \u003d dueDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + dueDateTime + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Weehan": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Weehan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Weehan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weehan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        // Declare an Console interface"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        Console console \u003d new CLIConsole();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        // Print the introduction"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        console.print(\"Hello! I\u0027m Duke\", \"What can I do for you?\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        // Declare a scanner to read input"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        // Declare an array to store the list of messages"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        // Read Eval Print Loop"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        replLoop:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Weehan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                // Read the next line"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                String line \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                // Get all commands by splitting on a whitespaces delimiter"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                String[] commands \u003d line.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                // If there is no input, wait for another input"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                if (commands.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                // Declaring variables for use in switch statement"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                String[] details;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                Task newTask;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                int index;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                // First command"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                String command \u003d commands[0];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                switch(command) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                    case \"bye\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        // Throw a DukeException if there are wrong number of arguments for the command"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        checkIfCorrectNumberOfArguments(commands, 0);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        // Print a message before closing Duke"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        console.print(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        break replLoop;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        // Throw a DukeException if there are wrong number of arguments for the command"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        checkIfCorrectNumberOfArguments(commands, 0);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        // Print the list of tasks"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        printTasks(tasks, console);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        // Throw a DukeException if there are wrong number of arguments for the command"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        checkIfCorrectNumberOfArguments(commands, 1);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        // Get the index of the task in the list of tasks and retrieve the task"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        // Throw a DukeException if the argument is not a number or if there is no task at given index."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                            index \u003d Integer.parseInt(commands[1]) - 1;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                            tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        } catch(NumberFormatException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The argument should be a number.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! There is no task at that index.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        // Retrieve the task and mark it as done and throw a DukeExcption if index is out of bounds"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        // Print a message confirming that the task is marked as done"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        console.print("
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                            \"Nice! I\u0027ve marked this task as done: \","
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                            tasks.get(index).toString()"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        );"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                    case \"delete\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        // Throw a DukeException if there are wrong number of arguments for the command"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        checkIfCorrectNumberOfArguments(commands, 1);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        // Get the index of the task in the list of tasks and remove the task"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        // Throw a DukeException if the argument is not a number or if there is no task at given index."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                            index \u003d Integer.parseInt(commands[1]) - 1;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                            newTask \u003d tasks.remove(index);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        } catch(NumberFormatException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The argument should be a number.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! There is no task at that index.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        // Print a message confirming that the task is removed"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        console.print("
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                            \"Noted. I\u0027ve removed this task: \","
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                            newTask.toString(),"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                            \"Now you have \" + tasks.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        );"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        // Throw a DukeException if there is no input"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        if (line.equals(\"todo\")) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        // Split the line by a regex and store the information in the details"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        details \u003d line.split(\"todo\\\\s*\", 2);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        // Create a new task using the information stored in details"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        newTask \u003d new TodoTask(details[1]);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        // Add the new task to the list of tasks"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        tasks.add(newTask);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        // Print a message confirming the addition of the task"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        console.print("
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                            \"Got it. I\u0027ve added this task:\","
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                            newTask.toString(),"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                            \"Now you have \" + tasks.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        );"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        // Throw a DukeException if there is no input"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        if (line.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        // Split the line by a regex and store the information in the details"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        details \u003d line.split(\"deadline\\\\s*\", 2)[1].split(\"\\\\s+/by\\\\s+\", 2);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        // Throw a DukeException if input is invalid"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        if (details.length \u003c 2 || details[0].isEmpty() || details[1].isEmpty()) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description or the deadline for this task is empty.\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        // Create a new task using the information stored in details"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        newTask \u003d new DeadlineTask(details[0], details[1]);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        // Add the new task to the list of tasks"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        tasks.add(newTask);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        // Print a message confirming the addition of the task"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        console.print("
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                            \"Got it. I\u0027ve added this task:\","
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                            newTask.toString(),"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                            \"Now you have \" + tasks.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        );"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        // Throw a DukeException if there is no input"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        if (line.equals(\"event\")) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        // Split the line by a regex and store the information in the details"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        details \u003d line.split(\"event\\\\s*\", 2)[1].split(\"\\\\s+/at\\\\s+\", 2);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        // Throw a DukeException if input is invalid"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        if (details.length \u003c 2 || details[0].isEmpty() || details[1].isEmpty()) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description or the date \u0026 time for this task is empty.\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        // Create a new task using the information stored in details"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        newTask \u003d new EventTask(details[0], details[1]);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        // Add the new task to the list of tasks"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        tasks.add(newTask);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        // Print a message confirming the addition of the task"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        console.print("
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                            \"Got it. I\u0027ve added this task:\","
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                            newTask.toString(),"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                            \"Now you have \" + tasks.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        );"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Weehan"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Weehan"
        },
        "content": "                console.print(e.getMessage());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Weehan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Weehan"
        },
        "content": "     * Checks if the command array has the correct number of arguments."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Weehan"
        },
        "content": "     * @param commands The command array."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Weehan"
        },
        "content": "     * @param correctNumberOfArguments The correct number of arguments for the command."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Weehan"
        },
        "content": "     * @throws DukeException The error that is thrown when command array has the wrong number of arguments."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Weehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    public static void checkIfCorrectNumberOfArguments(String[] commands, int correctNumberOfArguments) throws DukeException {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        int numberOfArguments \u003d commands.length - 1;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        if (numberOfArguments \u003c correctNumberOfArguments) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Weehan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Insufficient arguments for this command.\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        } else if (numberOfArguments \u003e correctNumberOfArguments) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Weehan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! There are too many arguments for this command.\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Weehan"
        },
        "content": "     * Prints an list of tasks to a console."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Weehan"
        },
        "content": "     * @param tasks The list of tasks to be printed."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Weehan"
        },
        "content": "     * @param console The console that the list of tasks should be printed to."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Weehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    public static void printTasks(List\u003cTask\u003e tasks, Console console) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        // Create a new String array to store the lines"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        String[] lines \u003d new String[tasks.size()];"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Weehan"
        },
        "content": "            // Each line is prefixed with the item number"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Weehan"
        },
        "content": "            lines[i] \u003d (i + 1) + \".\" + tasks.get(i);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        console.print(lines);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Weehan": 211,
      "Jeffry Lum": 1,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Weehan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Weehan"
        },
        "content": "  public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weehan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Weehan": 5
    }
  },
  {
    "path": "src/main/java/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Weehan"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    String rangeDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    public EventTask(String description, String rangeDateTime) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        this.rangeDateTime \u003d rangeDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + rangeDateTime + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Weehan": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Weehan"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Weehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Weehan": 22
    }
  },
  {
    "path": "src/main/java/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Weehan"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    public TodoTask(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weehan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weehan"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Weehan": 10
    }
  }
]
