[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "public class Deadline extends TaskWithDate {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    public Deadline(String description, String date) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        super(description, date);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date + \")\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Matt Lee": 11
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    enum TaskType { todo, deadline, event }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    enum CommandType { done, delete }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        String s;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        whileloop: while (true) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "            s \u003d sc.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "            switch (s) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                case \"bye\"://exit"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                    break whileloop;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                case \"list\"://list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                    if (taskList.size() \u003e 0) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                            StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                            Task t \u003d taskList.get(i);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                            sb.append(i + 1).append(\" \").append(t);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                            System.out.println(sb);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                        System.out.println(\"There are no tasks in your list.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                    if (s.indexOf(\"done\") \u003d\u003d 0) {//Set task to done"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                        indexBasedCommand(taskList, CommandType.done, s);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                    } else if (s.indexOf(\"delete\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                    indexBasedCommand(taskList, CommandType.delete, s);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                    } else if (s.indexOf(\"todo\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                        insertByCommand(taskList, TaskType.todo, s);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                    } else if (s.indexOf(\"event\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                        insertByCommand(taskList, TaskType.event, s);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                    } else if (s.indexOf(\"deadline\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                        insertByCommand(taskList, TaskType.deadline, s);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                        //taskList.add(new Task(s));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                        //System.out.println(\"added: \" + s);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                        System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    public static void indexBasedCommand(List\u003cTask\u003e taskList, CommandType commandType, String command) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "            int index \u003d -1;//0 Bounded"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "            if (commandType.equals(CommandType.done)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                index +\u003d Integer.parseInt(command.replace(\"done\", \"\").trim());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                Task t \u003d taskList.get(index);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                t.markAsDone(true);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                System.out.println(\"  \" + t);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "            } else if (commandType.equals(CommandType.delete)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                index +\u003d Integer.parseInt(command.replace(\"delete\", \"\").trim());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                Task t \u003d taskList.remove(index);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                System.out.println(\"  \" + t.toString());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The index is invalid.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    public static void insertByCommand(List\u003cTask\u003e taskList, TaskType taskType, String line) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        String data \u003d line.replaceFirst(\"^.*?\\\\s\",\"\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        //If no change, then it\u0027s either empty, or invalid command"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        if (line.equals(data)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "            if (line.equals(\"todo\") || line.equals(\"event\") || line.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                data \u003d \"\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        String[] splitData;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "            case todo:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                if (Task.validateData(data, \"todo\"))"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                    insertNewTask(taskList, new Todo(data));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "            case event:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                splitData \u003d TaskWithDate.extractDataFromLine(data, \" /at \");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                if (TaskWithDate.validateData(splitData, \"event\"))"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                    insertNewTask(taskList, new Event(splitData[0], splitData[1]));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "            case deadline:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                splitData \u003d TaskWithDate.extractDataFromLine(data, \" /by \");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                if (TaskWithDate.validateData(splitData, \"deadline\"))"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                insertNewTask(taskList, new Deadline(splitData[0], splitData[1]));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    public static void insertNewTask(List\u003cTask\u003e taskList, Task taskToInsert) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        if(taskToInsert !\u003d null) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "            taskList.add(taskToInsert);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "            System.out.println(\"  \" + taskToInsert.toString());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "            System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Matt Lee": 109,
      "-": 11
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "public class Event extends TaskWithDate {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    public Event(String description, String date) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        super(description, date);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    public static Event buildFromLine(String line) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        String data[] \u003d line.split(\" /at \");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        if (data.length \u003e 1) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "            if (data[1].length() \u003e 0)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                return new Event(data[0], data[1]);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "            else"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Matt Lee": 23
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    public void markAsDone(boolean done) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    public String getStatusWithDescription() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    public static boolean validateData(String description, String taskName) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        if (description.length() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of a \" + taskName + \" cannot be empty.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        return getStatusWithDescription();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Matt Lee": 46
    }
  },
  {
    "path": "src/main/java/TaskWithDate.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "public class TaskWithDate extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    public TaskWithDate(String description, String date) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    public static String[] extractDataFromLine(String line, String delimiter) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        return line.split(delimiter);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    public static boolean validateData(String[] data, String taskName) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        if (data[0].length() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of a \" + taskName + \" cannot be empty.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        } else if (data.length \u003c\u003d 1 || data[1].length() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The date of a \" + taskName + \" cannot be empty.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Matt Lee": 23
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Matt Lee": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "todo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "event"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "done"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "done -1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "todo1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "todo something"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "event dinner /at mondays"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "deadline project /by thursdays"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Matt Lee": 18
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "javac -cp ..\\src\\main\\java -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Matt Lee": 21
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Matt Lee"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Matt Lee": 34
    }
  }
]
