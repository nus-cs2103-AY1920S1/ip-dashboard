[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woon17"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "woon17"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "woon17"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "woon17"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "woon17"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "woon17"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "woon17"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "woon17"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "woon17"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "woon17"
        },
        "content": "test {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "woon17"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "woon17"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "woon17"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "woon17"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 15,
      "woon17": 27
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woon17"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woon17"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woon17"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woon17"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woon17"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "woon17"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "woon17"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "woon17"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "woon17": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woon17"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woon17"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public static Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public static String message;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public static List\u003cTask\u003e myList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public static int idx \u003d 0;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public static String upperLine \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public static String lowerLine \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public static String[] oneLine;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public static String[] timeDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public static String frontSpace \u003d \"    \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public static void childFeature() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "woon17"
        },
        "content": "        System.out.print(frontSpace + upperLine);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "woon17"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "woon17"
        },
        "content": "        String time_date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "woon17"
        },
        "content": "        String firstWord \u003d oneLine[0];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "woon17"
        },
        "content": "        if (oneLine.length \u003d\u003d 2 \u0026\u0026 !oneLine[1].isBlank()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "woon17"
        },
        "content": "            System.out.println(frontSpace + \" Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "woon17"
        },
        "content": "            //todo with description"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "woon17"
        },
        "content": "            //deadline may not have /by"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "woon17"
        },
        "content": "            //event may not have /at"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "woon17"
        },
        "content": "            if (firstWord.equals(\"todo\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "woon17"
        },
        "content": "                myList.add(new Todo(oneLine[1].trim()));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "woon17"
        },
        "content": "            } else if (firstWord.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "woon17"
        },
        "content": "                timeDate \u003d oneLine[1].trim().split(\" /by \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "woon17"
        },
        "content": "                if (timeDate.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "woon17"
        },
        "content": "                    description \u003d timeDate[0].trim();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "woon17"
        },
        "content": "                    time_date \u003d timeDate[1].trim();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "woon17"
        },
        "content": "                    myList.add(new Deadline(description, time_date));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "woon17"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "woon17"
        },
        "content": "                    throw new NoTimeAndDateException(\"specific date/time for deadline is wrong\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "woon17"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "woon17"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "woon17"
        },
        "content": "                timeDate \u003d oneLine[1].trim().split(\" /at \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "woon17"
        },
        "content": "                if (timeDate.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "woon17"
        },
        "content": "                    description \u003d timeDate[0].trim();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "woon17"
        },
        "content": "                    time_date \u003d timeDate[1].trim();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "woon17"
        },
        "content": "                    myList.add(new Event(description, time_date));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "woon17"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "woon17"
        },
        "content": "                    throw new NoTimeAndDateException(\"specific date/time for event is wrong\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "woon17"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "woon17"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "woon17"
        },
        "content": "            throw new DukeException(\"The description of a \" + firstWord + \" cannot be empty.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "woon17"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "woon17"
        },
        "content": "        System.out.println(frontSpace + \"   \" + myList.get(idx));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "woon17"
        },
        "content": "        idx++;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "woon17"
        },
        "content": "        System.out.println(frontSpace + \" Now you have \" + myList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "woon17"
        },
        "content": "        System.out.println(frontSpace + lowerLine);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public static boolean isNumeric(String str) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "woon17"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "woon17"
        },
        "content": "            Integer.parseInt(str);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "woon17"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "woon17"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "woon17"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public static void doneFeature() throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "woon17"
        },
        "content": "        System.out.print(frontSpace + upperLine);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "woon17"
        },
        "content": "        //done or \"done     \""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "woon17"
        },
        "content": "        if (oneLine.length \u003d\u003d 1 || (oneLine.length \u003d\u003d 2 \u0026\u0026 oneLine[1].isBlank())) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "woon17"
        },
        "content": "            throw new DukeException(\"The description of a \" + oneLine[0].trim() + \" cannot be empty.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } else if (oneLine.length \u003d\u003d 2 \u0026\u0026 !oneLine[1].isBlank()"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "woon17"
        },
        "content": "                \u0026\u0026 oneLine[1].trim().split(\" \").length \u003d\u003d 1 \u0026\u0026 isNumeric(oneLine[1].trim())) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "woon17"
        },
        "content": "            int i \u003d Integer.parseInt(oneLine[1].trim());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "woon17"
        },
        "content": "            if (i \u003c\u003d myList.size() \u0026\u0026 i \u003e 0) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "woon17"
        },
        "content": "                System.out.println(frontSpace + \" Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "woon17"
        },
        "content": "                Task current \u003d myList.get(i - 1);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "woon17"
        },
        "content": "                current.markAsDone();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "woon17"
        },
        "content": "                System.out.println(frontSpace + \"   \" + current);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "woon17"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "woon17"
        },
        "content": "                throw new TaskNotExistException(\"task does not exist\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "woon17"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "woon17"
        },
        "content": "            //\"done 2 3 \" or \"done 2 3 4 \""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } else if (oneLine.length \u003d\u003d 2 \u0026\u0026 oneLine[1].trim().split(\" \").length !\u003d 1) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "woon17"
        },
        "content": "            throw new ExtraDescriptionException(\"There is extra description for done\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "woon17"
        },
        "content": "            //\"done abc\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "woon17"
        },
        "content": "            throw new InvalidNumberException(\"the description should be a number\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "woon17"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "woon17"
        },
        "content": "        System.out.println(frontSpace + lowerLine);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public static void deleteFeature() throws DukeException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "woon17"
        },
        "content": "        String deleteMessage1 \u003d \" Noted. I\u0027ve removed this task: \";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "woon17"
        },
        "content": "        String deleteMessage2 \u003d \" Now you have \" + (myList.size() - 1) + \" tasks in the list.\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "woon17"
        },
        "content": "        System.out.print(frontSpace + upperLine);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "woon17"
        },
        "content": "        //make sure it only have one number follow"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "woon17"
        },
        "content": "        if (oneLine.length \u003d\u003d 1 || (oneLine.length \u003d\u003d 2 \u0026\u0026 oneLine[1].isBlank())) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "woon17"
        },
        "content": "            throw new DukeException(\"The description of a \" + oneLine[0].trim() + \" cannot be empty.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } else if (oneLine.length !\u003d 1 \u0026\u0026 !oneLine[1].isBlank()"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "woon17"
        },
        "content": "                \u0026\u0026 oneLine[1].trim().split(\" \").length \u003d\u003d 1 \u0026\u0026 isNumeric(oneLine[1].trim())) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "woon17"
        },
        "content": "            int i \u003d Integer.parseInt(oneLine[1].trim());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "woon17"
        },
        "content": "            if (i \u003c\u003d myList.size() \u0026\u0026 i \u003e 0) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "woon17"
        },
        "content": "                System.out.println(frontSpace + deleteMessage1);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "woon17"
        },
        "content": "                Task delete_task \u003d myList.get(i - 1);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "woon17"
        },
        "content": "                myList.remove(i - 1);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "woon17"
        },
        "content": "                System.out.println(frontSpace + \"   \" + delete_task);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "woon17"
        },
        "content": "                idx--;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "woon17"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "woon17"
        },
        "content": "                throw new TaskNotExistException(\"task does not exist\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "woon17"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "woon17"
        },
        "content": "        }else if (oneLine.length \u003d\u003d 2 \u0026\u0026 oneLine[1].trim().split(\" \").length !\u003d 1) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "woon17"
        },
        "content": "            throw new ExtraDescriptionException(\"There is extra description for delete\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "woon17"
        },
        "content": "            throw new InvalidNumberException(\"the description should be a number\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "woon17"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "woon17"
        },
        "content": "        System.out.println(frontSpace + deleteMessage2);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "woon17"
        },
        "content": "        System.out.println(frontSpace + lowerLine);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public static void listFeature() throws DukeException {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "woon17"
        },
        "content": "        System.out.print(frontSpace + upperLine);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "woon17"
        },
        "content": "        if (oneLine.length \u003d\u003d 1 || oneLine[1].isBlank()) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "woon17"
        },
        "content": "            String title \u003d \" Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "woon17"
        },
        "content": "            System.out.print(frontSpace + title);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "woon17"
        },
        "content": "            for (int i \u003d 0; i \u003c idx; i++) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "woon17"
        },
        "content": "                System.out.println(frontSpace + \" \" + (i + 1) + \". \" + myList.get(i));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "woon17"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "woon17"
        },
        "content": "            throw new ExtraDescriptionException(\"There is extra description for list\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "woon17"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "woon17"
        },
        "content": "        System.out.println(frontSpace + lowerLine);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public static void byeFeature() throws DukeException {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "woon17"
        },
        "content": "        System.out.print(frontSpace + upperLine);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "woon17"
        },
        "content": "        if (oneLine.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "woon17"
        },
        "content": "            message \u003d \" Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "woon17"
        },
        "content": "            System.out.print(frontSpace + message);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "woon17"
        },
        "content": "            throw new ExtraDescriptionException(\"There is extra description for bye\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "woon17"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "woon17"
        },
        "content": "        System.out.println(frontSpace + lowerLine);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "woon17"
        },
        "content": "        String greet \u003d \"     Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "woon17"
        },
        "content": "                + \"     What can I do for you?\\n\";"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "woon17"
        },
        "content": "        greet \u003d frontSpace + upperLine + greet + frontSpace + lowerLine;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "woon17"
        },
        "content": "        System.out.println(greet);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "woon17"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "woon17"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "woon17"
        },
        "content": "                String cmd \u003d sc.nextLine();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "woon17"
        },
        "content": "                oneLine \u003d cmd.split(\" \", 2);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "woon17"
        },
        "content": "                String firstWord \u003d oneLine[0];"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "woon17"
        },
        "content": "                if (firstWord.equals(\"bye\")) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "woon17"
        },
        "content": "                    byeFeature();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "woon17"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "woon17"
        },
        "content": "                } else if (firstWord.equals(\"list\")) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "woon17"
        },
        "content": "                    listFeature();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "woon17"
        },
        "content": "                } else if (firstWord.equals(\"done\")) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "woon17"
        },
        "content": "                    doneFeature();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "woon17"
        },
        "content": "                } else if (firstWord.equals(\"delete\")) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "woon17"
        },
        "content": "                    deleteFeature();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "woon17"
        },
        "content": "                } else if (firstWord.equals(\"todo\") || firstWord.equals(\"deadline\")"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "woon17"
        },
        "content": "                        || firstWord.equals(\"event\")) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "woon17"
        },
        "content": "                    childFeature();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "woon17"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "woon17"
        },
        "content": "                    //situation of firstWord is invalid"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "woon17"
        },
        "content": "                    System.out.print(frontSpace + upperLine);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "woon17"
        },
        "content": "                    throw new InvalidCommandException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "woon17"
        },
        "content": "                }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "woon17"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "woon17"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "woon17"
        },
        "content": "                System.out.println(frontSpace + lowerLine);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "woon17"
        },
        "content": "            }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "woon17"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 179,
      "-": 2
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": "        return \"     ☹ OOPS!!! \" + getMessage();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woon17"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woon17"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 14
    }
  },
  {
    "path": "src/main/java/ExtraDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "public class ExtraDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public ExtraDescriptionException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 5
    }
  },
  {
    "path": "src/main/java/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "public class InvalidCommandException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 5
    }
  },
  {
    "path": "src/main/java/InvalidNumberException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "public class InvalidNumberException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public InvalidNumberException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 5
    }
  },
  {
    "path": "src/main/java/NoTimeAndDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "public class NoTimeAndDateException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public NoTimeAndDateException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 5
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woon17"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "woon17"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "woon17"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "woon17"
        },
        "content": "//       System.out.println(\"debug: \" + getStatusIcon());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "woon17"
        },
        "content": "        return \"[\"+ getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 22
    }
  },
  {
    "path": "src/main/java/TaskNotExistException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "public class TaskNotExistException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public TaskNotExistException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 5
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woon17"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 11
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": "        String message \u003d \" DUkeTest message\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": "        System.out.println(\"\" + message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 8
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "\"WEN SHUFA\""
      }
    ],
    "authorContributionMap": {
      "woon17": 1
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "\"WEN SHUFA\""
      }
    ],
    "authorContributionMap": {
      "woon17": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woon17"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woon17"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woon17"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woon17"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woon17"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "woon17"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "woon17"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "woon17"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "woon17"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "woon17"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "woon17"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "woon17": 21
    }
  }
]
