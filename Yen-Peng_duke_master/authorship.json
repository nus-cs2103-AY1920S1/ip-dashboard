[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " * Represents a deadline object."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    protected LocalDate myDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    protected LocalTime myTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    protected DateTimeFormatter myFormattedDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public Deadline(String description, String date) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        this.type \u003d \"deadline\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        this.symbol \u003d \"D\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String[] dateTimeString \u003d date.split(\" \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String dateString \u003d dateTimeString[0];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String year \u003d dateString.split(\"/\")[2];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String month \u003d dateString.split(\"/\")[1];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        if (month.length() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            month \u003d \"0\" + month;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String day \u003d dateString.split(\"/\")[0];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        if (day.length() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            day \u003d \"0\" + day;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String timeString \u003d dateTimeString[1];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String hour \u003d timeString.substring(0, 2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String minute \u003d timeString.substring(2, 4);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        myFormattedDate \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        myDate \u003d LocalDate.parse(String.format(\"%s-%s-%s\", year, month, day));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        myTime \u003d LocalTime.parse(hour + \":\" + minute);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public String getDateString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        return \"[\" + this.getSymbol() + \"]\" + this.getStatusIcon() + this.getDescription() + \" (by: \" + myDate.format(myFormattedDate) + \" \" + myTime + \")\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yen-Peng": 48
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " * The duke.Duke program implements an app that enables users to track their tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " * @author Yen-Peng"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public static void main(String[] args) throws DukeException, IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String greet \u003d \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                + \"Hello! My name is Smart Baby~\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                + \"(๑★ᴗ★๑) What can I do for you?\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                + \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        System.out.println(greet);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                checkFile();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                BufferedReader bufferRead \u003d new BufferedReader(new InputStreamReader(System.in));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                String userInput \u003d bufferRead.readLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                File taskListText \u003d new File(\"TaskList.txt\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                BufferedReader tasksFile \u003d new BufferedReader(new FileReader(taskListText));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                switch (userInput) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        assert tasks.get(i) !\u003d null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        System.out.println((i + 1) + \".\" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                            + \"Zzz...sleeping time! ~u~\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                            + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    System.exit(0);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    String[] segments \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    checkErrors(segments);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    String word \u003d segments[0];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    String rest \u003d segments[1];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    String second \u003d userInput.split(\" \")[1];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    switch (word) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        int selectedToBeDone \u003d Integer.parseInt(second);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        tasks.get(selectedToBeDone - 1).markAsDone(tasks.get(selectedToBeDone - 1));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                + \"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                + tasks.get(selectedToBeDone - 1) + \"\\n\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    case \"todo\": {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        Todo t \u003d new Todo(rest);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        tasks.add(t);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                + \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                + tasks.get(tasks.size() - 1) + \"\\n\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                + \"Now you have \" + tasks.size() + \" tasks in the list.\\n\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    case \"deadline\": {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        int indexOfSlash \u003d userInput.indexOf(\"/\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        Deadline d \u003d new Deadline(userInput.substring(9, indexOfSlash - 1), userInput.substring(indexOfSlash + 4));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        tasks.add(d);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                + \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                + tasks.get(tasks.size() - 1) + \"\\n\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                + \"Now you have \" + tasks.size() + \" tasks in the list.\\n\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    case \"event\": {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        int indexOfSlash \u003d userInput.indexOf(\"/\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        Event e \u003d new Event(userInput.substring(6, indexOfSlash - 1), userInput.substring(indexOfSlash + 4));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        tasks.add(e);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                + \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                + tasks.get(tasks.size() - 1) + \"\\n\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                + \"Now you have \" + tasks.size() + \" tasks in the list.\\n\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        throw new DukeException(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                try (PrintStream out \u003d new PrintStream(new FileOutputStream(taskListText))) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        Task t \u003d tasks.get(i);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        if (t.getType().equals(\"todo\")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                            out.print(t.getSymbol() + \" | \" + t.getBoolean() + \" | \" + t.getDescription() + \"\\n\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                            out.print(t.getSymbol() + \" | \" + t.getBoolean() + \" | \" + t.getDescription() + \"|\" + t.getDateString() + \"\\n\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    private static void checkFile() throws IOException {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        File tmpDir \u003d new File(\"TaskList.txt\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        if (!tmpDir.exists()) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            tmpDir.createNewFile();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public static void checkErrors(String[] segments) throws DukeException {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        if (segments.length \u003d\u003d 1 \u0026\u0026 segments[0].equals(\"\")) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            throw new DukeException(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    + \"( ͡° ͜ʖ ͡°) Ahh I can\u0027t read your mind yet, say something.\\n\""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        } else if (segments.length \u003d\u003d 1 \u0026\u0026 segments[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            throw new DukeException(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    + \"I\u0027ve done nothing productive all day...you too? (⊃◜⌓◝⊂)\\n\""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        } else if (segments.length \u003d\u003d 1 \u0026\u0026 segments[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            throw new DukeException(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    + \"One does not simply delete nothing. (￣ ︶ ￣;)\\n\""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        } else if (segments.length \u003d\u003d 2 \u0026\u0026 segments[1].equals(\"\")) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            throw new DukeException(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    + \"☹ OOPS!!! The description of a \" + segments[0] + \" cannot be empty.\\n\""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        } else if (segments.length \u003d\u003d 1 \u0026\u0026 Stream.of(\"delete\", \"done\", \"todo\", \"deadline\", \"event\").anyMatch(s -\u003e segments[0].equals(s))) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            throw new DukeException(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    \"☹ OOPS!!! The description of a \" + segments[0] + \" cannot be empty.\\n\" +"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        } else if (segments.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            throw new DukeException(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" +"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "Yen-Peng": 165
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " * Handles exceptions specific to Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yen-Peng": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " * Represents an event object."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    protected LocalDate myDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    protected LocalTime myTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    protected DateTimeFormatter myFormattedDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public Event(String description, String date) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        this.type \u003d \"event\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        this.symbol \u003d \"E\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String[] dateTimeString \u003d date.split(\" \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String dateString \u003d dateTimeString[0];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String year \u003d dateString.split(\"/\")[2];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String month \u003d dateString.split(\"/\")[1];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        if (month.length() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            month \u003d \"0\" + month;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String day \u003d dateString.split(\"/\")[0];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        if (day.length() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            day \u003d \"0\" + day;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String timeString \u003d dateTimeString[1];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String hour \u003d timeString.substring(0, 2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String minute \u003d timeString.substring(2, 4);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        myFormattedDate \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        myDate \u003d LocalDate.parse(String.format(\"%s-%s-%s\", year, month, day));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        myTime \u003d LocalTime.parse(hour + \":\" + minute);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public String getDateString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        return \"[\" + this.getSymbol() + \"]\" + this.getStatusIcon() + this.getDescription() + \" (at: \" + myDate.format(myFormattedDate) + \" \" + myTime + \")\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yen-Peng": 48
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " * Represents a task object."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    protected String symbol;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        return (isDone ? \"[\\u2713] \" : \"[\\u2718] \"); // returns check mark if done, cross symbol if undone"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public int getBoolean() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        return isDone? 1 : 0;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        return (description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public String getSymbol() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        return symbol;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public String getDateString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public void markAsDone(Task t) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        t.isDone \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yen-Peng": 44
    }
  },
  {
    "path": "src/main/java/TaskList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "T | 0 | meet me"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "E | 1 | hello world | computer"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "D | 0 | done with this | so done"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "D | 0 | e e e|2/2/2019 1800"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "E | 1 | e s df e|2/4/2010 1200"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-Level-8"
      }
    ],
    "authorContributionMap": {
      "Yen-Peng": 8
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " * Represents a to-do object."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        this.type \u003d \"todo\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        this.symbol \u003d \"T\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        return \"[\" + this.getSymbol() + \"]\" + this.getStatusIcon() + this.getDescription();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yen-Peng": 17
    }
  }
]
