[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    testRuntime \u0027org.junit.jupiter:junit-jupiter-engine:5.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "test {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "run{"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 27,
      "-": 15
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " * Enumerator class for all recognized command types."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "enum Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    BYE(\"bye\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    DONE(\"done\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    LIST(\"list\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    TODO(\"todo\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    EVENT(\"event\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    DEADLINE(\"deadline\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    DELETE(\"delete\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    FIND(\"find\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private String commandText;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    Command(String commandText) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        this.commandText \u003d commandText;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Returns a string representation of the command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return A string representing the command"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return commandText;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Attempts to match an input string to a valid command, which is returned."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param commandText String representation of the command"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return Command that matches the string, if exists"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @throws InvalidCommandException If there is no matching Command"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public static Command getFromString(String commandText) throws InvalidCommandException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        Command[] allCommands \u003d Command.values();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        for (Command cmd : allCommands) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            if (commandText.equals(cmd.toString())) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                return cmd;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        throw new InvalidCommandException(Duke.PRINTED_OOPS + Duke.PRINTED_INVALID_COMMAND);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 48
    }
  },
  {
    "path": "src/main/java/DateParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " * Class to help with parsing Dates to and from Strings."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "public class DateParser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private final SimpleDateFormat formatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Constructs a DateParser with a given date format."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param format String that represents the expected format of the Date"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public DateParser(String format) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        formatter \u003d new SimpleDateFormat(format);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Parses a String into a Date object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param str String representation of the Date"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return Date parsed from String (if valid format)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @throws ParseException If the String cannot be parsed into a Date object according to given format"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public Date parse(String str) throws ParseException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return formatter.parse(str);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Formats a Date into a String."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param d The Date to be formatted"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return String representation of the Date, in the desired format"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String format(Date d) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return formatter.format(d);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 41
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "// @@author CS2103/T Software Engineering AY1920S1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "// Referenced from https://nus-cs2103-ay1920s1.github.io/website/schedule/week2/project.html"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "// with minor modifications "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " * Class representation of a Date in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Creates a Deadline with a description and a Date by which it must be done."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param description A String description of this Deadline"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param by Date by which this Deadline must be completed"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public Deadline(String description, Date by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Returns a String representation of this Deadline."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return String representation of this Deadline"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Get the date by which this Deadline must be done."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return Date by which this Deadline must be done"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public Date getBy() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 41,
      "-": 1
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " * Main class of the application."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public static final String PRINTED_OOPS \u003d \"OOPS!!! \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public static final String PRINTED_INVALID_COMMAND \u003d \"I\u0027m sorry, but I don\u0027t know what that means\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public static final String PRINTED_DESCRIPTION_EMPTY_1 \u003d \"The description of a \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public static final String PRINTED_DESCRIPTION_EMPTY_2 \u003d \" cannot be empty.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    // Delimiters"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public static final String DELIM_BY \u003d \"/by\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public static final String DELIM_AT \u003d \"/at\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public static final String DATE_FORMAT \u003d \"dd-MM-yy HHmm\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public static final String USER_NAME \u003d System.getProperty(\"user.name\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public static final int MAX_TASKS \u003d 100;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private DateParser dateParser;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        dateParser \u003d new DateParser(DATE_FORMAT);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        storage \u003d new Storage(dateParser, \"C:\\\\Users\\\\\" + USER_NAME + \"\\\\Documents\\\\GitHub\\\\duke\\\\data.dat\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        ui.printGreeting();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        taskList \u003d storage.readDataFile();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        String line \u003d ui.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        // Keep reading input until the bye command is received."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        while (parser.isNotByeCommand(line)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                processInputLine(line);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                ui.printException(e);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                ui.adviseDateFormat(DATE_FORMAT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                ui.printIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            line \u003d ui.nextLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        storage.writeDataFile(taskList);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        ui.printGoodbye();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    // Processes a single line of input by identifying the command that was given, then delegating it"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    // to a subfunction to handle the command call."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private void processInputLine(String line) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        Command command \u003d parser.getCommandFromLine(line);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        String commandText \u003d command.toString();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            ui.printList(taskList);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            markTaskAsDone("
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                parser.getIndexFromLine(line)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            );"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            addDeadline("
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                parser.getBeforeDelim(line, commandText, DELIM_BY),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                parser.getAfterDelim(line, commandText, DELIM_BY)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            );"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            addEvent("
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                parser.getBeforeDelim(line, commandText, DELIM_AT),"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                parser.getAfterDelim(line, commandText, DELIM_AT)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            );"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            addTodo("
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                parser.getArg(line, commandText)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            );"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            deleteTask("
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                parser.getIndexFromLine(line)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            );"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            findTask("
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                parser.getArg(line, commandText)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            );"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            throw new InvalidCommandException(PRINTED_OOPS + PRINTED_INVALID_COMMAND);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private void findTask(String searchStr) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        ui.displaySearchResults("
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            taskList.search(searchStr),"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            searchStr"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        );"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private void deleteTask(int index) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        Task taskToDelete \u003d taskList.get(index); "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        taskList.remove(taskToDelete);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        ui.ackDeletion(taskToDelete, taskList.size());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private void addDeadline(String desc, String date) throws EmptyDescriptionException, ParseException {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        if (desc.length() !\u003d 0) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            Task newDeadline \u003d new Deadline(desc, dateParser.parse(date));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            addTask(newDeadline);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            throwEmptyDescriptionException(Command.DEADLINE);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private void addEvent(String desc, String date) throws EmptyDescriptionException, ParseException {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        if (desc.length() !\u003d 0) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            Task newEvent \u003d new Event(desc, dateParser.parse(date));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            addTask(newEvent);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            throwEmptyDescriptionException(Command.EVENT);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private void addTodo(String desc) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        if (desc.length() !\u003d 0) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            Task newTodo \u003d new Todo(desc); "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            addTask(newTodo);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            throwEmptyDescriptionException(Command.TODO);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private void throwEmptyDescriptionException(Command cmd) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        throw new EmptyDescriptionException("
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            PRINTED_OOPS "
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + PRINTED_DESCRIPTION_EMPTY_1"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + cmd.toString()"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + PRINTED_DESCRIPTION_EMPTY_2"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        );"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private void markTaskAsDone(int index) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        Task doneTask \u003d taskList.get(index);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        doneTask.markAsDone();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        ui.ackDone(doneTask);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private void addTask(Task newTask) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        taskList.add(newTask);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        ui.ackAddition(newTask, taskList.size());"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    "
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 172,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " * Superclass from which all Duke-specific exceptions inherit."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Creates a DukeException with a specific message."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param message Exception message"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 13
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " * Class representation of the Exception that occurs when an empty description is provided to a Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Creates an EmptyDescriptionException with a specific message."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param message Exception message"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public EmptyDescriptionException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 13
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "// Adapted from https://nus-cs2103-ay1920s1.github.io/website/schedule/week2/project.html "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " * Class representation of events in the list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Creates a new Event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param description Description of the Event"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param at Date at which the Event occurs"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public Event(String description, Date at) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Returns a String representation of this Event."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return String representation of this Event"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Gets the Date at which this Event occurs."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return Date at which the Event occurs"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public Date getAt() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 40
    }
  },
  {
    "path": "src/main/java/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " * Class representation of the Exception thrown when Duke is given an invalid command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Creates an InvalidCommandException with a specific message."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param message Exception message"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 13
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " * Class to handle parsing of user input."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Given a line, obtains the command that was present in that line."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param line The line input by the user"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return Command object representing the command that was present in the line"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @throws InvalidCommandException If there is no valid Command in the line"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public Command getCommandFromLine(String line) throws InvalidCommandException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return Command.getFromString(line.split(\" \")[0].trim());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Given a line, obtains the (numerical) index present in the line."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param line The line input by the user"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return The int index present in the line"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public int getIndexFromLine(String line) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            return Integer.parseInt(line.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Given a line, return the part of the line between the command and the provided delimiter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param line Line input by user"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param command Command text within line"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param delim Desired delimiter"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return String representation of the part of the line between the command and delimiter"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String getBeforeDelim(String line, String command, String delim) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            return line.split(command)[1].split(delim)[0].trim();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Given a line, return the part of the line after the provided delimiter."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param line Line input by user"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param command Command text within line"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param delim Desired delimiter"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return String representation of the part of the line after the delimiter"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String getAfterDelim(String line, String command, String delim) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            return line.split(command)[1].split(delim)[1].trim();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Returns true if the provided line is not the BYE command."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param line Line input by user"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return true if the provided line is not the BYE command, false otherwise"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public boolean isNotByeCommand(String line) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return !line.trim().equals(Command.BYE.toString());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Gets the argument from the line input by user, i.e the part of the line excluding the command"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param line Line input by user"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param command String representing the command within the line"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return The argument within the line"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String getArg(String line, String command) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            return line.split(command)[1].trim();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 87
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " * Class to handle interfacing with the data file."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private DateParser dateParser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Constructs a Storage object with a given date parser and a given filepath."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param dateParser DateParser object to handle the dates within the file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param filePath Path of the data file"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public Storage(DateParser dateParser, String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        this.dateParser \u003d dateParser;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Reads the tasks from the data file; returns them in a TaskList object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return TaskList representation of the contents of the data file"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public TaskList readDataFile() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        Scanner inStream;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        TaskList taskList \u003d new TaskList(Duke.MAX_TASKS);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            inStream \u003d new Scanner(new FileInputStream(filePath));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            while (inStream.hasNextLine()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                String line \u003d inStream.nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                switch (line.charAt(0)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                case \u0027T\u0027:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    taskList.add(new Todo("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                        line.substring(2, line.length())"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    ));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                case \u0027E\u0027:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    String eventLine \u003d line.substring(2, line.length());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    taskList.add(new Event("
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                        eventLine.split(\"/\")[0],"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                        dateParser.parse("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                            eventLine.split(\"/\")[1]"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                        )"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    ));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                case \u0027D\u0027:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    String deadlineLine \u003d line.substring(2, line.length());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    taskList.add(new Deadline("
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                        deadlineLine.split(\"/\")[0],"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                        dateParser.parse("
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                            deadlineLine.split(\"/\")[1]"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                        )"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    ));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                if (line.charAt(1) \u003d\u003d \u00271\u0027) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    taskList"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    .get(taskList.size() - 1)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                        .markAsDone();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            inStream.close();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            System.out.println(\"Data file not found, starting with empty task list\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return new TaskList(Duke.MAX_TASKS);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Writes the provided TaskList to the data file."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param taskList The TaskList to be written"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public void writeDataFile(TaskList taskList) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        PrintWriter outStream;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            outStream \u003d new PrintWriter(new FileOutputStream(filePath));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            for (Task t : taskList) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                outStream.println(saveTask(t));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            outStream.close();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private String saveTask(Task t) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        String doneChar \u003d (t.isDone ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        String classChar;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        String timeStr;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        if (t instanceof Todo) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            classChar \u003d \"T\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        } else if (t instanceof Event) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            classChar \u003d \"E\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        } else if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            classChar \u003d \"D\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            classChar \u003d \" \";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        if (t instanceof Event) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            timeStr \u003d \"/\" + dateParser.format("
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                ((Event)t).getAt()"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            );"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        } else if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            timeStr \u003d \"/\" + dateParser.format("
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                ((Deadline)t).getBy()"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            );"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            timeStr \u003d \"\";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return classChar + doneChar + t.getDescription() + timeStr;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 145
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "// @@author CS2103/T Software Engineering AY1920S1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "// Referenced from https://nus-cs2103-ay1920s1.github.io/website/schedule/week2/project.html"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "// with minor modifications "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " * Superclass from which all list items inherit."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Constructs a Task with a description."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param description A String representation of this Task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Gets the status icon of this Task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return A String containing the status icon of this Task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return (isDone ? \"O\" : \" \"); "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Returns a String representation of this Task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return A String representation of this Task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return \"[\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + getStatusIcon()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + \"] \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + description;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Returns the description of this Task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return Description of this Task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 57,
      "-": 1
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " * Class to represent a list of Tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "public class TaskList extends ArrayList\u003cTask\u003e {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Constructs a TaskList with the given size."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param size Size of the TaskList"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public TaskList(int size) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        super(size);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Search the TaskList for all Tasks which have description containing the search string."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param searchStr Search term"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return A TaskList of all Tasks whose descriptions have the search term as a substring"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public TaskList search(String searchStr) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        TaskList newList \u003d new TaskList(super.size());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        for (int i \u003d 0; i \u003c super.size(); i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            Task current \u003d super.get(i);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            if (current"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                .getDescription()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                .toLowerCase()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                .contains("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    searchStr.toLowerCase()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                )"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            ) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                newList.add(current);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return newList;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 44
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "// Adapted from https://nus-cs2103-ay1920s1.github.io/website/schedule/week2/project.html "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " * Class representation of a Todo in the list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Constructs a Todo with a description."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param description A string description of this Todo"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Returns a String representation of this Todo"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return A string representation of this Todo"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 25
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " * Class to handle interfacing with the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    // Strings that Duke will output"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private static final String PRINTED_LONG_LINE \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private static final String PRINTED_GREETING \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private static final String PRINTED_BYE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private static final String PRINTED_HEADER_LIST \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private static final String PRINTED_HEADER_DONE \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private static final String PRINTED_HEADER_SEARCH \u003d \"Here are the tasks matching the following query: \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private static final String PRINTED_INDEX_OUT_OF_BOUNDS_EXCEPTION \u003d"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        \"You have entered an invalid index. Please try again.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Prints a goodbye message to the user, and closes off the input Scanner."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public void printGoodbye() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        printWithLongLines(PRINTED_BYE);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        input.close();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Prints a greeting to the user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public void printGreeting() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        printWithLongLines(PRINTED_GREETING);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Reads the next line of input from the user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return The next line of input from the user"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String nextLine() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return input.nextLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Acknowledges the user\u0027s deletion of a Task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param deletedTask The Task that was deleted"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param listSize The new size of the TaskList"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public void ackDeletion(Task deletedTask, int listSize) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        printWithLongLines("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            \"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + deletedTask"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + \"\\nNow you have \" "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + listSize"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + \" tasks in the list.\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        );"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Acknowledges the user\u0027s completion of a Task."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param doneTask The Task that was done"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public void ackDone(Task doneTask) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        printWithLongLines("
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            PRINTED_HEADER_DONE"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + doneTask"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        );"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Acknowledge the addition of a Task."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param newTask The Task that was newly added"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param listSize The new size of the TaskList"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public void ackAddition(Task newTask, int listSize) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        printWithLongLines("
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + newTask"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + \"\\nNow you have \" "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + listSize"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + \" tasks in the list.\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        );"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Prints the provided TaskList to the user."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param taskList The TaskList to be printed"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public void printList(TaskList taskList) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        printListWithPreamble(taskList, PRINTED_HEADER_LIST);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public void displaySearchResults(TaskList taskList, String query) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        printListWithPreamble(taskList, PRINTED_HEADER_SEARCH + query + \"\\n\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Advises the user of the required date format."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param format The expected date format"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public void adviseDateFormat(String format) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        printWithLongLines(\"Required date format: \" + format);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Displays an Exception\u0027s message to the user."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param e The Exception to be displayed"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public void printException(Exception e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        printWithLongLines(e.getMessage());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Displays an explanatory note to the user that explains an IndexOutOfBoundsException."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public void printIndexOutOfBoundsException() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        printWithLongLines(PRINTED_INDEX_OUT_OF_BOUNDS_EXCEPTION);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private void printWithLongLines(String stringToPrint) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            PRINTED_LONG_LINE"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + stringToPrint"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + PRINTED_LONG_LINE"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        );"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private void printListWithPreamble(TaskList taskList, String preamble) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        String wholeList \u003d preamble + \"\\n\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        "
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            wholeList +\u003d String.valueOf(i + 1)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                + \".\""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                + taskList.get(i);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            "
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            if (i \u003c taskList.size() - 1) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                wholeList +\u003d \"\\n\";"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        printWithLongLines(wholeList);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    "
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 154
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public void getBy_valid_success() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            Date d1 \u003d new SimpleDateFormat(\"ddMMyy\").parse(\"070417\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            Deadline dl1 \u003d new Deadline(\"Finish assignment\", d1);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            assertEquals(dl1.getBy(), d1);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        catch (Exception e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            fail(e.getMessage());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 21
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public void getBy_valid_success() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            Date d1 \u003d new SimpleDateFormat(\"ddMMyy\").parse(\"070417\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            Event ev1 \u003d new Event(\"Project meeting\", d1);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            assertEquals(ev1.getAt(), d1);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        catch (Exception e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            fail(e.getMessage());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 20
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "event project meeting /at tomorrow 2-4pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "deadline return book /by sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "bye"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "LeowWB": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            )"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "LeowWB": 22
    }
  }
]
