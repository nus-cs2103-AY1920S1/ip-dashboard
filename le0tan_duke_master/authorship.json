[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "le0tan"
        },
        "content": "//    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "le0tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "le0tan"
        },
        "content": "//checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "le0tan"
        },
        "content": "//    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "le0tan"
        },
        "content": "//}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "le0tan"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "le0tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "le0tan"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    compile group: \u0027org.json\u0027, name: \u0027json\u0027, version: \u002720190722\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "le0tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "le0tan"
        },
        "content": "test {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "le0tan": 24,
      "-": 19
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "le0tan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import org.json.JSONException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public static final DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            tasks \u003d new TaskList(storage.loadFromSaveFile());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            tasks \u003d new TaskList(storage.loadFromSaveFile());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "le0tan"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "le0tan"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "le0tan"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "le0tan"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "le0tan"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public static void main(String[] args) throws JSONException, IOException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "le0tan": 58,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "le0tan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "le0tan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public DukeException(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        return \"duke.DukeException: \" + this.getMessage();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "le0tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "le0tan": 12
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "le0tan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "le0tan"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    private static String[] splitByKeyword(String input, String keyword) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            String[] res \u003d new String[2];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            index \u003d input.indexOf(keyword);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            if (index \u003d\u003d -1)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "le0tan"
        },
        "content": "                throw new DukeException(\"No keyword \" + keyword + \" is found.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            res[0] \u003d input.substring(0, index - 1);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            if (res[0].length() \u003d\u003d 0)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "le0tan"
        },
        "content": "                throw new DukeException(\"No description found before keyword \" + keyword + \".\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            res[1] \u003d input.substring(index + keyword.length() + 1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            if (res[1].length() \u003d\u003d 0)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "le0tan"
        },
        "content": "                throw new DukeException(\"No description found after keyword \" + keyword + \".\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            return res;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            throw new DukeException(\"Please check your format around keyword \" + keyword);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public static Command parse(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        if (userInput.matches(\"bye\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        } else if (userInput.matches(\"list\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        } else if (userInput.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            return new DoneCommand(Integer.parseInt(userInput.split(\" \")[1]) - 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        } else if (userInput.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            return new DeleteCommand(Integer.parseInt(userInput.split(\" \")[1]) - 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        } else if (userInput.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            if (userInput.length() \u003d\u003d 4)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "le0tan"
        },
        "content": "                throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            String restOfInput \u003d userInput.substring(5);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            return new AddCommand(new ToDo(restOfInput));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        } else if (userInput.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            if (userInput.length() \u003d\u003d 8)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "le0tan"
        },
        "content": "                throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            userInput \u003d userInput.substring(9);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            String[] temp \u003d splitByKeyword(userInput, \"/by\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            return new AddCommand(new Deadline(temp[0], LocalDateTime.from(Duke.dateTimeFormatter.parse(temp[1]))));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        } else if (userInput.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            if (userInput.length() \u003d\u003d 5)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "le0tan"
        },
        "content": "                throw new DukeException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            userInput \u003d userInput.substring(6);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            String[] temp \u003d splitByKeyword(userInput, \"/at\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            return new AddCommand(new Event(temp[0], LocalDateTime.from(Duke.dateTimeFormatter.parse(temp[1]))));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "le0tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "le0tan": 60
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "le0tan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import org.json.JSONArray;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import org.json.JSONException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import org.json.JSONObject;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import org.json.JSONTokener;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "le0tan"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        this.filePath \u003d getSaveFilePath();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    private String getSaveFilePath() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        if (System.getProperty(\"os.name\").equals(\"Windows 10\"))"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            return \"/Users/uicfa/Downloads/data.json\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        else"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            return \"/Users/leo/Downloads/data.json\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    private void createSaveFile() throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        File file \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        if (!file.createNewFile()) throw new IOException();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        writeToSaveFile(\"{\\\"data\\\":[]}\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        Ui.showCreateSaveFileMessage();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    private JSONObject readSaveFile() throws IOException, JSONException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        // TODO: handle the exception where data.json doesn\u0027t exist or format is wrong"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        InputStream is;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            is \u003d new FileInputStream(this.filePath);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            createSaveFile();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            is \u003d new FileInputStream(this.filePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        BufferedReader buf \u003d new BufferedReader(new InputStreamReader(is));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        String line \u003d buf.readLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        while (line !\u003d null) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            sb.append(line).append(\"\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            line \u003d buf.readLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        return new JSONObject(new JSONTokener(sb.toString()));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    private void writeToSaveFile(String content) throws IOException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(this.filePath);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        fileWriter.write(content);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public void appendToSaveFile(Task task) throws IOException, JSONException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        JSONObject obj \u003d readSaveFile();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        obj.append(\"data\", task.toMap());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        writeToSaveFile(obj.toString());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public void syncSaveFile(TaskList tasks) throws IOException, JSONException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        JSONObject obj \u003d new JSONObject();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        obj.put(\"data\", new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        for (Task t : tasks.getList()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            obj.append(\"data\", t.toMap());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        writeToSaveFile(obj.toString());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public List\u003cTask\u003e loadFromSaveFile() throws IOException, JSONException, DukeException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        JSONObject obj \u003d readSaveFile();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        JSONArray dataArray \u003d obj.getJSONArray(\"data\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        for (int i \u003d 0; i \u003c dataArray.length(); i++) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            tasks.add(Task.fromJson(dataArray.getJSONObject(i)));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "le0tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "le0tan": 88
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "le0tan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import org.json.JSONException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "le0tan"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public void remove(int index) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public void addTask(Task task, Ui ui, Storage storage) throws IOException, JSONException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        storage.appendToSaveFile(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        ui.showAddTaskMessage(task, this);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "le0tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "le0tan": 42
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "le0tan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "le0tan"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public void closeScanner() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public static void formattedPrint(String content) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "le0tan"
        },
        "content": "                \"     \" + content + \"\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "le0tan"
        },
        "content": "                \"    ____________________________________________________________\\n    \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        formattedPrint(\"☹ OOPS!!! \" + errorMessage);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        showError(\"loading error\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public void showWelcomeMessage() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "le0tan"
        },
        "content": "                \"     Hello! I\u0027m Duke.\\n\" +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "le0tan"
        },
        "content": "                \"     What can I do for you?\\n\" +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "le0tan"
        },
        "content": "                \"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public void showTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            builder.append(\"\\n\" + \"     \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            builder.append(i + 1).append(\".\").append(tasks.get(i).toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        formattedPrint(builder.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public void showAddTaskMessage(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        String output \u003d \"Got it. I\u0027ve added this task: \" + \"\\n\" + \"       \""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "le0tan"
        },
        "content": "                + task.toString() + \"\\n\" + \"     \""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "le0tan"
        },
        "content": "                + \"Now you have \" + tasks.size() + (tasks.size() \u003d\u003d 1 ? \" task in the list.\" : \" tasks in the list.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        formattedPrint(output);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public void showDeleteTaskMessage(TaskList tasks, int index) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        String tempOut \u003d \"Noted. I\u0027ve removed this task: \" + \"\\n\" + \"       \" +"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "le0tan"
        },
        "content": "                tasks.get(index).toString() + \"\\n\" + \"     \" +"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "le0tan"
        },
        "content": "                \"Now you have \" + (tasks.size() - 1) +"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "le0tan"
        },
        "content": "                (tasks.size() - 1 \u003d\u003d 1 ? \" task in the list.\" : \" tasks in the list.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        formattedPrint(tempOut);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public void showDoneTaskMessage(TaskList tasks, int index) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        String tempOut \u003d \"Nice! I\u0027ve marked this task as done: \" + \"\\n\" + \"       \" +"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "le0tan"
        },
        "content": "                tasks.get(index).toString();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        formattedPrint(tempOut);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public void showExitMessage() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        formattedPrint(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public static void showCreateSaveFileMessage() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        formattedPrint(\"data.json not found. Created a new one for you~\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "le0tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "le0tan": 80
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "le0tan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "le0tan"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    final Task task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        tasks.addTask(this.task, ui, storage);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "le0tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "le0tan": 26
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "le0tan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "le0tan"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "le0tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "le0tan": 13
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "le0tan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "le0tan"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    final int index;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        storage.syncSaveFile(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        ui.showDeleteTaskMessage(tasks, index);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "le0tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "le0tan": 27
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "le0tan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "le0tan"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    final int index;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        storage.syncSaveFile(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        ui.showDoneTaskMessage(tasks, index);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "le0tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "le0tan": 27
    }
  },
  {
    "path": "src/main/java/duke/command/DukeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "le0tan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "le0tan"
        },
        "content": "public enum DukeCommand {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    BYE"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "le0tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "le0tan": 11
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "le0tan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "le0tan"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        ui.showExitMessage();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        ui.closeScanner();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "le0tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "le0tan": 18
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "le0tan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "le0tan"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        ui.showTasks(tasks);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "le0tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "le0tan": 17
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "le0tan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import org.json.JSONException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import org.json.JSONObject;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "le0tan"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public Deadline(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public Map\u003cString, Object\u003e toMap() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        return Map.of(\"type\", \"deadline\", \"description\", this.description, \"by\", Duke.dateTimeFormatter.format(this.by), \"is_done\", this.isDone);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public static Deadline fromJson(JSONObject json) throws JSONException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        // TODO: make sure the type is deadline"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        Deadline rtn \u003d new Deadline(json.getString(\"description\"), LocalDateTime.from(Duke.dateTimeFormatter.parse(json.getString(\"by\"))));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        rtn.isDone \u003d json.getBoolean(\"is_done\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        return rtn;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "le0tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "le0tan": 35
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "le0tan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import org.json.JSONException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import org.json.JSONObject;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "le0tan"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public Event(String description, LocalDateTime at) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public Map\u003cString, Object\u003e toMap() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        return Map.of(\"type\", \"event\", \"description\", this.description, \"at\", Duke.dateTimeFormatter.format(this.at), \"is_done\", this.isDone);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public static Event fromJson(JSONObject json) throws JSONException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        // TODO: make sure the type is event"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        Event rtn \u003d new Event(json.getString(\"description\"), LocalDateTime.from(Duke.dateTimeFormatter.parse(json.getString(\"at\"))));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        rtn.isDone \u003d json.getBoolean(\"is_done\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        return rtn;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "le0tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "le0tan": 35
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "le0tan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import org.json.JSONException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import org.json.JSONObject;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "le0tan"
        },
        "content": "abstract public class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public abstract Map\u003cString, Object\u003e toMap();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public static Task fromJson(JSONObject json) throws JSONException, DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        String type \u003d json.getString(\"type\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "le0tan"
        },
        "content": "                return Deadline.fromJson(json);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "le0tan"
        },
        "content": "                return Event.fromJson(json);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "le0tan"
        },
        "content": "                return ToDo.fromJson(json);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "le0tan"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "le0tan"
        },
        "content": "                throw new DukeException(\"JSON parse error\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "le0tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "le0tan": 47
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "le0tan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import org.json.JSONException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import org.json.JSONObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "le0tan"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public Map\u003cString, Object\u003e toMap() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        return Map.of(\"type\", \"todo\", \"description\", this.description, \"is_done\", this.isDone);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    public static ToDo fromJson(JSONObject json) throws JSONException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        // TODO: make sure the type is todo"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        ToDo rtn \u003d new ToDo(json.getString(\"description\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        rtn.isDone \u003d json.getBoolean(\"is_done\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        return rtn;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "le0tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "le0tan": 30
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "le0tan"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "le0tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "le0tan": 3
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "le0tan"
        },
        "content": "     Hello! I\u0027m duke.Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "le0tan"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "le0tan"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "le0tan"
        },
        "content": "       [T][?] borrow book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "le0tan"
        },
        "content": "     Now you have 1 task in the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "le0tan"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "le0tan"
        },
        "content": "     1.[T][?] borrow book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "le0tan"
        },
        "content": "     Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "le0tan"
        },
        "content": "       [T][?] borrow book"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "le0tan"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "le0tan"
        },
        "content": "       [D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "le0tan"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "le0tan"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "le0tan"
        },
        "content": "       [E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "le0tan"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "le0tan"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "le0tan"
        },
        "content": "     1.[T][?] borrow book"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "le0tan"
        },
        "content": "     2.[D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "le0tan"
        },
        "content": "     3.[E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "le0tan"
        },
        "content": "     Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "le0tan"
        },
        "content": "       [E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "le0tan"
        },
        "content": "     ☹ OOPS!!! The description of a todo cannot be empty."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "le0tan"
        },
        "content": "     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "le0tan"
        },
        "content": "     ☹ OOPS!!! No keyword /by is found."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "le0tan"
        },
        "content": "     ☹ OOPS!!! Please check your format around keyword /by"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "le0tan"
        },
        "content": "     ☹ OOPS!!! Please check your format around keyword /by"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "le0tan"
        },
        "content": "     ☹ OOPS!!! No keyword /by is found."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "le0tan"
        },
        "content": "     ☹ OOPS!!! No keyword /at is found."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "le0tan"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    "
      }
    ],
    "authorContributionMap": {
      "le0tan": 77
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "le0tan"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "le0tan"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "le0tan"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "le0tan"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "le0tan"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "le0tan"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "le0tan"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "le0tan"
        },
        "content": "todo"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "le0tan"
        },
        "content": "blah"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "le0tan"
        },
        "content": "deadline sth /at Sunday"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "le0tan"
        },
        "content": "deadline asd /by"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "le0tan"
        },
        "content": "deadline /by"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "le0tan"
        },
        "content": "deadline asd"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "le0tan"
        },
        "content": "event sth /by Mon 2-4pm"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "le0tan"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "le0tan": 15
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "le0tan"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "le0tan"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "le0tan"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "le0tan"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "le0tan"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "le0tan"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "le0tan"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "le0tan"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "le0tan"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "le0tan"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "le0tan"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "le0tan"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "le0tan"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "le0tan"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "le0tan": 21
    }
  }
]
