[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    protected LocalDateTime time \u003d null;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public void setDateTime(LocalDateTime time) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public String toStringintxt() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        return \"D,\" + super.toStringintxt() + \",\" + by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Crisgu": 23
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            tasks \u003d new TaskList(storage.loadtxt());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        while(sc.hasNextLine()){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            String s \u003d sc.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            String[] a \u003d Parser.parse(s);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            switch (a[0]) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                case \"bye\" :"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                    ui.bye();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                case \"list\" :"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                    list(tasks.getlist());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                    int n \u003d Integer.parseInt(a[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                    done(tasks.getlist(), n-1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                    try{"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                        todo(tasks.getlist(),s);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                    catch (ErrorException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                    try{"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                        event(tasks.getlist(),s);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                    catch (ErrorException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                    try{"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                        deadline(tasks.getlist(),s);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                    catch (ErrorException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                    int m \u003d Integer.parseInt(a[1]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                    delete(tasks.getlist(), m-1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                    try{"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                        other(s);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                    catch (ErrorException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        File f \u003d new File(\"data\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        f.mkdir();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public void todo(ArrayList\u003cTask\u003elist,String s) throws ErrorException{"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        if (s.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            throw new ErrorException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            String td \u003d s.substring(5);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            Task t \u003d new Todo(td);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            list.add(t);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            ui.drawline();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            System.out.println(\"     \" + t);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            System.out.println(\"     Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            ui.drawline();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            storage.addtask(tasks.getlist());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public void deadline(ArrayList\u003cTask\u003elist,String s) throws ErrorException{"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        if (s.length() \u003d\u003d 8) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            throw new ErrorException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            int sIndex \u003d s.indexOf(\"/\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            int firstIndex \u003d sIndex - 1;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            int secondIndex \u003d sIndex + 4;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            String deadlineDescription \u003d s.substring(9, firstIndex);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            String deadlineBy \u003d s.substring(secondIndex);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            Deadline d \u003d new Deadline(deadlineDescription, deadlineBy);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            tasks.timeform(deadlineBy,d);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public void event(ArrayList\u003cTask\u003elist,String s) throws ErrorException{"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        if (s.length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            throw new ErrorException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            int sIndex \u003d s.indexOf(\"/\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            int firstIndex \u003d sIndex - 1;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            int secondIndex \u003d sIndex + 4;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            String eventDescription \u003d s.substring(6, firstIndex);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            String eventAt \u003d s.substring(secondIndex);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            Event event \u003d new Event(eventDescription, eventAt);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            tasks.timeform(eventAt,event);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public void other(String s) throws ErrorException{"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        throw new ErrorException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public void delete(ArrayList\u003cTask\u003elist,int p){"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        Task rt \u003d list.get(p);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        ui.drawline();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        System.out.println(\"     Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        System.out.println(\"     \"+rt);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        list.remove(p);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        System.out.println(\"     Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        ui.drawline();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        storage.addtask(tasks.getlist());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public void list(ArrayList\u003cTask\u003elist){"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        ui.drawline();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        tasks.showlist();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        ui.drawline();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public void echo(ArrayList\u003cTask\u003elist,Task t){"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        list.add(t);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        ui.drawline();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        System.out.println(\"     added: \"+t.getName());"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        ui.drawline();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public void done(ArrayList\u003cTask\u003elist,int k){"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        ui.drawline();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        list.get(k).setDone();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        System.out.println(\"     [✓]\"+list.get(k).getName());"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        ui.drawline();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        storage.addtask(tasks.getlist());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Crisgu": 174,
      "-": 4
    }
  },
  {
    "path": "src/main/java/ErrorException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "public class ErrorException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public ErrorException(String msg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Crisgu": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Crisgu"
        },
        "content": " * Represents"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Crisgu"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    protected LocalDateTime time \u003d null;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public void setDateTime(LocalDateTime time) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public String toStringintxt() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        return \"E,\" + super.toStringintxt() + \",\" + at;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Crisgu": 30
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public static String[] parse(String s) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        return s.split(\" \");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Crisgu": 6
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    private String filePath \u003d \"\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public ArrayList\u003cTask\u003e loadtxt() throws ErrorException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        ArrayList\u003cTask\u003e arrlist \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            File txtfile \u003d new File(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            Scanner s \u003d new Scanner(txtfile);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            String txttasks \u003d s.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            String[] txtsplit \u003d txttasks.split(\",\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            if (txtsplit[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                String description \u003d txtsplit[2];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                Task todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                if (txtsplit[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                    todo.setDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                arrlist.add(todo);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            } else if (txtsplit[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                String description \u003d txtsplit[2];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                String at \u003d txtsplit[3];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                Task event \u003d new Event(description, at);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                if (txtsplit[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                    event.setDone();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                arrlist.add(event);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                String description \u003d txtsplit[2];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                String by \u003d txtsplit[3];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                Task deadline \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                if (txtsplit[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                    deadline.setDone();;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                arrlist.add(deadline);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            throw new ErrorException(\"File not found\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            return arrlist;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        FileWriter writer \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        writer.write(textToAdd);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public void addtask(ArrayList\u003cTask\u003e arrlist) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        String file \u003d \"data/tasks.txt\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        StringBuilder build \u003d new StringBuilder();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            for (int i \u003d 0; i \u003c arrlist.size(); i++) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                if (i \u003d\u003d arrlist.size() - 1) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                    build.append(arrlist.get(i).toStringintxt());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                    build.append(arrlist.get(i).toStringintxt()+\"\\n\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            String text \u003d build.toString();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            writeToFile(file, text);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            System.out.println(\"Error : \" + e.getMessage());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Crisgu": 80
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    private boolean done;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        return done;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public void setName(String name) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public String gettype() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public void settype(String name) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        return (done ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        String s \u003d \"[\" + getStatusIcon() + \"] \" + getName();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public String toStringintxt() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        String check \u003d this.done\u003d\u003dtrue ? \"1,\" : \"0,\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        String str \u003d check + this.getName();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Crisgu": 51
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    private static DateTimeFormatter time \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    private ArrayList\u003cTask\u003e list \u003d null;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        return list.get(i);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public Task remove(int i) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        return list.remove(i);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public ArrayList\u003cTask\u003e getlist() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public void add(Task t) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        list.add(t);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public void delete(Task t) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        list.remove(t);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public void showlist() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            int itemIndex \u003d i + 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            String itemDisplay \u003d itemIndex + \".\" + list.get(i).toString();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            System.out.println(itemDisplay);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public void timeform(String dateTimeString, Task t) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            LocalDateTime dateTime \u003d LocalDateTime.parse(dateTimeString, time);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            if (t instanceof Event) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                Event e \u003d (Event) t;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                e.setDateTime(dateTime);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                Deadline d \u003d (Deadline) t;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                d.setDateTime(dateTime);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            add(t);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            System.out.println(t);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "            System.out.println(\"Error \" + \"Please enter date and time in right format.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Crisgu": 70
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public String toStringintxt() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        return \"T,\" + super.toStringintxt();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Crisgu": 16
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        drawline();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        System.out.println(\"     Error\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        drawline();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        drawline();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        System.out.println(\"     Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "                \"     What can I do for you?\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        drawline();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public static void drawline(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public static void bye(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        drawline();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        drawline();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Crisgu": 23
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        Deadline t \u003d new Deadline(\"Read Book\",\"2/2/2012 1900\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        String s \u003d \"[D][\\u2718] Read Book (by: 2/2/2012 1900)\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        assertEquals(s, t.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Crisgu": 15
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public void testToStringintxt() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        Todo t \u003d new Todo(\"dinner\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        String s \u003d \"T,0,dinner\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        assertEquals(s, t.toStringintxt());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        Todo t \u003d new Todo(\"read book\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        String s \u003d \"[T][\\u2718] read book\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "        assertEquals(s, t.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Crisgu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Crisgu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Crisgu": 23
    }
  }
]
