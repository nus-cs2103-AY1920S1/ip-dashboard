[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "test {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 17,
      "-": 15
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " * AddCommand is a Command, specifically for todo, event and deadlines"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  String type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  String taskDescription;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  String time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public AddCommand(String type, String taskDescription, String time) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    this.type \u003d type;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    this.time \u003d time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public AddCommand(String type, String taskDescription) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    this.type \u003d type;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      // Create ToDo object"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      ToDo t \u003d new ToDo(taskDescription);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      tasks.addTask(t);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      // Printing output"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      ui.showTopBorder();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\n\\tGot it! I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\n\\t\" + t.toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\n\\tNow you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      ui.showBottomBorder();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      // Saving to text file"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      String textToAdd \u003d \"T | 0 | \" + taskDescription + \"\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      storage.saveTask(textToAdd);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    } else if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      // Create DeadLine object"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      DeadLine d \u003d new DeadLine(taskDescription, time);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      tasks.addTask(d);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      // Printing Output"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      ui.showTopBorder();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\n\\tGot it! I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\n\\t\" + d.toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\n\\tNow you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      ui.showBottomBorder();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      // Saving to text file"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      String textToAdd \u003d \"D | 0 | \" + taskDescription + \" | \" + time + \"\\n\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      storage.saveTask(textToAdd);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    } else if (type.equals(\"event\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      // Create Event object"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      Event e \u003d new Event(taskDescription, time);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      tasks.addTask(e);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      // Printing Output"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      ui.showTopBorder();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\n\\tGot it! I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\n\\t\" + e.toString());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\n\\tNow you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      ui.showBottomBorder();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      // Saving to text file"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      String textToAdd \u003d \"E | 0 | \" + taskDescription + \" | \" + time + \"\\n\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      storage.saveTask(textToAdd);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 74
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public boolean isExit() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    return this instanceof ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 10
    }
  },
  {
    "path": "src/main/java/DeadLine.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " * Represents a DeadLine Task. A DeadLine object is represented by a description"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " * and a time it is due by."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "public class DeadLine extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  protected String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  // Constructor"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public DeadLine(String description, String by) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    this.by \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * Returns the deadline in which the task is due by"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * @return deadline"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public String getDeadLine() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    return this.by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    return \"[D] \" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 28
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " * Delete Command is a Command, specifically for delete operation."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  int index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    this.index \u003d index - 1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void execute(TaskList tasks, Ui ui, Storage storage) throws FileNotFoundException, IOException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    if (index \u003c 0 || index \u003e tasks.getSize() - 1) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      new InvalidCommand(\"Integer supplied should be within range of list.\").execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    // Execute command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    Task removed \u003d tasks.getTaskList().get(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    tasks.getTaskList().remove(index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    // Printing Output"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    ui.showTopBorder();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    System.out.println(\"\\n\\tNoted. I have removed this task: \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    System.out.println(\"\\n\\t\" + removed);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    System.out.println(\"\\n\\tNow you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    ui.showBottomBorder();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    // Save in .txt file"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    storage.deleteTask(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 37
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " * Done Command is a Command, specifically for a done operation."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  int index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public DoneCommand(int index) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    this.index \u003d index - 1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void execute(TaskList tasks, Ui ui, Storage storage) throws FileNotFoundException, IOException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    if (index \u003c\u003d 0 || index \u003e tasks.getSize() - 1) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      new InvalidCommand(\"Integer supplied should be within range of list.\").execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    // Execute Command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    tasks.getTaskList().get(index).setAsDone();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    Task doneTask \u003d tasks.getTaskList().get(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    // Printing Output"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    ui.showTopBorder();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    System.out.println(\"\\n\\tNice! I have marked this task as done: \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    System.out.println(\"\\n\\t\" + doneTask);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    ui.showBottomBorder();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    // Saving to file"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    storage.updateAsDone(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 37
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        ui.showTopBorder();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        System.out.println(\"\\n\\tHere are the tasks in your list: \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        ui.printTasks(tasks.getTaskList());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        ui.showBottomBorder();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "                System.out.println(\"Input / Output error!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 44,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 7
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " * Represents an Event Task. An event task is represented by a description and"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " * the timing the event happens."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  private String timing;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  // Constructor"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public Event(String description, String timing) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    this.timing \u003d timing;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * Returns the timing at which the event happens"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * @return timing"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public String getTiming() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    return this.timing;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    return \"[E] \" + super.toString() + \" (at: \" + timing + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 28
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    ui.showTopBorder();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    System.out.println(\"\\n\\tBye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    ui.showBottomBorder();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 9
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public FindCommand(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    // Printing output"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    ui.showTopBorder();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    System.out.println(\"\\n\\tHere are the matching tasks in your list: \");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    ui.printTasks(tasks.findTasks(description));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    ui.showBottomBorder();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 17
    }
  },
  {
    "path": "src/main/java/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  String errorMessage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public InvalidCommand(String errorMessage) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    // Printing Output"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    ui.showTopBorder();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    System.out.println(\"\\n\\t\" + errorMessage);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    ui.showBottomBorder();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 17
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    ui.showTopBorder();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    System.out.println(\"\\n\\tHere are the tasks in your list: \");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    ui.printTasks(tasks.getTaskList());"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    ui.showBottomBorder();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 10
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " * Parser object handles all input reading and prints the respective output."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * A method to determine the suffix, given the date"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * @param dateTime"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * @return String representing the suffix: \"st\", \"nd\", \"rd\" or \"th\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  private static String getSuffix(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    int day \u003d dateTime.getDayOfMonth();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    int remainder \u003d day % 10;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    if (remainder \u003d\u003d 1) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      return \"st\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    } else if (remainder \u003d\u003d 2) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      return \"nd\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    } else if (remainder \u003d\u003d 3) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      return \"rd\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      return \"th\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * A method to convert dates into the correct format of type: \"1st November"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * 2019, 2.30pm\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * @param dateTimeString"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * @return String representing dates in the format: \"1st November 2019, 2.30pm\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * @throws DateTimeParseException"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  private static String getDate(String dateTimeString) throws DateTimeParseException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    // Create formatter to recognise input pattern and convert to LocalDateTime"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    LocalDateTime dateTime \u003d LocalDateTime.parse(dateTimeString, formatter);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    String suffix \u003d getSuffix(dateTime) + \" of\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    // Format LocalDateTime"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    DateTimeFormatter wantedFormat \u003d DateTimeFormatter.ofPattern(\" d\u0027\" + suffix + \"\u0027 MMMM yyyy, h.mm a\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    String formattedDate \u003d wantedFormat.format(dateTime);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    return formattedDate;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public static Command parse(String fullCommand) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    String[] arr \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    String keyCommand \u003d arr[0].trim();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      if (keyCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        return new ListCommand();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      } else if (keyCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        return new ExitCommand();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      } else if (keyCommand.equals(\"find\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        String description \u003d arr[1].trim();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        return new FindCommand(description);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      } else if (keyCommand.equals(\"done\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        int index \u003d Integer.parseInt(arr[1].trim());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        return new DoneCommand(index);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      } else if (keyCommand.equals(\"delete\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        int index \u003d Integer.parseInt(arr[1].trim());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        return new DeleteCommand(index);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      } else if (keyCommand.equals(\"todo\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        if (arr.length !\u003d 2) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "          return new InvalidCommand(\"Description for todo should not be empty!\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "          String description \u003d arr[1].trim();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "          return new AddCommand(keyCommand, description);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      } else if (keyCommand.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        String info \u003d arr[1].trim();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        String[] wordArr \u003d info.split(\"/by\", 2);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        if (wordArr.length !\u003d 2) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "          return new InvalidCommand(\"Deadlines should be followed with a /by.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        String formattedDate \u003d getDate(wordArr[1].trim());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        return new AddCommand(keyCommand, wordArr[0].trim(), formattedDate);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      } else if (keyCommand.equals(\"event\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        String info \u003d arr[1].trim();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        String[] wordArr \u003d info.split(\"/at\", 2);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        if (wordArr.length !\u003d 2) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "          return new InvalidCommand(\"Events should be followed with a /at.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        String formattedDate \u003d getDate(wordArr[1].trim());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        return new AddCommand(keyCommand, wordArr[0].trim(), formattedDate);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        return new InvalidCommand(\"Sorry! I don\u0027t understand what that means :(\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      return new InvalidCommand(\"An integer should be followed by done / delete.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      return new InvalidCommand(\"Dates should be supplied in the format: dd/mm/yyyy hhmm.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 113
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " * Storage object holds the file, in which writing and reading will happen."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  private File f;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  // Helper method to add text to end of file"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  private static void appendToFile(String filePath, String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    fw.write(textToAppend);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    fw.close();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  // Helper method to overwrite the entire file"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  private static void writeToFile(String filePath, String textToWrite) throws IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    fw.write(textToWrite);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    fw.close();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public Storage(String filePath) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    this.f \u003d f;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * A method to create a list of tasks, from an input file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * @return List of tasks"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * @throws FileNotFoundException"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * @throws IOException"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public ArrayList\u003cTask\u003e load() throws FileNotFoundException, IOException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    // Read from the file location"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      String[] wordArr \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      String taskType \u003d wordArr[0].trim();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      int done \u003d Integer.parseInt(wordArr[1].trim());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      String description \u003d wordArr[2].trim();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        tasks.add(new ToDo(description));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        if (done \u003d\u003d 1) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "          tasks.get(tasks.size() - 1).setAsDone();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      } else if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        String time \u003d wordArr[3].trim();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        tasks.add(new DeadLine(description, time));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        if (done \u003d\u003d 1) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "          tasks.get(tasks.size() - 1).setAsDone();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        String time \u003d wordArr[3].trim();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        tasks.add(new Event(description, time));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        if (done \u003d\u003d 1) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "          tasks.get(tasks.size() - 1).setAsDone();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    sc.close();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    return tasks;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * Adds the task specified into the text file."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * @param textToAdd"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * @throws IOException"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void saveTask(String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    appendToFile(f.getAbsolutePath(), textToAdd);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * Deletes the task specified at index in the text file."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * @param index"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * @throws FileNotFoundException"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * @throws IOException"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void deleteTask(int index) throws FileNotFoundException, IOException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    int count \u003d 0;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    String finalText \u003d \"\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      if (count \u003d\u003d index) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        count++;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        continue;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        finalText +\u003d line + \"\\n\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        count++;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    sc.close();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    writeToFile(f.getAbsolutePath(), finalText);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * Updates the task specified at index as done in the text file."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * @param index"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * @throws FileNotFoundException"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * @throws IOException"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void updateAsDone(int index) throws FileNotFoundException, IOException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    int count \u003d 0;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    String finalText \u003d \"\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      if (count \u003d\u003d index) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        String newLine \u003d line.replace(\"| 0 |\", \"| 1 |\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        finalText +\u003d newLine + \"\\n\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        count++;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        finalText +\u003d line + \"\\n\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        count++;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    sc.close();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    writeToFile(f.getAbsolutePath(), finalText);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 146
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " * Task object is defined by a description. It has a field isDone to indicate"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " * whether the task is completed or not."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  private String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  private boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  // Constructor"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * Sets the task to be done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void setAsDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    this.isDone \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public String getDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    return description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * Returns a StatusIcon, based on whether the task is completed or not."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * @return StatusIcon"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public String getStatusIcon() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    // X to represent done, nothing to represent not done"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    return (isDone ? \"X\" : \" \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public boolean getBoolean() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    return isDone;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 44
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    this.taskList \u003d tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    return taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void addTask(Task t) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    taskList.add(t);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public int getSize() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    return taskList.size();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public ArrayList\u003cTask\u003e findTasks(String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    ArrayList\u003cTask\u003e foundList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      Task t \u003d taskList.get(i);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      if (t.getDescription().contains(description)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        foundList.add(t);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    return foundList;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 36
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " * Represents a ToDo Task. A ToDo task is represented by a description."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public ToDo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    return \"[T] \" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 16
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void showWelcome() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    String logo \u003d \" ____        _        \\n\" + \"|  _ \\\\ _   _| | _____ \\n\" + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        + \"| |_| | |_| |   \u003c  __/\\n\" + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    // Welcome message"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    System.out.println(\"\\n\\tHello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    System.out.println(\"\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    System.out.println(\"\\t____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void showTopBorder() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void showBottomBorder() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    System.out.println(\"\\t____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void printTasks(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\n\\t\" + (i + 1) + \". \" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void showLoadingError() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    showTopBorder();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    System.out.println(\"\\n\\tSorry! There was an error loading the files from the system.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    showBottomBorder();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public String readCommand() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    return command;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 43
    }
  },
  {
    "path": "src/test/java/DeadLineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "public class DeadLineTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void testStringConversion() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    assertEquals(\"[D] [ ] return book (by:Sunday)\", new DeadLine(\"return book\", \"Sunday\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    assertEquals(\"[D] [ ] sign book (by:Monday)\", new DeadLine(\"sign book\", \"Monday\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void testSetAsDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    DeadLine d \u003d new DeadLine(\"return book\", \"Sunday\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    d.setAsDone();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    assertTrue(d.getBoolean());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void testGetStatusIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    DeadLine d \u003d new DeadLine(\"return book\", \"Sunday\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    assertEquals(\" \", d.getStatusIcon());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    d.setAsDone();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    assertEquals(\"X\", d.getStatusIcon());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 28
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void testStringConversion() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    assertEquals(\"[E] [ ] project meeting (at:Sunday)\", new Event(\"project meeting\", \"Sunday\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    assertEquals(\"[E] [ ] CS2103 discussion (at:2pm)\", new Event(\"CS2103 discussion\", \"2pm\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void testSetAsDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    Event e \u003d new Event(\"project meeting\", \"Sunday\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    e.setAsDone();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    assertTrue(e.getBoolean());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void testGetStatusIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    Event e \u003d new Event(\"project meeting\", \"Sunday\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    assertEquals(\" \", e.getStatusIcon());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    e.setAsDone();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    assertEquals(\"X\", e.getStatusIcon());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 28
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void testStringConversion() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    assertEquals(\"[T] [ ] borrow book\", new ToDo(\"borrow book\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    assertEquals(\"[T] [ ] return book\", new ToDo(\"return book\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void testSetAsDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    ToDo t \u003d new ToDo(\"borrow book\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    t.setAsDone();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    assertTrue(t.getBoolean());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void testGetStatusIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    ToDo t \u003d new ToDo(\"borrow book\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    assertEquals(\" \", t.getStatusIcon());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    t.setAsDone();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    assertEquals(\"X\", t.getStatusIcon());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 28
    }
  }
]
