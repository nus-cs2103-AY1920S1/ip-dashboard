[
  {
    "path": "src/main/java/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "john0227"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "john0227"
        },
        "content": "    private String dueDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "john0227"
        },
        "content": "    protected DeadlineTask(String description, String dueDate) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "john0227"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "john0227"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "john0227"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "john0227"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "john0227"
        },
        "content": "    protected String getStatus() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "john0227"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.getStatus(), this.dueDate);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "john0227"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "john0227"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "john0227": 15
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "john0227"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "john0227"
        },
        "content": "    private static final String DUKE_HELLO \u003d \"Hello! I\u0027m Duke\\n    What can I do for you?\\n\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "john0227"
        },
        "content": "    private static final String DUKE_BYE \u003d \"Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "john0227"
        },
        "content": "    private static final String DUKE_LIST_TASKS \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "john0227"
        },
        "content": "    private static final String DUKE_MARK_AS_DONE \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "john0227"
        },
        "content": "    private static final String DUKE_ADD_TASK \u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "john0227"
        },
        "content": "    private static final String DUKE_DELETE_TASK \u003d \"Noted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "john0227"
        },
        "content": "    private static final String DUKE_NUMBER_OF_TASKS \u003d \"Now you have %d tasks in the list.\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "john0227"
        },
        "content": "    private static final String DUKE_LINE \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "john0227"
        },
        "content": "    private static final String DUKE_TAB4 \u003d \"    \";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "john0227"
        },
        "content": "    private static final String DUKE_TAB2 \u003d \"  \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "john0227"
        },
        "content": "    protected TaskList taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "john0227"
        },
        "content": "    protected Duke() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "john0227"
        },
        "content": "        this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "john0227"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "john0227"
        },
        "content": "    private void listTasks() throws DukeIllegalIndexException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "john0227"
        },
        "content": "        System.out.println(DUKE_TAB4 + DUKE_LIST_TASKS);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "john0227"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d this.taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "john0227"
        },
        "content": "            System.out.println(String.format(\"%s%d.%s\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "john0227"
        },
        "content": "                                             DUKE_TAB4,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "john0227"
        },
        "content": "                                             i,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "john0227"
        },
        "content": "                                             taskList.getTaskAt(i).getStatus()));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "john0227"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "john0227"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "john0227"
        },
        "content": "    private void addTask(Task task) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "john0227"
        },
        "content": "        System.out.println(DUKE_TAB4 + DUKE_ADD_TASK"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "john0227"
        },
        "content": "                           + DUKE_TAB4 + DUKE_TAB2 + taskList.addTask(task).getStatus()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "john0227"
        },
        "content": "                           + String.format(\"\\n\" + DUKE_TAB4 + DUKE_NUMBER_OF_TASKS,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "john0227"
        },
        "content": "                                   taskList.getSize()));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "john0227"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "john0227"
        },
        "content": "    protected void run() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "john0227"
        },
        "content": "//        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "john0227"
        },
        "content": "//                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "john0227"
        },
        "content": "//                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "john0227"
        },
        "content": "//                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "john0227"
        },
        "content": "//                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "john0227"
        },
        "content": "//        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "john0227"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "john0227"
        },
        "content": "        // Greet the user"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "john0227"
        },
        "content": "        System.out.print(DUKE_LINE"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "john0227"
        },
        "content": "                           + DUKE_TAB4 + DUKE_HELLO"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "john0227"
        },
        "content": "                           + DUKE_LINE);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "john0227"
        },
        "content": "        // Handle user input"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "john0227"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "john0227"
        },
        "content": "        while (!(command \u003d sc.nextLine()).equals(\"bye\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "john0227"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "john0227"
        },
        "content": "                System.out.print(DUKE_LINE);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "john0227"
        },
        "content": "                if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "john0227"
        },
        "content": "                    // List all the commands entered by user"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "john0227"
        },
        "content": "                    this.listTasks();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "john0227"
        },
        "content": "                } else if (command.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "john0227"
        },
        "content": "                    // Mark Task at index specified as done"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "john0227"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "john0227"
        },
        "content": "                        int index \u003d Integer.parseInt(command.substring(5));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "john0227"
        },
        "content": "                        taskList.markAsDoneTaskAt(index);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "john0227"
        },
        "content": "                        System.out.println(DUKE_TAB4 + DUKE_MARK_AS_DONE"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "john0227"
        },
        "content": "                                + DUKE_TAB4 + DUKE_TAB2"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "john0227"
        },
        "content": "                                + taskList.getTaskAt(index).getStatus());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "john0227"
        },
        "content": "                    } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "john0227"
        },
        "content": "                        throw new DukeIllegalArgumentException(\"☹ OOPS!!! You must include an index.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "john0227"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "john0227"
        },
        "content": "                } else if (command.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "john0227"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "john0227"
        },
        "content": "                        int index \u003d Integer.parseInt(command.substring(7));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "john0227"
        },
        "content": "                        System.out.println(DUKE_TAB4 + DUKE_DELETE_TASK"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "john0227"
        },
        "content": "                                + DUKE_TAB4 + DUKE_TAB2 + taskList.deleteTaskAt(index).getStatus()"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "john0227"
        },
        "content": "                                + String.format(\"\\n\" + DUKE_TAB4 + DUKE_NUMBER_OF_TASKS,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "john0227"
        },
        "content": "                                taskList.getSize()));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "john0227"
        },
        "content": "                    } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "john0227"
        },
        "content": "                        throw new DukeIllegalArgumentException(\"☹ OOPS!!! You must include an index.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "john0227"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "john0227"
        },
        "content": "                } else if (command.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "john0227"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "john0227"
        },
        "content": "                        command \u003d command.substring(5);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "john0227"
        },
        "content": "                    } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "john0227"
        },
        "content": "                        throw new DukeIllegalArgumentException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "john0227"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "john0227"
        },
        "content": "                    this.addTask(new TodoTask(command));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "john0227"
        },
        "content": "                } else if (command.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "john0227"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "john0227"
        },
        "content": "                        String[] cmd \u003d command.substring(9).split(\" /by \");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "john0227"
        },
        "content": "                        if (cmd.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "john0227"
        },
        "content": "                            // If deadline task does not have a due date"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "john0227"
        },
        "content": "                            throw new DukeIllegalArgumentException(\"☹ OOPS!!! Deadline dates must be \""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "john0227"
        },
        "content": "                                                                   + \"specified with /by.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "john0227"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "john0227"
        },
        "content": "                        if (cmd[0].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "john0227"
        },
        "content": "                            // If description of deadline is empty"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "john0227"
        },
        "content": "                            throw new DukeIllegalArgumentException(\"☹ OOPS!!! The description of a deadline \""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "john0227"
        },
        "content": "                                    + \"cannot be empty.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "john0227"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "john0227"
        },
        "content": "                        this.addTask(new DeadlineTask(cmd[0], cmd[1]));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "john0227"
        },
        "content": "                    } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "john0227"
        },
        "content": "                        throw new DukeIllegalArgumentException(\"☹ OOPS!!! The description of a deadline \""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "john0227"
        },
        "content": "                                + \"cannot be empty.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "john0227"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "john0227"
        },
        "content": "                } else if (command.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "john0227"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "john0227"
        },
        "content": "                        String[] cmd \u003d command.substring(6).split(\" /at \");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "john0227"
        },
        "content": "                        if (cmd.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "john0227"
        },
        "content": "                            // If deadline task does not have a due date"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "john0227"
        },
        "content": "                            throw new DukeIllegalArgumentException(\"☹ OOPS!!! Event dates must be \""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "john0227"
        },
        "content": "                                                                   + \"specified with /at.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "john0227"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "john0227"
        },
        "content": "                        if (cmd[0].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "john0227"
        },
        "content": "                            // If description of deadline is empty"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "john0227"
        },
        "content": "                            throw new DukeIllegalArgumentException(\"☹ OOPS!!! The description of an event \""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "john0227"
        },
        "content": "                                    + \"cannot be empty.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "john0227"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "john0227"
        },
        "content": "                        this.addTask(new EventTask(cmd[0], cmd[1]));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "john0227"
        },
        "content": "                    } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "john0227"
        },
        "content": "                        throw new DukeIllegalArgumentException(\"☹ OOPS!!! The description of an event \""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "john0227"
        },
        "content": "                                + \"cannot be empty.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "john0227"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "john0227"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "john0227"
        },
        "content": "                    throw new DukeIllegalCommandException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "john0227"
        },
        "content": "                }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "john0227"
        },
        "content": "            } catch (DukeIllegalIndexException | DukeIllegalCommandException | DukeIllegalArgumentException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "john0227"
        },
        "content": "                System.out.println(DUKE_TAB4 + e);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "john0227"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "john0227"
        },
        "content": "                System.out.print(DUKE_LINE);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "john0227"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "john0227"
        },
        "content": "        // Greet the user and quit program"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "john0227"
        },
        "content": "        System.out.println(DUKE_LINE"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "john0227"
        },
        "content": "                           + DUKE_TAB4 + DUKE_BYE"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "john0227"
        },
        "content": "                           + DUKE_LINE);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "john0227"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "john0227"
        },
        "content": "    "
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 2,
      "-": 1,
      "john0227": 138
    }
  },
  {
    "path": "src/main/java/DukeIllegalArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "john0227"
        },
        "content": "public class DukeIllegalArgumentException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "john0227"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "john0227"
        },
        "content": "    protected DukeIllegalArgumentException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "john0227"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "john0227"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "john0227"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "john0227"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "john0227"
        },
        "content": "        return this.message;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "john0227"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "john0227"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "john0227": 14
    }
  },
  {
    "path": "src/main/java/DukeIllegalCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "john0227"
        },
        "content": "public class DukeIllegalCommandException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "john0227"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "john0227"
        },
        "content": "    protected DukeIllegalCommandException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "john0227"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "john0227"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "john0227"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "john0227"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "john0227"
        },
        "content": "        return this.message;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "john0227"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "john0227"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "john0227": 14
    }
  },
  {
    "path": "src/main/java/DukeIllegalIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "john0227"
        },
        "content": "public class DukeIllegalIndexException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "john0227"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "john0227"
        },
        "content": "    protected DukeIllegalIndexException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "john0227"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "john0227"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "john0227"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "john0227"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "john0227"
        },
        "content": "        return this.message;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "john0227"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "john0227"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "john0227": 14
    }
  },
  {
    "path": "src/main/java/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "john0227"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "john0227"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "john0227"
        },
        "content": "    protected EventTask(String description, String time) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "john0227"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "john0227"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "john0227"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "john0227"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "john0227"
        },
        "content": "    protected String getStatus() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "john0227"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.getStatus(), this.time);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "john0227"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "john0227"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "john0227": 15
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "john0227"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "john0227"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "john0227"
        },
        "content": "//        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "john0227"
        },
        "content": "//                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "john0227"
        },
        "content": "//                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "john0227"
        },
        "content": "//                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "john0227"
        },
        "content": "//                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "john0227"
        },
        "content": "//        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "john0227"
        },
        "content": "        (new Duke()).run();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "john0227"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "john0227"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "john0227": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "john0227"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "john0227"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "john0227"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "john0227"
        },
        "content": "    protected Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "john0227"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "john0227"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "john0227"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "john0227"
        },
        "content": "    protected String getStatus() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "john0227"
        },
        "content": "        String icon \u003d (isDone ? \"\\u2713\" : \"\\u2718\"); //tick or X symbol"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "john0227"
        },
        "content": "        return String.format(\"[%s] %s\", icon, this.description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "john0227"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "john0227"
        },
        "content": "    protected void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "john0227"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "john0227"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "john0227"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "john0227"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "john0227"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "john0227"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "john0227"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "john0227": 25
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "john0227"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "john0227"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "john0227"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "john0227"
        },
        "content": "    protected List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "john0227"
        },
        "content": "    protected TaskList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "john0227"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "john0227"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "john0227"
        },
        "content": "    private String generateIndexExceptionMessage(int index) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "john0227"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "john0227"
        },
        "content": "        if (index \u003c 1) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "john0227"
        },
        "content": "            message \u003d \"☹ OOPS!!! Index has to be greater than zero.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "john0227"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "john0227"
        },
        "content": "            message \u003d String.format(\"☹ OOPS!!! You have less than %d tasks.\", index);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "john0227"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "john0227"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "john0227"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "john0227"
        },
        "content": "    // Index starts from 1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "john0227"
        },
        "content": "    protected void markAsDoneTaskAt(int index) throws DukeIllegalIndexException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "john0227"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "john0227"
        },
        "content": "            this.taskList.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "john0227"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "john0227"
        },
        "content": "            throw new DukeIllegalIndexException(this.generateIndexExceptionMessage(index));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "john0227"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "john0227"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "john0227"
        },
        "content": "    // Add task to the back of list and return added Task object"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "john0227"
        },
        "content": "    protected Task addTask(Task task) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "john0227"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "john0227"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "john0227"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "john0227"
        },
        "content": "    // Index starts from 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "john0227"
        },
        "content": "    protected Task getTaskAt(int index) throws DukeIllegalIndexException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "john0227"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "john0227"
        },
        "content": "            return this.taskList.get(index - 1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "john0227"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "john0227"
        },
        "content": "            throw new DukeIllegalIndexException(this.generateIndexExceptionMessage(index));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "john0227"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "john0227"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "john0227"
        },
        "content": "    protected int getSize() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "john0227"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "john0227"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "john0227"
        },
        "content": "    protected Task deleteTaskAt(int index) throws DukeIllegalIndexException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "john0227"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "john0227"
        },
        "content": "            return this.taskList.remove(index - 1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "john0227"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "john0227"
        },
        "content": "            throw new DukeIllegalIndexException(this.generateIndexExceptionMessage(index));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "john0227"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "john0227"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "john0227"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "john0227": 58
    }
  },
  {
    "path": "src/main/java/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "john0227"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "john0227"
        },
        "content": "    protected TodoTask(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "john0227"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "john0227"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "john0227"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "john0227"
        },
        "content": "    protected String getStatus() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "john0227"
        },
        "content": "        return \"[T]\" + super.getStatus();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "john0227"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "john0227"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "john0227"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "john0227": 12
    }
  }
]
