[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private static ArrayList\u003cTask\u003e arr;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        arr \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello I\u0027m Duke! \\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        while (! command.toLowerCase().equals(\"bye\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            isCommandValid(command);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                list(command);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (command.split(\" \")[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                int num \u003d Integer.parseInt(command.split(\" \")[1]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                markAsDone(num);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            } else if (command.split(\" \")[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                int spaceIndex \u003d command.indexOf(\" \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                addToDo(command.substring(spaceIndex + 1));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (command.split(\" \")[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                int spaceIndex \u003d command.indexOf(\" \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                int slashIndex \u003d command.indexOf(\"/\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                addDeadline(command.substring(spaceIndex + 1, slashIndex - 1), command.substring(slashIndex + 4));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (command.split(\" \")[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                int spaceIndex \u003d command.indexOf(\" \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                int slashIndex \u003d command.indexOf(\"/\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                addEvent(command.substring(spaceIndex + 1, slashIndex - 1), command.substring(slashIndex + 4));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            } else if (command.split(\" \")[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                deleteTask(Integer.parseInt(command.split(\" \")[1]));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again!\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "   }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "   private static void list(String command) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "       System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "       int index  \u003d 1;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "       for (Task task : arr) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "           System.out.println(String.format(\"%d. %s\", index , task.toString()));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "           index++;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "       }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "   }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "   private static void markAsDone(int num) throws DukeException{"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "       if (num \u003c\u003d 0 || num \u003e arr.size() ) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "           throw new DukeException(\"OOPS!!! Number is out of range\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "       } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "           arr.get(num - 1).done();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "           printDoneTask(arr.get(num-1));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "       }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "   }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "   private static void addToDo(String taskName) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "       ToDo newToDo \u003d new ToDo(taskName);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "       arr.add(newToDo);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "       printAddedTask();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "   }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "   private static void printDoneTask(Task t) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        System.out.println(String.format(\"    %s\", t));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "   }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "   private static void printAddedTask() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(String.format(\"    %s\", arr.get(arr.size()-1).toString()));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(String.format(\"Now you have %d tasks in the list.\", arr.size()));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "   }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "   private static void printDeletedTask(Task t) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        System.out.println(String.format(\"    %s\",t));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        System.out.println(String.format(\"Now you have %d tasks in the list.\", arr.size()));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "   }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "   private static void addDeadline(String taskName, String datetime) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        Deadline deadline \u003d new Deadline(taskName,datetime);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        arr.add(deadline);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        printAddedTask();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "   }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "   private static void addEvent(String taskName, String datetime) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        Event e \u003d new Event(taskName, datetime);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        arr.add(e);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        printAddedTask();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "   }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "   private static void deleteTask(int index) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        Task t \u003d arr.remove(index);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        printDeletedTask(t);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "   }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "   private static boolean isCommandValid(String str) throws DukeException{"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        if (! (str.split(\" \")[0].equals(\"list\") ||"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            str.split(\" \")[0].equals(\"todo\") ||"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            str.split(\" \")[0].equals(\"deadline\") ||"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            str.split(\" \")[0].equals(\"event\") ||"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            str.split(\" \")[0].equals(\"delete\") ||"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            str.split(\" \")[0].equals(\"done\")"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        )"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        ) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        } else if (! str.split(\" \")[0].equals(\"list\") \u0026\u0026 str.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            throw new DukeException(String.format(\"OOPS!!! The description of a %s cannot be empty.\", str.split(\" \")[0]));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        } else if (str.split(\" \")[0].equals(\"deadline\") \u0026\u0026 ! str.contains(\"/by\")) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a deadline has to be followed by \u0027/by\u0027.\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        } else if (str.split(\" \")[0].equals(\"event\") \u0026\u0026 ! str.contains(\"/at\")) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of an event has to be followed by \u0027/at\u0027.\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        } else if (str.split(\" \")[0].equals(\"deadline\") \u0026\u0026 str.split(\" \")[1].equals(\"/by\")) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        } else if (str.split(\" \")[0].equals(\"event\") \u0026\u0026 str.split(\" \")[1].equals(\"/at\")) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        } else if (str.split(\" \")[0].equals(\"delete\") \u0026\u0026  ! isNumeric(str.split(\" \")[1])) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            throw new DukeException(\"OOPS!!! The index of the array has to be specified.\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        } else if (str.split(\" \")[0].equals(\"delete\") \u0026\u0026 isNumeric(str.split(\" \")[1])"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                \u0026\u0026 (Integer.parseInt(str.split(\" \")[1]) \u003c 0 ||"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                Integer.parseInt(str.split(\" \")[1]) \u003e\u003d arr.size())) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            throw new DukeException(\"OOPS!!! Index out of bounds. It is larger or smaller than size of list.\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "       } else if (str.split(\" \")[0].equals(\"delete\") \u0026\u0026 str.split(\" \").length \u003e 2) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            throw new DukeException(\"OOPS!!! Please key in \u0027delete x\u0027, where x is the index that you want to delete!\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "       }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "   }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private static boolean isNumeric(String strNum) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return strNum.matches(\"-?\\\\d+(\\\\.\\\\d+)?\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixianggg": 84,
      "-": 81
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "\tpublic DukeException(String mesg) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "\t\tsuper(mesg);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixianggg": 4,
      "-": 3
    }
  }
]
