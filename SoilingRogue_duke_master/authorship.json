[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    static Deadline of(String description, String date) throws DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        if (description.length() \u003d\u003d 0 || date.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            throw new DukeException(\"â˜¹ OOPS!!! The description or date/time of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            return new Deadline(description, date);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    private Deadline(String description, String date) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    private String getDate() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        return String.format(\"  [D][%s]%s(by:%s)\", getStatusIcon(), getDescription(), getDate());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 25
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import java.util.InputMismatchException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    private static void printStandard(LinkedList\u003cString\u003e toPrint) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        String line \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        for (String string : toPrint) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            System.out.println(\"     \" + string);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    private static String getTasks(LinkedList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        return String.format(\"Now you have %d tasks in the list.\", list.size());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    private static void generateTaskMessage(String message, String task, LinkedList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        LinkedList\u003cString\u003e taskToAdd \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        taskToAdd.addLast(message);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        taskToAdd.addLast(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        taskToAdd.addLast(getTasks(list));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        printStandard(taskToAdd);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        String addString \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        String delString \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        LinkedList\u003cTask\u003e lst \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        LinkedList\u003cString\u003e def \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        LinkedList\u003cString\u003e error \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        LinkedList\u003cString\u003e hello \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        hello.addLast(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        hello.addLast(\"What can I do for you?\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        printStandard(hello);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        def.addLast(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            String[] arr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            String command \u003d arr[0];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            String next \u003d String.join(\" \", arr).replace(command, \"\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    LinkedList\u003cString\u003e bye \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    bye.addLast(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    printStandard(bye);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    System.exit(0);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    LinkedList\u003cString\u003e list \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    list.addLast(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    int i \u003d 1;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    for (Task task : lst) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        list.addLast(String.format(\"%d.%s\", i, task));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        ++i;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    printStandard(list);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        int val \u003d Integer.parseInt(arr[1]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        if (arr.length \u003e 2) throw new InputMismatchException();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        Task temp \u003d lst.get(val - 1);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        temp.markAsDone();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        LinkedList\u003cString\u003e done \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        done.addLast(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        done.addLast(String.format(\"%s\", temp));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        printStandard(done);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        error.addLast(\"â˜¹ OOPS!!! The index to be completed is not within the task list size.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        printStandard(error);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        error.removeFirst();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        error.addLast(\"â˜¹ OOPS!!! Please enter a valid number.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        printStandard(error);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        error.removeFirst();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    } catch (InputMismatchException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        error.addLast(\"â˜¹ OOPS!!! Please enter a single number.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        printStandard(error);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        error.removeFirst();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        Todo todoTask \u003d Todo.of(next);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        lst.addLast(todoTask);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        generateTaskMessage(addString, String.format(\"%s\", todoTask), lst);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        error.addLast(e.getMessage());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        printStandard(error);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        error.removeFirst();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        String[] deadlineArr \u003d next.split(\"/by\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        Deadline deadlineTask \u003d Deadline.of(deadlineArr[0], deadlineArr[1]);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        lst.addLast(deadlineTask);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        generateTaskMessage(addString, String.format(\"%s\", deadlineTask), lst);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        error.addLast(e.getMessage());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        printStandard(error);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        error.removeFirst();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        String[] eventArr \u003d next.split(\"/at\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        Event eventTask \u003d Event.of(eventArr[0], eventArr[1]);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        lst.addLast(eventTask);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        generateTaskMessage(addString, String.format(\"%s\", eventTask), lst);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        error.addLast(e.getMessage());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        printStandard(error);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        error.removeFirst();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        int del \u003d Integer.parseInt(arr[1]);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        if (arr.length \u003e 2) throw new InputMismatchException();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        Task removed \u003d lst.remove(del - 1);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        generateTaskMessage(delString, String.format(\"%s\", removed), lst);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        error.addLast(\"â˜¹ OOPS!!! The index to delete is not within the task list size.\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        printStandard(error);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        error.removeFirst();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        error.addLast(\"â˜¹ OOPS!!! Please enter a valid number.\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        printStandard(error);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        error.removeFirst();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    } catch (InputMismatchException e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        error.addLast(\"â˜¹ OOPS!!! Please enter a single number.\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        printStandard(error);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                        error.removeFirst();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    printStandard(def);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 147,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    private String dateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    static Event of(String description, String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        if (description.length() \u003d\u003d 0 || dateTime.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            throw new DukeException(\"â˜¹ OOPS!!! The description or date/time of an event cannot be empty.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            return new Event(description, dateTime);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    private Event(String description, String dateTime) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    private String getDateTime() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        return this.dateTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        return String.format(\"  [E][%s]%s(at:%s)\", getStatusIcon(), getDescription(), getDateTime());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 25
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    void markAsDone() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    String getStatusIcon() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    String getDescription() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 23
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    static Todo of(String description) throws DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        if (description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            throw new DukeException(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            return new Todo(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    private Todo(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        return String.format(\"  [T][%s]%s\", getStatusIcon(), getDescription());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 19
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "ï»¿Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "       [T][?] borrow book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "       [T][?] read book"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "       [D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "       [E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     â˜¹ OOPS!!! The description of a todo cannot be empty."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     1.  [T][?] borrow book"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     2.  [T][?] read book"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     3.  [D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     4.  [E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "       [D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "       [T][?] read book"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     1.  [T][?] borrow book"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     2.  [T][?] read book"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     3.  [E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 62
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "todo"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "blah"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "bye"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 12
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 21
    }
  }
]
