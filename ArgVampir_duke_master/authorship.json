[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "group \u0027seedu.duke\u0027 //need change here also or not"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 29,
      "-": 14
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public Deadline(String description, Date by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public Date getBy() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 19
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    protected static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public static void main(String[] args) throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        taskList \u003d Storage.load();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        String line \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        int x \u003d 1; //switch"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        do {        //to recycle the try catch block"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                while (sc.hasNext()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    String command \u003d sc.next();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        ui.farewell();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        x \u003d 2; //break the do while loop"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        String str \u003d line + \"     Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                            String num \u003d \"\" + (i + 1);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                            str +\u003d \"     \" + num + \".[\" + taskList.get(i).getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                                    + taskList.get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        System.out.print(str + line);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        int taskNum \u003d sc.nextInt();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        taskList.get(taskNum - 1).markAsDone();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        System.out.println(line + \"     Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                                + \"     [\" + taskList.get(taskNum - 1).getStatusIcon() + \"]\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                                + taskList.get(taskNum - 1).toString() + \"\\n\" + line);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        Storage.saveTaskList(taskList); //save file"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    } else if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        String wordsAfter \u003d sc.nextLine();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        if (wordsAfter.isEmpty()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        Task todoTask \u003d new Todo(wordsAfter);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        taskList.add(todoTask);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        System.out.print(line + \"     Got it. I\u0027ve added this task: \""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                                + \"\\n       \" + todoTask.toString() + \"\\n\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        System.out.print(\"     Now you have \" + taskList.size() + \" tasks in the list.\" + \"\\n\" + line);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        Storage.saveTaskList(taskList); //save file"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        String wordsAfter \u003d sc.nextLine();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        int pos \u003d wordsAfter.indexOf(\"/\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        Task dlTask \u003d new Deadline(wordsAfter.substring(0, pos), sdf.parse(wordsAfter.substring(pos + 3)));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        taskList.add(dlTask);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        System.out.print(line + \"     Got it. I\u0027ve added this task: \""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                                + \"\\n       \" + dlTask.toString() + \"\\n\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        System.out.print(\"     Now you have \" + taskList.size() + \" tasks in the list.\" + \"\\n\" + line);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        Storage.saveTaskList(taskList); //save file"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        String wordsAfter \u003d sc.nextLine();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        int pos \u003d wordsAfter.indexOf(\"/\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        Task eTask \u003d new Event(wordsAfter.substring(0, pos), sdf.parse(wordsAfter.substring(pos + 3)));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        taskList.add(eTask);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        System.out.print(line + \"     Got it. I\u0027ve added this task: \""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                                + \"\\n       \" + eTask.toString() + \"\\n\" + \"     Now you have \""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                                + taskList.size() + \" tasks in the list.\" + \"\\n\" + line);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        Storage.saveTaskList(taskList); //save file"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        int taskNum \u003d sc.nextInt();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        System.out.println(line + \"     Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        System.out.println(\"       \" + taskList.get(taskNum - 1).toString());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        taskList.remove(taskNum - 1);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        System.out.print(\"     Now you have \" + taskList.size() + \"tasks in the list.\\n\" + line);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        Storage.saveTaskList(taskList); //save file"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    } else if (command.equals(\"find\")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        String wordToFind \u003d sc.nextLine();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        ArrayList\u003cTask\u003e relatedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        for (Task task : taskList) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                            if (task.getDescription().contains(wordToFind)) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                                relatedTasks.add(task);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        ui.printFindTasks(relatedTasks);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        throw new DukeException(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            } catch (DukeException | ParseException error) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                System.out.print(line + \"     \" + error.getMessage() + \"\\n\" + line);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        } while (x \u003d\u003d 1);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        //Step 1. Formatting the window to look as expected."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        ScrollPane scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        VBox dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        TextField userInput \u003d new TextField();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        Button sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        Scene scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        });"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        });"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        });"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        });"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     */"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     */"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        VBox dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        TextField userInput \u003d new TextField();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        );"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     */"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        return \"Duke heard: \" + input;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 239,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public Event(String description, Date at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    Date getAt() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 19
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 30
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 49
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * Handles the conversion of String to Time"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * @param  time in String"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * @return Date"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public Date formatTime(String time) throws ParseException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        return sdf.parse(time);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 17
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private static File file \u003d new File(\"../duke.txt\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * Loads a file to add tasks into taskList"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * @return taskList"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public static ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                String[] task \u003d sc.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                String taskType \u003d task[0].trim();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                boolean isTaskDone \u003d task[2].trim().equals(\"1\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        Todo newTask \u003d new Todo(task[2].trim());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        if (isTaskDone) newTask.markAsDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        taskList.add(newTask);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        String eventDescription \u003d task[2].trim();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        String at \u003d task[3].trim();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        Event newEvent \u003d new Event(eventDescription, sdf.parse(at));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        if (isTaskDone) newEvent.markAsDone();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        taskList.add(newEvent);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        String deadlineDescription \u003d task[2].trim();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        String by \u003d task[3].trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        SimpleDateFormat sdf2 \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        Deadline newDeadline \u003d new Deadline(deadlineDescription, sdf2.parse(by));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        if (isTaskDone) newDeadline.markAsDone();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        taskList.add(newDeadline);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        } catch (FileNotFoundException | ParseException err) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * Saves the current taskList onto the hard drive"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public static void saveTaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                if (task instanceof Event) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    String str \u003d String.format(\"E | %s | %s | %s\\n\", task.isDone() ? \"1\" : \"0\","
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                            task.getDescription(), ((Event) task).getAt());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    fw.write(str);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    String str \u003d String.format(\"D | %s | %s | %s\\n\", task.isDone() ? \"1\" : \"0\","
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                            task.getDescription(), ((Deadline) task).getBy());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    fw.write(str);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    String str \u003d String.format(\"T | %s | %s\\n\", task.isDone() ? \"1\" : \"0\","
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                            task.getDescription());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    fw.write(str);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 93
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 30
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public void deleteTask(int taskNum) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        this.taskList.remove(taskNum);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 23
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 12
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    protected static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    String line \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public void greet() { //duke greet"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        System.out.println(line +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                \"     Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                \"     What can I do for you?\\n\" + line);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public void farewell() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        System.out.println(line + \"     Bye. Hope to see you again soon!\\n\" + line);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public void printFindTasks(ArrayList\u003cTask\u003e relatedTask) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        System.out.println(line + \"     Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        for (int i \u003d 0; i \u003c relatedTask.size(); i++) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            int num \u003d i + 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            System.out.println(\"     \" + num + \".\" + relatedTask.get(i));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        System.out.print(\"\\n\" + line);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 30
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 10
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "\u2028\u2028import static org.junit.jupiter.api.Assertions.assertEquals;\u2028\u2028"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "public class TodoTest {\u2028"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    @Test\u2028"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private void printTodo() {\u2028"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        Todo todo \u003d new Todo(\"learn guitar\");\u2028\u2028"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        assertEquals(\"[T][✘] learn guitar\", todo.toString());\u2028"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }\u2028"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 10
    }
  }
]
