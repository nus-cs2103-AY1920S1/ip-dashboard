[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CK"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CK"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CK"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CK"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CK"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CK"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CK"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CK"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CK"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CK": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CK"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CK"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CK"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CK"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CK"
        },
        "content": "        Scanner scan \u003d new Scanner (System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CK"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CK"
        },
        "content": "        ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CK"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CK"
        },
        "content": "        boolean flag \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CK"
        },
        "content": "        while (flag) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CK"
        },
        "content": "            String command \u003d scan.nextLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CK"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CK"
        },
        "content": "            if(command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CK"
        },
        "content": "                flag \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CK"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CK"
        },
        "content": "                System.out.println(\"      Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CK"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CK"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CK"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CK"
        },
        "content": "            else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CK"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CK"
        },
        "content": "                System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CK"
        },
        "content": "                for(int i \u003d 0 ;i \u003c taskArrayList.size();i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CK"
        },
        "content": "                    int number \u003d i + 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CK"
        },
        "content": "                    System.out.println(\"     \" + number + \".\" + taskArrayList.get(i));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CK"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CK"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CK"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CK"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CK"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CK"
        },
        "content": "            else if (command.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CK"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CK"
        },
        "content": "                            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CK"
        },
        "content": "                            String[] todotask \u003d command.split(\"todo \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CK"
        },
        "content": "                            if (todotask.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CK"
        },
        "content": "                                throw new DukeException(\" â˜¹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CK"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CK"
        },
        "content": "                             System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CK"
        },
        "content": "                            ToDo newToDoTask \u003d new ToDo(todotask[1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CK"
        },
        "content": "                            taskArrayList.add(newToDoTask);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CK"
        },
        "content": "                            int numberOfTask \u003d taskArrayList.size();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CK"
        },
        "content": "                            System.out.println(\"        \" + newToDoTask.toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CK"
        },
        "content": "                            System.out.println(\"     Now you have \" + numberOfTask + \" tasks in the list.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CK"
        },
        "content": "                            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CK"
        },
        "content": "                        } catch (DukeException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CK"
        },
        "content": "                            System.out.println(e);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CK"
        },
        "content": "                            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CK"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CK"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CK"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CK"
        },
        "content": "                   else if (command.startsWith(\"deadline \")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CK"
        },
        "content": "                        String[] deadlinetask \u003d command.split(\"deadline \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CK"
        },
        "content": "                        String deadlineString \u003d deadlinetask[1];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CK"
        },
        "content": "                        String[] deadlinearr \u003d deadlineString.split(\" /by \");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CK"
        },
        "content": "                        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CK"
        },
        "content": "                        System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CK"
        },
        "content": "                        Deadline deadline \u003d new Deadline(deadlinearr[0], deadlinearr[1]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CK"
        },
        "content": "                        taskArrayList.add(deadline);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CK"
        },
        "content": "                        int numberOfTask \u003d taskArrayList.size();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CK"
        },
        "content": "                        System.out.println(\"       \" + deadline.toString());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CK"
        },
        "content": "                        System.out.println(\"     Now you have \" + numberOfTask + \" tasks in the list.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CK"
        },
        "content": "                        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CK"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CK"
        },
        "content": "                  else   if (command.startsWith(\"event \")){"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CK"
        },
        "content": "                        String[] eventtask \u003d command.split(\"event \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CK"
        },
        "content": "                        String eventString \u003d eventtask[1];"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CK"
        },
        "content": "                        String[] eventarr \u003d eventString.split(\" /at \");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CK"
        },
        "content": "                        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CK"
        },
        "content": "                        System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CK"
        },
        "content": "                        Event event \u003d new Event(eventarr[0], eventarr[1]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CK"
        },
        "content": "                        taskArrayList.add(event);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CK"
        },
        "content": "                        int numberOfTask \u003d taskArrayList.size();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CK"
        },
        "content": "                        System.out.println(\"       \" + event.toString());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CK"
        },
        "content": "                        System.out.println(\"     Now you have \" + numberOfTask + \" tasks in the list.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CK"
        },
        "content": "                        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CK"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CK"
        },
        "content": "                 else    if (command.startsWith(\"done \")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CK"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CK"
        },
        "content": "                            String[] donearr \u003d command.split(\" \");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CK"
        },
        "content": "                            if (donearr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CK"
        },
        "content": "                                throw new DukeException(\" â˜¹ OOPS!!! Which task do you want to complete?\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CK"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CK"
        },
        "content": "                            if(donearr.length\u003cInteger.parseInt(donearr[1]) - 1) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CK"
        },
        "content": "                                throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CK"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CK"
        },
        "content": "                            int no \u003d Integer.parseInt(donearr[1]) - 1;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CK"
        },
        "content": "                            Task donetask \u003d taskArrayList.get(no);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CK"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CK"
        },
        "content": "                            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CK"
        },
        "content": "                            System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CK"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CK"
        },
        "content": "                            donetask.markAsDone();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CK"
        },
        "content": "                            System.out.println(\"       \" + donetask.toString());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CK"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CK"
        },
        "content": "                            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CK"
        },
        "content": "                        } catch (DukeException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CK"
        },
        "content": "                            System.out.println(e);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CK"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CK"
        },
        "content": "                        catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CK"
        },
        "content": "                            System.out.println(\" â˜¹ OOPS!!! Task number not found.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CK"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CK"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CK"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CK"
        },
        "content": "                 else if (command.startsWith(\"delete \")) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CK"
        },
        "content": "                     String[] deletearr \u003d command.split(\" \");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CK"
        },
        "content": "                     int number \u003d Integer.parseInt(deletearr[1]) - 1;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CK"
        },
        "content": "                     try {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CK"
        },
        "content": "                         Task deletetask \u003d taskArrayList.get(number);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CK"
        },
        "content": "                         System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CK"
        },
        "content": "                         System.out.println(\"     Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CK"
        },
        "content": "                         System.out.println(\"       \" + deletetask.toString());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CK"
        },
        "content": "                         taskArrayList.remove(number);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CK"
        },
        "content": "                         System.out.println(\"     Now you have \" + taskArrayList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CK"
        },
        "content": "                         System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CK"
        },
        "content": "                     }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CK"
        },
        "content": "                     catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CK"
        },
        "content": "                         System.out.println(\" â˜¹ OOPS!!! Task number not found.\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CK"
        },
        "content": "                     }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CK"
        },
        "content": "                 }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CK"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CK"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CK"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CK"
        },
        "content": "                        throw new DukeException(\" â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CK"
        },
        "content": "                }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CK"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CK"
        },
        "content": "            catch (DukeException e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CK"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CK"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "CK"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "CK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "CK"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CK": 132,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CK"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CK"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CK"
        },
        "content": "        super((message));"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CK"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CK": 7
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CK"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CK"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CK"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CK"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CK"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CK"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CK"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CK"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CK"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CK": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CK"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CK"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CK"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CK"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CK"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CK"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CK"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CK"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CK"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CK"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CK"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CK"
        },
        "content": "        return getStatusIcon() + \" \" + this.description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CK"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CK"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CK"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CK": 21
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CK"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CK"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CK"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CK"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CK"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CK"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CK": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CK"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CK"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CK"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CK"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CK"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CK"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CK"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CK"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CK"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CK"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CK"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CK"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CK"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CK"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CK"
        },
        "content": "done 7"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CK"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CK"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "CK": 17
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CK"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CK"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CK"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CK"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CK"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CK"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CK"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CK"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CK"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CK"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CK"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CK"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CK"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CK"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CK"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CK"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CK"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CK"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CK"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CK"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "CK": 21
    }
  }
]
