[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    archivesBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "test {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ManasVegi": 18,
      "-": 12
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "ManasVegi": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    private Calendar time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public Deadline(String des, Calendar time) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        super(des);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public Calendar getTime() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public String printTime() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        String jargon \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        switch (time.get(Calendar.DAY_OF_MONTH) % 10) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 1 : jargon \u003d \"st \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 2 : jargon \u003d \"nd \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 3 : jargon \u003d \"rd \";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        default : jargon \u003d \"th \";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        String nameOfMonth \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        switch (time.get(Calendar.MONTH)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 0 : nameOfMonth \u003d \"January\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 1 : nameOfMonth \u003d \"February\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 2 : nameOfMonth \u003d \"March\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 3 : nameOfMonth \u003d \"April\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 4 : nameOfMonth \u003d \"May\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 5 : nameOfMonth \u003d \"June\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 6 : nameOfMonth \u003d \"July\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 7 : nameOfMonth \u003d \"August\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 8 : nameOfMonth \u003d \"September\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 9 : nameOfMonth \u003d \"October\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 10 : nameOfMonth \u003d \"November\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 11 : nameOfMonth \u003d \"December\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        String hoursAndMinutes \u003d \"\" + time.get(Calendar.HOUR) + \":\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        if (time.get(Calendar.MINUTE) \u003c 10) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            hoursAndMinutes +\u003d \"0\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        hoursAndMinutes +\u003d time.get(Calendar.MINUTE);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        if (time.get(Calendar.AM_PM) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            hoursAndMinutes +\u003d \"am\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            hoursAndMinutes +\u003d \"pm\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        return time.get(Calendar.DAY_OF_MONTH) + jargon"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                + nameOfMonth + \", \""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                + time.get(Calendar.YEAR) + \". \""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                + hoursAndMinutes;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                + this.printTime() +  \")\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ManasVegi": 75
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    private static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    private static void rewriteFile(String filePath, ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        String textToAdd \u003d \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            String type \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            if (t instanceof Event) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                type \u003d \"E\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            } else if (t instanceof ToDo) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                type \u003d \"T\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            } else if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                type \u003d \"D\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            textToAdd +\u003d \"[\" + type + \"] -- \" + \"[\" + t.getStatusIcon() + \"] -- \" + t.getDescription();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            if (t instanceof Event) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                Calendar time \u003d ((Event) t).getTime();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                textToAdd +\u003d \" -- \" + time.get(Calendar.DAY_OF_MONTH) + \"/\" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                time.get(Calendar.MONTH) + \"/\" + time.get(Calendar.YEAR) + \" \";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                if (time.get(Calendar.HOUR_OF_DAY) \u003c 10) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    textToAdd +\u003d \"0\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                textToAdd +\u003d time.get(Calendar.HOUR_OF_DAY);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                if (time.get(Calendar.MINUTE) \u003c 10) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    textToAdd +\u003d \"0\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                textToAdd +\u003d time.get(Calendar.MINUTE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                Calendar time \u003d ((Deadline) t).getTime();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                textToAdd +\u003d \" -- \" + time.get(Calendar.DAY_OF_MONTH) + \"/\" +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        time.get(Calendar.MONTH) + \"/\" + time.get(Calendar.YEAR) + \" \";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                if (time.get(Calendar.HOUR_OF_DAY) \u003c 10) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    textToAdd +\u003d \"0\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                textToAdd +\u003d time.get(Calendar.HOUR_OF_DAY);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                if (time.get(Calendar.MINUTE) \u003c 10) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    textToAdd +\u003d \"0\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                textToAdd +\u003d time.get(Calendar.MINUTE);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            textToAdd +\u003d \"\\n\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        //hr is horizontal row"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        String hr \u003d \"______________________________________________________________________\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        System.out.println(hr);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        System.out.println(hr);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            File f \u003d new File(\"C:/Users/mtg-1/OneDrive/Documents/NUS/Y2S1/CS2103/repos/\" +"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    \"dukerepo/data/history.txt\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            Scanner reader \u003d new Scanner(f);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            while(reader.hasNextLine()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                String s \u003d reader.nextLine();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                String[] tempArray \u003d s.split(\" -- \");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                Task t;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                if (tempArray[0].equals(\"[E]\") || tempArray[0].equals(\"[D]\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    String dateTime \u003d tempArray[3];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    Calendar dateAndTime \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    String[] date \u003d dateTime.split(\" \")[0].split(\"/\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    int time \u003d Integer.parseInt(dateTime.split(\" \")[1]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    int hours \u003d time / 100;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    int minutes \u003d time % 100;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    dateAndTime.set(Integer.parseInt(date[2]),"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            Integer.parseInt(date[1]),"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            Integer.parseInt(date[0]),"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            hours,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            minutes);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    if (tempArray[0].equals(\"[D]\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        t \u003d new Deadline(tempArray[2], dateAndTime);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        t \u003d new Event(tempArray[2], dateAndTime);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                } else if (tempArray[0].equals(\"[T]\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    t \u003d new ToDo(tempArray[2]);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    throw new DukeException(\"Not a valid Task type\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                if (tempArray[1].equals(\"[+]\")) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    t.markAsDone();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                arr.add(t);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        } catch (IOException | DukeException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            System.err.println(e.getMessage());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        while(true) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            System.out.println(hr);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            String[] commandWords \u003d command.split(\" \");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            String order \u003d commandWords[0];"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            if (order.equals(\"done\")){"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                int index \u003d Integer.parseInt(commandWords[1]) - 1;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    if (index \u003e\u003d arr.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        throw new DukeException(\" :( OOPS!!! Requested task number is not available\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    Task temp \u003d arr.get(index);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    temp.markAsDone();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    System.out.println(\"  \" + temp);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    rewriteFile(\"C:/Users/mtg-1/OneDrive/Documents/NUS/Y2S1/CS2103/repos/\" +"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            \"dukerepo/data/history.txt\","
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            arr);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                } catch (DukeException | IOException de) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    System.err.println(de.getMessage());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    System.err.println(\" :( OOPS!!! Invalid format. Enter number of task to be marked as done.\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                } finally {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    System.out.println(hr);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            } else if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                System.out.println(hr);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            } else if(command.equals(\"list\")) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                for(int i \u003d 0; i \u003c arr.size(); i++) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    Task temp \u003d arr.get(i);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    System.out.println((i + 1) + \". \" + temp);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                System.out.println(hr);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                if (order.equals(\"todo\")) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        if (commandWords.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            throw new DukeException(\" :( OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            Task temp \u003d new ToDo(command.split(\"todo \")[1]);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            arr.add(temp);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            System.out.println(\" \" + temp);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            System.out.println(\"Now you have \" + arr.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        rewriteFile(\"C:/Users/mtg-1/OneDrive/Documents/NUS/Y2S1/CS2103/repos/\" +"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                \"dukerepo/data/history.txt\","
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                arr);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    } catch (DukeException | IOException de) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        System.err.println(de.getMessage());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    } finally {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        System.out.println(hr);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                } else if (order.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        if (commandWords.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            throw new DukeException(\" :( OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            if (command.split(\"/by\").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                throw new DukeException(\" :( OOPS!!! A deadline must have a time.\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                String instruction \u003d command.split(\"deadline \")[1];"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                String[] details \u003d instruction.split(\" /by \");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                String[] dateAndTime \u003d details[1].split(\" \");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                Calendar date \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                String[] dateArray \u003d dateAndTime[0].split(\"/\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                int time \u003d Integer.parseInt(dateAndTime[1]);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                int hours \u003d time / 100;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                int minutes \u003d time % 100;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                if (dateArray.length !\u003d 3) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                    throw new DukeException(\" :( OOPS!!! Invalid date format.\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                date.set(Integer.parseInt(dateArray[2]),"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                        (Integer.parseInt(dateArray[1]) - 1),"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                        Integer.parseInt(dateArray[0]),"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                        hours,"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                        minutes);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                Task temp \u003d new Deadline(details[0], date);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                arr.add(temp);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                System.out.println(\" \" + temp);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                System.out.println(\"Now you have \" + arr.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            rewriteFile(\"C:/Users/mtg-1/OneDrive/Documents/NUS/Y2S1/CS2103/repos/\" +"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                    \"dukerepo/data/history.txt\","
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                    arr);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    } catch (DukeException | IOException de) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        System.err.println(de.getMessage());"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    } finally {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        System.out.println(hr);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                } else if (order.equals(\"event\")){"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        if (commandWords.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            throw new DukeException(\" :( OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            if (command.split(\"/at\").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                throw new DukeException(\" :( OOPS!!! An event must have a time.\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                String instruction \u003d command.split(\"event \")[1];"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                String[] details \u003d instruction.split(\" /at \");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                String[] dateAndTime \u003d details[1].split(\" \");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                Calendar date \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                String[] dateArray \u003d dateAndTime[0].split(\"/\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                int time \u003d Integer.parseInt(dateAndTime[1]);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                int hours \u003d time / 100;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                int minutes \u003d time % 100;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                if (dateArray.length !\u003d 3) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                    throw new DukeException(\" :( OOPS!!! Invalid date format.\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                date.set(Integer.parseInt(dateArray[2]),"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                        (Integer.parseInt(dateArray[1]) - 1),"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                        Integer.parseInt(dateArray[0]),"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                        hours,"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                        minutes);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                Task temp \u003d new Event(details[0], date);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                arr.add(temp);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                System.out.println(\" \" + temp);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                System.out.println(\"Now you have \" + arr.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            rewriteFile(\"C:/Users/mtg-1/OneDrive/Documents/NUS/Y2S1/CS2103/repos/\" +"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                    \"dukerepo/data/history.txt\","
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                    arr);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    } catch (DukeException | IOException de) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        System.err.println(de.getMessage());"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    } finally {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        System.out.println(hr);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                } else if (order.equals(\"delete\")) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        if (commandWords.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            throw new DukeException(\" :( OOPS!!! Provided task number does not exist.\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            int index \u003d Integer.parseInt(commandWords[1]) - 1;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            if (index \u003e\u003d arr.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                throw new DukeException(\" :( OOPS!!! Task to be deleted is not available\");"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                Task temp \u003d arr.remove(index);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                System.out.println(\" \" + temp);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                System.out.println(\"Now you have \" + arr.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        rewriteFile(\"C:/Users/mtg-1/OneDrive/Documents/NUS/Y2S1/CS2103/repos/\" +"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                \"dukerepo/data/history.txt\","
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                arr);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    } catch (DukeException | IOException de) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        System.err.println(de.getMessage());"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        System.err.println(\" :( OOPS!!! Invalid format. Enter number of task to be deleted\");"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    } finally {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        System.out.println(hr);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        throw new DukeException(\" :( OOPS!!! I\u0027m sorry but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    } catch (DukeException de) {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        System.err.println(de.getMessage());"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    } finally {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        System.out.println(hr);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ManasVegi": 270,
      "-": 12
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ManasVegi": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    private Calendar time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public Event(String des, Calendar time) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        super(des);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public Calendar getTime() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public String printTime() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        String jargon \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        switch (time.get(Calendar.DAY_OF_MONTH) % 10) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 1 : jargon \u003d \"st \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 2 : jargon \u003d \"nd \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 3 : jargon \u003d \"rd \";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        default : jargon \u003d \"th \";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        String nameOfMonth \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        switch (time.get(Calendar.MONTH)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 0 : nameOfMonth \u003d \"January\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 1 : nameOfMonth \u003d \"February\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 2 : nameOfMonth \u003d \"March\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 3 : nameOfMonth \u003d \"April\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 4 : nameOfMonth \u003d \"May\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 5 : nameOfMonth \u003d \"June\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 6 : nameOfMonth \u003d \"July\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 7 : nameOfMonth \u003d \"August\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 8 : nameOfMonth \u003d \"September\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 9 : nameOfMonth \u003d \"October\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 10 : nameOfMonth \u003d \"November\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 11 : nameOfMonth \u003d \"December\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        String hoursAndMinutes \u003d \"\" + time.get(Calendar.HOUR) + \":\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        if (time.get(Calendar.MINUTE) \u003c 10) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            hoursAndMinutes +\u003d \"0\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        hoursAndMinutes +\u003d time.get(Calendar.MINUTE);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        if (time.get(Calendar.AM_PM) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            hoursAndMinutes +\u003d \"am\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            hoursAndMinutes +\u003d \"pm\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        return time.get(Calendar.DAY_OF_MONTH) + jargon"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                + nameOfMonth + \", \""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                + time.get(Calendar.YEAR) + \". \""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                + hoursAndMinutes;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                + this.printTime()"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                + \")\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ManasVegi": 75
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public Task(String des) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        description \u003d des;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public String getStatusIcon(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        return isDone ? \"+\" : \"-\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ManasVegi": 25
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public ToDo(String des) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        super(des);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ManasVegi": 10
    }
  }
]
