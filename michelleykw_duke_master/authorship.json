[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "group \u0027duke\u0027 // what to have here?"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    mainClassName \u003d \"Duke\" // what to have here?"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "test {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 23,
      "-": 17
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "E | 1 | project meeting | Sat Aug 24 14:00:00 SGT 2019"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "D | 1 | tutorial | Thu Sep 05 23:00:00 SGT 2019"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "T | 0 | tutorial"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "T | 0 | acc tutorial"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 4
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " * Represents a task manager."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " * A Duke object has a file with the list of tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " * Tasks can be added, deleted and updated."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    protected TaskList taskList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        } catch (FileNotFoundException f) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            System.out.println(f);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        } catch (ParseException p) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            System.out.println(p);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * This is the main method of the task manager."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @throws FileNotFoundException If file is not found."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @throws IOException If an input or output exception occurred."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @throws ParseException If a parse exception occurred."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public static void main(String[] args) throws FileNotFoundException,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            IOException, ParseException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        new Duke(\"/Users/michelleyong/Desktop/duke/data/duke.txt\").run();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Runs the task manager."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @throws IOException If an input or output exception occurred."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @throws ParseException If a parse exception occurred."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public void run() throws IOException, ParseException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        ui.printHello();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        Parser parser \u003d new Parser(sc);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            String text \u003d parser.nextCommand();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            String[] commandArr \u003d parser.breakDownCommand(text);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            String command \u003d parser.getCommand(commandArr);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    if (text.length() \u003c\u003d 4) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                        throw new DukeException();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    Todo todo \u003d parser.getTodo(text);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    taskList.addTask(todo);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    ui.printTaskAdded(todo, taskList.getSize());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    storage.appendTaskToFile(todo);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    ui.printTodoError();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    if (text.length() \u003c\u003d 8) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                        throw new DukeException();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    String[] descArr \u003d parser.breakDownDescription(text);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    Date date \u003d parser.getDate(descArr, storage);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    Deadline deadline \u003d"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                            new Deadline(parser.getDeadlineDesc(descArr), date);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    taskList.addTask(deadline);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    ui.printTaskAdded(deadline, taskList.getSize());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    storage.appendTaskToFile(deadline);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    ui.printDeadlineError();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    if (text.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                        throw new DukeException();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    String[] descArr \u003d parser.breakDownDescription(text);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    Date date \u003d parser.getDate(descArr, storage);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    Event event \u003d new Event(parser.getEventDesc(descArr), date);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    taskList.addTask(event);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    ui.printTaskAdded(event, taskList.getSize());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    storage.appendTaskToFile(event);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    ui.printEventError();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                taskList.printList();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    if (text.length() \u003c\u003d 4) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                        throw new DukeException();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    int num \u003d parser.getTaskNum(commandArr);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    if (num \u003e\u003d taskList.getSize()) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                        throw new DukeException();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    Task task \u003d taskList.markTaskAsDone(num);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    ui.printTaskDone(task);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    storage.updateTaskInFile(taskList.getList());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    ui.printNoSuchTaskError();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            } else if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                ui.printBye();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    if (text.length() \u003c\u003d 6) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                        throw new DukeException();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    int num \u003d parser.getTaskNum(commandArr);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    if (num \u003e\u003d taskList.getSize()) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                        throw new DukeException();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    Task removed \u003d taskList.removeTask(num);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    ui.printTaskRemoved(removed, taskList.getSize());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    storage.updateTaskInFile(taskList.getList());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    ui.printNoSuchTaskError();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            } else if (command.equals(\"find\")) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                String toFind \u003d parser.getKeyWord(text);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                ArrayList\u003cTask\u003e tasks \u003d taskList.getList();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                ArrayList\u003cTask\u003e taskFound \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    Task t \u003d tasks.get(i);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    if (t.hasKeyword(toFind)) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                        taskFound.add(t);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                taskList.printTaskFound(taskFound);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    throw new DukeException();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    ui.printUnknownCommandError();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 159,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " * Handles the user command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public Parser(Scanner sc) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        this.sc \u003d sc;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Gets the next command from user input."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The next line of command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String nextCommand() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Separates the command and description."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param str The command string."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return A string array with command and description separated."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String[] breakDownCommand(String str) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return str.split(\" \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Separates the description and date."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param str The command string."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return A string array with description and date separated."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String[] breakDownDescription(String str) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return str.split(\"/\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Gets the command of the task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param arr A string array with command and description separated."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The command string."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String getCommand(String[] arr) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return arr[0];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Gets the todo based on the command line."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param line The command list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The todo."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public Todo getTodo(String line) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        String task \u003d line.substring(5);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        Todo todo \u003d new Todo(task);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return todo;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Gets the description of the deadline."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param descArr The string array with command and description separated."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The description of the deadline."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String getDeadlineDesc(String[] descArr) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return descArr[0].substring(9, descArr[0].length() - 1);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Gets the description of the event."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param descArr The string array with command and description separated."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The description of the event."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String getEventDesc(String[] descArr) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return descArr[0].substring(6, descArr[0].length() - 1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Gets the date."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param descArr The command line with description and date separated."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param storage The storage for the task manager."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The date."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @throws ParseException If a parse exception occurred."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public Date getDate(String[] descArr, Storage storage)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            throws ParseException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return storage.convertToDate(descArr[1].substring(3));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Gets the task number."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param arr The array with command and description separated."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The task number."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public int getTaskNum(String[] arr) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return Integer.parseInt(arr[1]) - 1;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Get the keyword to be searched."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param line The command line."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The keyword."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String getKeyWord(String line) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return line.substring(5);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 120
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Loads the task from the file into an array list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The list of tasks to be loaded from the file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @throws FileNotFoundException If file is not found."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @throws ParseException If a parse exception occurred."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        Scanner fs \u003d new Scanner(file);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        while (fs.hasNext()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            String line \u003d fs.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            String[] taskArr \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            String type \u003d taskArr[0];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                Todo todo \u003d new Todo(taskArr[2]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                if (taskArr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    todo.markAsDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                list.add(todo);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                String date \u003d taskArr[3].substring(8, 10) + \" \""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                        + taskArr[3].substring(4, 7) + \" \""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                        + taskArr[3].substring(24, 28) + \" \""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                        + taskArr[3].substring(11, 16);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                Deadline deadline \u003d new Deadline(taskArr[2],"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                        convertToDate(date));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                if (taskArr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    deadline.markAsDone();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                list.add(deadline);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            } else if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                String date \u003d taskArr[3].substring(8, 10) + \" \""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                        + taskArr[3].substring(4, 7) + \" \""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                        + taskArr[3].substring(24, 28) + \" \""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                        + taskArr[3].substring(11, 16);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                Event event \u003d new Event(taskArr[2], convertToDate(date));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                if (taskArr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    event.markAsDone();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                list.add(event);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        fs.close();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Converts the string to a date."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param str The date in string format."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The date."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @throws ParseException If a parse exception occurred."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public Date convertToDate(String str) throws ParseException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd MMM yyyy hh:mm\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        Date date \u003d sdf.parse(str);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Loads the task from the file into an array list."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param textToAppend The text to be appended to the file."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The list of tasks to be loaded from the file."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @throws IOException If an input or output exception occurred."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    private void appendToFile(String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        fw.write(textToAppend);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Converts the task to string format to be added to the file."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param task The task to be converted in string format."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The task in a string format."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    private String convertTaskToFileFormat(Task task) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        StringBuffer textToAdd \u003d new StringBuffer();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        String type \u003d task.getType();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            textToAdd.append(\"T | \");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            textToAdd.append(\"D | \");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        } else if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            textToAdd.append(\"E | \");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        textToAdd.append(task.getStatusNum());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        textToAdd.append(\" | \");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        textToAdd.append(task.getDescription());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        if (type.equals(\"D\") || type.equals(\"E\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            textToAdd.append(\" | \");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            textToAdd.append(task.getDate());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        textToAdd.append(\"\\n\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return textToAdd.toString();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Appends task to the file."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param task The task to be appended to the file."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @throws IOException If an input or output exception occurred."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public void appendTaskToFile(Task task) throws IOException {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        String textToAppend \u003d convertTaskToFileFormat(task);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        appendToFile(textToAppend);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Writes the current task to the file."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param textToAdd The task to be written to the file."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @throws IOException If an input or output exception occurred."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    private void writeToFile(String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Updates the current list of tasks to the file."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param list The list of tasks to be updated to the file."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @throws IOException If an input or output exception occurred."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public void updateTaskInFile(ArrayList\u003cTask\u003e list) throws IOException {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        StringBuffer textToAdd \u003d new StringBuffer();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            textToAdd.append(convertTaskToFileFormat(task));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        writeToFile(textToAdd.toString());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 164
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " * Contains the task list and updates tasks in the list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public TaskList() {}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Gets the list of tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The list of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Gets the task of index n."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param n The index of the task in the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The task of index n."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public Task getTask(int n) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return list.get(n);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Gets the size of the task list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The size of the task list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Adds new task to the task list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param t The task to be added to the task list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        list.add(t);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Marks task of index n in the list as done."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param n The index of the task to be marked as done in the list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The task after it is marked as done."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public Task markTaskAsDone(int n) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        Task task \u003d list.get(n);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Removes task of index n from the list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param n The index of the task to be removed from the list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The task after it is removed from the list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public Task removeTask(int n) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return list.remove(n);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Prints the list of all tasks in the task list."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        int length \u003d list.size();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d length; i++) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            Task task \u003d list.get(i - 1);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            System.out.println(i + \". \" + task);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Prints the list of tasks found by keyword in the task list."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param taskList The list of tasks found by the keyword."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public void printTaskFound(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        int length \u003d taskList.size();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d length; i++) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            Task task \u003d taskList.get(i - 1);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            System.out.println(i + \". \" + task);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 102
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " * Deals with the interactions with the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public Ui() {}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Prints hello when the application runs."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public void printHello() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        System.out.println(\"Hello! I\u0027m your task manager!\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Prints bye when the application ends."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public void printBye() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Prints the details of the task added."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public void printTaskAdded(Task task, int size) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        System.out.println(\"  \" + task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        System.out.println(\"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Prints the details of the task marked done."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public void printTaskDone(Task task) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        System.out.println(\"  \" + task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Prints the details of the task removed."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public void printTaskRemoved(Task removed, int size) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        System.out.println(\"  \" + removed);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        System.out.println(\"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Prints todo error."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public void printTodoError() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        System.out.println(\"OOPS!!! The todo description cannot be empty.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Prints deadline error."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public void printDeadlineError() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        System.out.println(\"OOPS!!! The deadline description cannot be empty.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Prints event error."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public void printEventError() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        System.out.println(\"OOPS!!! The event description cannot be empty.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Prints task error."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public void printNoSuchTaskError() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        System.out.println(\"OOPS!!! There is no such task.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Prints command error."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public void printUnknownCommandError() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        System.out.println(\"OOPS!!! I\u0027m sorry, I don\u0027t know what you mean :(\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 84
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " *  Simulates an exception in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "public class DukeException extends Exception { }"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 6
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " * Represents a deadline."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Creates a deadline object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param description The description of the deadline."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param by The date that the deadline is due."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public Deadline(String description, Date by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        super.date \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        super.type \u003d \"D\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return \"[D]\" + super.toString()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                + \" (by: \" + super.date + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 26
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " * Represents a event."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Creates a event object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param description The description of the event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param at The date of the event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public Event(String description, Date at) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        super.date \u003d at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        super.type \u003d\"E\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return \"[E]\" + super.toString()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                + \" (at: \" + super.date + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 28
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    protected String type \u003d \"\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Creates a task object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Gets the description of the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The description of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Gets the date of the task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The date of the task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public Date getDate() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Gets the type of the task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The type of the task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Gets the status icon of the task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Tick if it is done, cross otherwise."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The status icon of the task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return isDone ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Gets the status number of the task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * 1 if it is done, 0 otherwise."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The status number of the task"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String getStatusNum() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Mark the task as done."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Checks if the task description contains the keyword"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param keyword the word to be found"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return true if the task description contains the keyword"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public boolean hasKeyword(String keyword) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return description.contains(keyword);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                + this.getDescription();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 92
    }
  },
  {
    "path": "src/main/java/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " * Represents a todo."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Creates a todo object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param description The description of the todo."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        super.type \u003d \"T\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 21
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public void testTask() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        Task task \u003d new Task(\"Tutorial 1\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        assertEquals(\"Tutorial 1\", task.getDescription());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        System.out.println(\"All task tests passed.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public void testEvent() throws ParseException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd MMM yyyy hh:mm\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        Date date \u003d sdf.parse(\"31 May 2020 00:00\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        Event event \u003d new Event(\"His Birthday\", date);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        event.markAsDone();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        assertEquals(\"Event\", event.getType());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        assertEquals(1, event.getStatusNum());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        System.out.println(\"All event tests passed.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 28
    }
  }
]
