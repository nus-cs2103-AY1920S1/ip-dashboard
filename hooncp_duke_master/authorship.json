[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hooncp": 1,
      "-": 15
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hooncp"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hooncp"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hooncp"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by:\" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hooncp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hooncp": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hooncp"
        },
        "content": "import java.util.InputMismatchException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hooncp"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hooncp"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hooncp"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    public static int numberOfTasks \u003d 0;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hooncp"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hooncp"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hooncp"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    public void bye() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hooncp"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    //Lists out all the tasks in Duke"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    public void list() throws IllegalArgumentException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hooncp"
        },
        "content": "            throw new IllegalArgumentException(\"Nothing found in list\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        int number \u003d 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hooncp"
        },
        "content": "            String outputString \u003d number + \". \" + task.toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hooncp"
        },
        "content": "            System.out.println(outputString);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hooncp"
        },
        "content": "            number++;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hooncp"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        numberOfTasks++;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        String outputString \u003d \"Got it. I\u0027ve added this task: \\n\" + task.toString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        System.out.println(outputString);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        System.out.println(\"Now you have \" + numberOfTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hooncp"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    public void done(int number) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        if (number \u003e Duke.numberOfTasks || number \u003c\u003d 0) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hooncp"
        },
        "content": "            throw new IndexOutOfBoundsException(\"The task number does not exist.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        Task task \u003d Duke.tasks.get(number - 1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        task.setDone();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        System.out.println(task.toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    public void delete(int number) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        if (number \u003e Duke.numberOfTasks || number \u003c\u003d 0) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hooncp"
        },
        "content": "            throw new IndexOutOfBoundsException(\"The task number does not exist.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        Task task \u003d Duke.tasks.get(number - 1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        tasks.remove(number-1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        numberOfTasks--;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        System.out.println(task.toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        System.out.println(\"Now you have \" + numberOfTasks + \" tasks in the list\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hooncp"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        duke.greet();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        String command \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hooncp"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        while (!command.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hooncp"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                if (command.equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                    duke.list();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                    String[] commandSplit \u003d command.split(\" \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                    String deadline \u003d \"deadline\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                    String event \u003d \"event\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                    String todo \u003d \"todo\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                    if (commandSplit[0].equalsIgnoreCase(\"done\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                        int index \u003d Integer.parseInt(commandSplit[1]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                        duke.done(index);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                    } else if (commandSplit[0].equalsIgnoreCase(\"delete\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                        int index \u003d Integer.parseInt(commandSplit[1]);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                        duke.delete(index);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                    } else if (commandSplit[0].equalsIgnoreCase(deadline)) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                        String details \u003d command.substring(deadline.length()).trim();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                        if (details.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                            throw new InputMismatchException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                        String[] detail \u003d details.split(\" /by\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                        Task addTask \u003d new Deadline(detail[0], detail[1]);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                        duke.add(addTask);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                    } else if (commandSplit[0].equalsIgnoreCase(event)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                        String details \u003d command.substring(event.length()).trim();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                        if (details.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                            throw new InputMismatchException(\"The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                        String[] detail \u003d details.split(\" /at\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                        Task addTask \u003d new Event(detail[0], detail[1]);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                        duke.add(addTask);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                    } else if (commandSplit[0].equalsIgnoreCase(todo)) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                        String details \u003d command.substring(todo.length()).trim();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                        if (details.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                            throw new InputMismatchException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                        Task addTask \u003d new Todo(details);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                        duke.add(addTask);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                        throw new InputMismatchException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hooncp"
        },
        "content": "            } catch (InputMismatchException e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                System.out.println(\"OOPS!!! \" + e.getMessage());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hooncp"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                System.out.println(\"OOPS!!! \" + e.getMessage());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hooncp"
        },
        "content": "            } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hooncp"
        },
        "content": "                System.out.println(\"OOPS!!! \" + e.getMessage());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hooncp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hooncp"
        },
        "content": "            command \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        duke.bye();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hooncp": 118,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hooncp"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hooncp"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hooncp"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at:\" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hooncp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hooncp": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hooncp"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hooncp"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hooncp"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hooncp"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hooncp"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hooncp"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hooncp"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        return (isDone ? \"+\" : \"-\"); //return + symbols means done - symbol means not done"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hooncp"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        String mark \u003d \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        return mark;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hooncp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hooncp": 33
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hooncp"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hooncp"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hooncp"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hooncp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hooncp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hooncp": 10
    }
  }
]
