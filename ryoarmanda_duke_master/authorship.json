[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "D | 0 | return book | 06/06/2019 1800"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "E | 0 | project meeting | 06/08/2019 1400 | 06/08/2019 1600"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "T | 1 | join sports club"
      }
    ],
    "authorContributionMap": {
      "ryoarmanda": 4
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    private LocalDateTime time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    public Deadline(String description, LocalDateTime time) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    public LocalDateTime getTime() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), this.time.format(super.DATETIME_FORMAT));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryoarmanda": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    private static final String FILE_PATH \u003d \"./data/duke.txt\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    // For displaying multi-line response"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    private void displayResponse(String[] lines) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        String bar \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        System.out.println(bar);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        for (String line : lines) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            System.out.println(\" \" + line);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        System.out.println(bar);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    // For displaying single-line response"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    private void displayResponse(String line) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        displayResponse(new String[]{line});"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    private void displayTasks() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        ArrayList\u003cString\u003e responses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        responses.add(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            String formatted \u003d String.format(\"%d.%s\", i + 1, this.tasks.get(i));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            responses.add(formatted);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        displayResponse(responses.toArray(new String[]{}));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    private void markTaskDone(int taskIndex) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        Task task \u003d this.tasks.get(taskIndex);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        displayResponse(new String[]{"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            \"Nice! I\u0027ve marked this task as done:\","
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            \"  \" + task"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        });"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    private void addTask(Task task) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        displayResponse(new String[]{"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            \"Got it. I\u0027ve added this task:\","
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            \"  \" + task,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            \"Now you have \" + this.tasks.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        });"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    private void deleteTask(int taskIndex) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        Task task \u003d this.tasks.get(taskIndex);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        this.tasks.remove(taskIndex);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        displayResponse(new String[]{"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                \"Noted. I\u0027ve removed this task:\","
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                \"  \" + task,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                \"Now you have \" + this.tasks.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        });"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    // Handles input to its appropriate functions, returns boolean"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    // that signifies whether the infinite loop should be stopped."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    private boolean handleInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        // Command-only input"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            displayTasks();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        String[] tokens \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        String cmd \u003d tokens[0];"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        switch (cmd) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                markTaskDone(Integer.parseInt(tokens[1]) - 1);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                    addTask(new Todo(tokens[1]));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                    throw new DukeException(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                String[] deadline_args \u003d tokens[1].split(\" /by \");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                LocalDateTime by \u003d LocalDateTime.parse(deadline_args[1], Task.DATETIME_FORMAT);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                addTask(new Deadline(deadline_args[0], by));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                String[] event_args \u003d tokens[1].split(\" /at \");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                String[] timeRange \u003d event_args[1].split(\" - \");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                LocalDateTime startTime \u003d LocalDateTime.parse(timeRange[0], Task.DATETIME_FORMAT);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                LocalDateTime endTime \u003d LocalDateTime.parse(timeRange[1], Task.DATETIME_FORMAT);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                addTask(new Event(event_args[0], startTime, endTime));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                deleteTask(Integer.parseInt(tokens[1]) - 1);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    private void readFromFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        File f \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            String[] cmd \u003d sc.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            String type \u003d cmd[0];"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            boolean isDone \u003d cmd[1].equals(\"1\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            String desc \u003d cmd[2];"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            Task task \u003d new Task(desc);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            switch(type) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                task \u003d new Todo(desc);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                LocalDateTime by \u003d LocalDateTime.parse(cmd[3], Task.DATETIME_FORMAT);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                task \u003d new Deadline(desc, by);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                LocalDateTime startTime \u003d LocalDateTime.parse(cmd[3], Task.DATETIME_FORMAT);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                LocalDateTime endTime \u003d LocalDateTime.parse(cmd[4], Task.DATETIME_FORMAT);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                task \u003d new Event(desc, startTime, endTime);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            if (isDone) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    private void writeToFile() throws IOException {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        FileWriter fw \u003d new FileWriter(FILE_PATH);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            String desc \u003d task.getDescription();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            String done \u003d task.isDone() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            String s \u003d \"\";"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            if (task instanceof Todo) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                s \u003d String.join(\" | \", \"T\", done, desc);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                s \u003d String.join(\" | \", \"D\", done, desc, ((Deadline) task).getTime().format(Task.DATETIME_FORMAT));"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                s \u003d String.join(\" | \", \"E\", done, desc,"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                        ((Event) task).getStartTime().format(Task.DATETIME_FORMAT),"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                        ((Event) task).getEndTime().format(Task.DATETIME_FORMAT));"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            s +\u003d \"\\n\";"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            fw.write(s);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            readFromFile();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        displayResponse(new String[]{"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            \"Hello! I\u0027m Duke\","
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            \"What can I do for you?\""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        });"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        boolean stop \u003d false;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        while (!stop) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                stop \u003d handleInput(sc.nextLine());"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                displayResponse(e.getMessage());"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        displayResponse(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            writeToFile();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "            System.out.println(\"Cannot write to file: \" + e.getMessage());"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "ryoarmanda": 206
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "public class DukeException extends RuntimeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryoarmanda": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    private LocalDateTime startTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    private LocalDateTime endTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    public Event(String description, LocalDateTime startTime, LocalDateTime endTime) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        this.startTime \u003d startTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        this.endTime \u003d endTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    public LocalDateTime getStartTime() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        return this.startTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    public LocalDateTime getEndTime() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        return this.endTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        return String.format(\"[E]%s (at: %s - %s)\", super.toString(),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                this.startTime.format(super.DATETIME_FORMAT),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "                this.endTime.format(super.DATETIME_FORMAT));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryoarmanda": 27
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    public static final DateTimeFormatter DATETIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        return this.isDone ? \"\\u2714\" : \"\\u2718\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        return String.format(\"[%s] %s\", this.getStatusIcon(), this.getDescription());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryoarmanda": 33
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryoarmanda": 10
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": " Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": " What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": " Here are the tasks in your list:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": " Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "   [T][?] Test Todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": " Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": " Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "   [D][?] Test Deadline (by: Test Deadline)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": " Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": " Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "   [E][?] Test Event (at: Test Event)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": " Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": " Here are the tasks in your list:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": " 1.[T][?] Test Todo"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": " 2.[D][?] Test Deadline (by: Test Deadline)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": " 3.[E][?] Test Event (at: Test Event)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": " Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "   [T][?] Test Todo"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": " Here are the tasks in your list:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": " 1.[T][?] Test Todo"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": " 2.[D][?] Test Deadline (by: Test Deadline)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": " 3.[E][?] Test Event (at: Test Event)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": " Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "ryoarmanda": 50
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "todo Test Todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "deadline Test Deadline /by Test Deadline"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "event Test Event /at Test Event"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "bye"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "ryoarmanda": 9
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "ryoarmanda": 21
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "then"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "\tmkdir ../bin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "fi"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "then"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "\trm ACTUAL.TXT"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "fi"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "then"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "\techo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "\texit 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "fi"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "then"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "\techo \"Test result: PASSED\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "\texit 0"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "else"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "\techo \"Test result: FAILED\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "\texit 1"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ryoarmanda"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "ryoarmanda": 29
    }
  }
]
