[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "test {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "//group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "//version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "run {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "jar {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    manifest {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        attributes \u0027Main-Class\u0027: \u0027Duke\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ambhinav": 35,
      "-": 13
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ambhinav"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ambhinav"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ambhinav"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ambhinav"
        },
        "content": " *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ambhinav"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Create a new dialog box, flip it and return it."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param text feedback from duke"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param img Duke\u0027s image"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @return the dialog box created"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ambhinav": 68
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import utils.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import utils.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import utils.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import utils.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private static final String filePath \u003d \"/home/abhinav/Desktop/2103T/duke/data/dukeTest.txt\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * The constructor needed to kickstart JavaFx."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            tasks \u003d new TaskList(storage.readFromFile());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            System.out.println(ui.showErrors(e.getMessage()));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Obtains user input from command line, parses it and executes the commands."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Shows errors to the user in case of invalid input."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @return String feedback for gui to display"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        Command c;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            return c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            return ui.showErrors(e.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Required main method."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param args command line arguments"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        Duke duke \u003d new Duke(filePath);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Create a Duke object."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Initialise the storage, task list and ui objects."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param filePath the local path to the storage file"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private Duke(String filePath) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            tasks \u003d new TaskList(storage.readFromFile());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            ui.showErrors(e.getMessage());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Obtains user input from command line, parses it and executes the commands."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Shows errors to the user in case of invalid input."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        System.out.println(ui.welcomeMessage());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                System.out.println(c.execute(tasks, ui, storage));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                System.out.println(ui.showErrors(e.getMessage()));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ambhinav": 90,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ambhinav"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ambhinav"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ambhinav": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ambhinav"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ambhinav"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ambhinav": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ambhinav"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ambhinav"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Chelsea_Wallpaper.jpg\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/lotr.jpg\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        );"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ambhinav": 50
    }
  },
  {
    "path": "src/main/java/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import utils.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import utils.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import utils.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Create add commands."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param task todo, event or deadline task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Add the task to the list of tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Give feedback to the user upon successful addition, and"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * finally write the new task list to file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param tasks the object that contains the current list of tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param ui to give feedback to the user"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param storage enables writing to file"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @return feedback from duke"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @throws DukeException if there are any problems writing to file"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        tasks.addTask(this.task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        int taskNum \u003d tasks.getSize();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String feedback \u003d \"Got it. I\u0027ve added this task:\\n\" + task.toString() + \"\\nNow you have \" + taskNum"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                + \" tasks in the list.\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return feedback;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ambhinav": 41
    }
  },
  {
    "path": "src/main/java/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import utils.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import utils.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import utils.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Execute different behaviors based on the nature of the command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param tasks to access the list of tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param ui to give feedback to user"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param storage to write changes to file"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @return feedback from duke"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @throws DukeException in case of errors writing to file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ambhinav": 28
    }
  },
  {
    "path": "src/main/java/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import utils.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import utils.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import utils.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private int taskId;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Create a delete command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param taskId the id of the task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public DeleteCommand(int taskId) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        this.taskId \u003d taskId;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Delete the task from the list of tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Give feedback to the user upon successful deletion, and"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * finally write the new task list to file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param tasks the object that contains the current list of tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param ui to give feedback to the user"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param storage enables writing to file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @return feedback from Duke"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @throws DukeException if there are any problems writing to file"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String str;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        if (taskId \u003e tasks.getSize()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            throw new DukeException(\"Please choose a task within the list\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            Task toDelete \u003d tasks.deleteTask(taskId - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            str \u003d \"Noted. I\u0027ve removed this task:\\n\" + \" \" + toDelete.toString() + \"\\nNow you have \" + tasks.getSize()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                    + \" tasks in the list.\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            return str;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ambhinav": 46
    }
  },
  {
    "path": "src/main/java/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import utils.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import utils.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import utils.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private int taskId;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Create a done command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param taskId the id of the task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public DoneCommand(int taskId) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        this.taskId \u003d taskId;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Mark the right task from the list of tasks as done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Give feedback to the user upon successful marking, and"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * finally write the new task list to file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param tasks the object that contains the current list of tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param ui to give feedback to the user"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param storage enables writing to file"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @return feedback from Duke"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @throws DukeException if there are any problems writing to file"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String str;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        if (taskId \u003e tasks.getSize()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            throw new DukeException(\"Please choose a task within the list\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            tasks.markTaskAsDone(taskId);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            Task doneTask \u003d tasks.getTask(taskId - 1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            str \u003d \"Nice! I\u0027ve marked this task as done:\\n\" + \" \" + doneTask.toString();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            return str;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ambhinav": 47
    }
  },
  {
    "path": "src/main/java/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import utils.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import utils.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import utils.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Relay to the driver class that the user wishes to exit Duke."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Write the new task list to file and give feedback to the user"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * upon successful exit from Duke."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param tasks the object that contains the current list of tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param ui to give feedback to the user"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param storage enables writing to file"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @return feedback from Duke"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @throws DukeException if there are any problems writing to file"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return ui.exitMessage();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ambhinav": 34
    }
  },
  {
    "path": "src/main/java/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import utils.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import utils.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import utils.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Create a find command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param keyword to search for"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Attempt to find the keyword among the current list of tasks,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * by accessing the storage list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param tasks to access the list of tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param ui to give feedback to user"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param storage to write changes to file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @return feedback from Duke"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @throws DukeException if keyword is not found in task list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        List\u003cTask\u003e matchingTasks \u003d tasks.findMatchingTasks(this.keyword);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        if (matchingTasks.isEmpty()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            throw new DukeException(\"No matching tasks found!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            return ui.printMatchingTasks(matchingTasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ambhinav": 43
    }
  },
  {
    "path": "src/main/java/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import utils.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import utils.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import utils.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Show the user the current list of tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param tasks to access the list of tasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param ui to give feedback to user"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param storage to write changes to file"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @return feedback from Duke"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return ui.printList(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ambhinav": 21
    }
  },
  {
    "path": "src/main/java/commands/UndoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import utils.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import utils.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import utils.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "public class UndoCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private Command commandToUndo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Create an undo command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param commandToUndo user\u0027s previous command"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @throws DukeException if previous command cannot be undone"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public UndoCommand(Command commandToUndo) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        if (checkCommand(commandToUndo)) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            this.commandToUndo \u003d commandToUndo;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            throw new DukeException(\"Unable to undo this command\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Ensures that the previous command is not of type"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * List, Find and Undo."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @return true if above conditions are met"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private boolean checkCommand(Command commandToUndo) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        if (commandToUndo instanceof ListCommand"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            || commandToUndo instanceof FindCommand"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            || commandToUndo instanceof UndoCommand) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Undoes the most recent command executed by Duke"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * by restoring the current task list to the previous"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * snapshot taken."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Restored list is then saved."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param tasks to access the list of tasks"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param ui to give feedback to user"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param storage to write changes to file"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @return result of undo command"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @throws DukeException if there are problems writing to file"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        tasks.restoreToSnapshot();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return ui.printUndoResult(tasks);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ambhinav": 58
    }
  },
  {
    "path": "src/main/java/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Create an exception specific to Duke."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param message a description of the problem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ambhinav": 14
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import utils.StringToDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private StringToDate time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *Create a deadline task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param name the description of the task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param time the time by which to complete it"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public Deadline(String name, StringToDate time) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Mark the task as complete."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public Task markAsDone() throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        Deadline doneTask \u003d new Deadline(this.name, new StringToDate(this.time.getRawDate()));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        doneTask.isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return doneTask;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Print in the correct format for storage and retrieval."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @return the task in the required format for storage"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public String printForStorage() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String borderAndSpace \u003d \" | \";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String str \u003d super.printForStorage();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        str +\u003d \"D\" + borderAndSpace;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            str +\u003d \"1\" + borderAndSpace;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            str +\u003d \"0\" + borderAndSpace;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        str +\u003d this.name + borderAndSpace + this.time;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Show the user the task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @return string representation of task"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.time.toString() + \")\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ambhinav": 59
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import utils.StringToDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private StringToDate time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Create an event task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param name the description of the task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param time the time at which the event takes place"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public Event(String name, StringToDate time) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Mark the task as complete."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public Task markAsDone() throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        Event doneTask \u003d new Event(this.name, new StringToDate(this.time.getRawDate()));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        doneTask.isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return doneTask;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Print in the correct format for storage and retrieval."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @return the task in the required format for storage"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public String printForStorage() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String borderAndSpace \u003d \" | \";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String str \u003d super.printForStorage();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        str +\u003d \"E\" + borderAndSpace;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            str +\u003d \"1\" + borderAndSpace;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            str +\u003d \"0\" + borderAndSpace;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        str +\u003d this.name + borderAndSpace + this.time;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Show the user the task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @return string representation of the task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.time.toString() + \")\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ambhinav": 60
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    String name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Create a task object, is called by task, deadline and event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param name description of task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public Task markAsDone() throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public String printForStorage() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Show the user the task. Called by task, deadline and event classes."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @return string representation of task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String str \u003d \"\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            str +\u003d \"[✓]\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            str +\u003d \"[✗]\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        } "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return str +\u003d \" \" + this.name;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ambhinav": 45
    }
  },
  {
    "path": "src/main/java/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Create a new Todo task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param name description of the task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public Todo(String name) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Mark the task as complete."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public Task markAsDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        Todo doneTask \u003d new Todo(this.name);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        doneTask.isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return doneTask;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Print in the correct format for storage and retrieval."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @return the task in the required format for storage"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public String printForStorage() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String borderAndSpace \u003d \" | \";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String str \u003d super.printForStorage();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        str +\u003d \"T\" + borderAndSpace;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            str +\u003d \"1\" + borderAndSpace;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            str +\u003d \"0\" + borderAndSpace;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        str +\u003d this.name + borderAndSpace;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Show the user the task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @return string representation of the task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ambhinav": 51
    }
  },
  {
    "path": "src/main/java/utils/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "package utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import commands.DoneCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import commands.ListCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import commands.FindCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import commands.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import commands.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import commands.UndoCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import commands.AddCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import java.util.Stack;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private static final String ERROR_EMPTY_INPUT \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private static final String ERROR_INPUT_FORMAT \u003d \"Please check the format of your input!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private static final String ERROR_TODO \u003d \"☹ OOPS!!! The description of a \" + \"todo\" + \" cannot be empty.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private static final String ERROR_TIME_EMPTY \u003d \"Please input the time as well!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private static Stack\u003cCommand\u003e recentCommands \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Parses user input into command for execution, and creates the"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * relevant command based on the said input."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param fullCommand the user input to parse"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @return command to execute"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @throws DukeException for user input errors."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        Command c;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String[] commandArr \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String[] keywords;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        int i;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        int taskId;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String userCommand \u003d commandArr[0];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            switch (userCommand) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                String name \u003d \"\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                if (commandArr.length \u003c 2) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                    throw new DukeException(ERROR_TODO);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                for (i \u003d 1; i \u003c commandArr.length; i++) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                    name +\u003d commandArr[i] + \" \";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                c \u003d new AddCommand(new Todo(name.trim()));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                recentCommands.push(c);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                keywords \u003d splitCommands(commandArr, \"/by\", \"deadline\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                c \u003d new AddCommand(new Deadline(keywords[0], new StringToDate(keywords[1])));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                recentCommands.push(c);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                keywords \u003d splitCommands(commandArr, \"/at\", \"event\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                c \u003d new AddCommand(new Event(keywords[0], new StringToDate(keywords[1])));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                recentCommands.push(c);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                c \u003d new ListCommand();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                taskId \u003d Integer.parseInt(commandArr[1]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                c \u003d new DoneCommand(taskId);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                recentCommands.push(c);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                taskId \u003d Integer.parseInt(commandArr[1]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                c \u003d new DeleteCommand(taskId);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                recentCommands.push(c);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                String keyword \u003d commandArr[1];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                c \u003d new FindCommand(keyword);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            case \"undo\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                if (!recentCommands.empty()) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                    c \u003d new UndoCommand(recentCommands.pop());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                    throw new DukeException(\"No actions to undo!\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                c \u003d new ExitCommand();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                throw new DukeException(ERROR_EMPTY_INPUT);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            throw new DukeException(ERROR_INPUT_FORMAT);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        System.out.println(recentCommands);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return c;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Parse the deadline and event input to obtain name of task"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * and time."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param commandArr array of commands from user"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param keyword to look for"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param taskType the type of task"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @return the name of task and time"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @throws DukeException in case of invalid input"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private static String[] splitCommands(String[] commandArr, String keyword, String taskType) throws DukeException {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String name \u003d \"\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String time \u003d \"\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        boolean flag \u003d false;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        int i;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        for (i \u003d 1; i \u003c commandArr.length; i++) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            if (commandArr[i].equals(keyword)) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                flag \u003d true;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            } else if (flag) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                time +\u003d commandArr[i] + \" \";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                name +\u003d commandArr[i] + \" \";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        // checks if the name of event or deadline and their timings are given by user"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        // appropriate errors are then thrown if needed"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        if (name.isEmpty()) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a \" + taskType + \" cannot be empty.\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        } else if (!flag) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            throw new DukeException(\"Please remember to put \" + keyword + \" before the timing.\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        } else if (time.isEmpty()) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            throw new DukeException(ERROR_TIME_EMPTY);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            return new String[]{name.trim(), time.trim()};"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ambhinav": 152
    }
  },
  {
    "path": "src/main/java/utils/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "package utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Enable read and write access to retrieve and store tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param filePath the local path to storage file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        assert !filePath.isEmpty() : \"File path not specified!\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *  Takes the stored data and populates the task list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @return list of tasks"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @throws DukeException if local file not found or invalid date in saved file"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public List\u003cTask\u003e readFromFile() throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        Scanner sc;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            if (file.createNewFile()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                System.out.println(\"File created!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                System.out.println(\"File already exists\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            throw new DukeException(\"File cannot be created, please try again soon!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        // parse input and create tasks"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            // since task details are separated by | when saved"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            // refer to printForStorage method in Task component"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            String[] savedTask \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            for (int i \u003d 0; i \u003c savedTask.length; i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                savedTask[i] \u003d savedTask[i].trim();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            String taskType \u003d savedTask[0];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                createAndAddTodo(savedTask);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                createAndAddDeadline(savedTask);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                createAndAddEvent(savedTask);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Create a todo task found in the file."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Adds the  task to the list of tasks."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param taskDetails an array containing details of the task"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private void createAndAddTodo(String[] taskDetails) throws DukeException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String done \u003d taskDetails[1];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String name \u003d taskDetails[2];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        Task todo \u003d new Todo(name);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        if (done.equals(\"1\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            todo \u003d todo.markAsDone();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        tasks.add(todo);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Create a deadline task found in the file."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Adds the  task to the list of tasks."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param taskDetails an array containing details of the task"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private void createAndAddDeadline(String[] taskDetails) throws DukeException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String done \u003d taskDetails[1];"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String name \u003d taskDetails[2];"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String time \u003d taskDetails[3];"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        Task deadline \u003d new Deadline(name, new StringToDate(time));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        if (done.equals(\"1\")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            deadline \u003d deadline.markAsDone();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        tasks.add(deadline);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Create a event task found in the file."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Adds the  task to the list of tasks."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param taskDetails an array containing details of the task"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private void createAndAddEvent(String[] taskDetails) throws DukeException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String done \u003d taskDetails[1];"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String name \u003d taskDetails[2];"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String time \u003d taskDetails[3];"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        Task event \u003d new Event(name, new StringToDate(time));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        if (done.equals(\"1\")) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            event \u003d event.markAsDone();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        tasks.add(event);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Takes the current list of task objects and adds them in the correct format to the data file."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @throws DukeException in case of error writing to file"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public void writeToFile(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        FileWriter fw \u003d null;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            assert fw !\u003d null : \"Error writing to file, file writer not initialised!\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                Task task \u003d taskList.getTask(i);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                if (i !\u003d taskList.getSize() - 1) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                    fw.write(task.printForStorage() + \"\\n\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                    fw.write(task.printForStorage());"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            throw new DukeException(\"Internal error, work may not be saved!\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ambhinav": 164
    }
  },
  {
    "path": "src/main/java/utils/StringToDate.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "package utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "public class StringToDate {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private String rawDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private static final String ERROR_DATE_FORMAT \u003d \"Please enter the date in the format dd-MMM-yyyy HH:mm\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private static final String ERROR_INVALID_DATES \u003d \"Values entered for the date may be incorrect!\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Create a new date time in the required format."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Also checks if the user entered a valid date."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param rawDate date time inputted by user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @throws ParseException in case date time is in invalid format"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public StringToDate(String rawDate) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        boolean isAcceptableDate \u003d checkDateValues(rawDate);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        if (isAcceptableDate) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            this.rawDate \u003d rawDate;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            String dateFormat \u003d \"dd-MM-yyyy HH:mm\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            SimpleDateFormat formatter \u003d new SimpleDateFormat(dateFormat);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                this.date \u003d formatter.parse(rawDate);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                throw new DukeException(ERROR_DATE_FORMAT);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            throw new DukeException(ERROR_INVALID_DATES);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public String getRawDate() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "       return this.rawDate;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Processes the raw date to obtain day,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * month and year of date entered by user."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Checks if said date details are within an acceptable range."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @return true if date is acceptable range, false otherwise"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private boolean checkDateValues(String rawDate) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String[] dateAndTime \u003d rawDate.split(\" \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String[] dateValues \u003d dateAndTime[0].split(\"-\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        // convert date, month and year to integer"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        int[] dateDetails \u003d new int[3];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        for (int i \u003d 0; i \u003c dateValues.length; i++) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            dateDetails[i] \u003d Integer.parseInt(dateValues[i]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        int day \u003d dateDetails[0];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        int month \u003d dateDetails[1];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        int year \u003d dateDetails[2];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return day \u003c\u003d 31 \u0026\u0026 month \u003c\u003d 12 \u0026\u0026 year \u003c\u003d 2050;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Show user the date."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @return string representation of the date and time"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String dateFormat \u003d \"dd-MM-yyyy HH:mm\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(dateFormat);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return formatter.format(this.date);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ambhinav": 80
    }
  },
  {
    "path": "src/main/java/utils/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "package utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private List\u003cTask\u003e snapshot;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Enable access to the current lists of tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param tasks list of tasks created from stored data"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        cloneTaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Retrieve task from the task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param taskId of the task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @return task required"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public Task getTask(int taskId) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return this.tasks.get(taskId);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Creates a snapshot of the current task list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Adds tasks to the list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param task to add to list"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        cloneTaskList();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Creates a snapshot of the current task list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Delete tasks from the list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param taskId the task to delete"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @return task that was deleted"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public Task deleteTask(int taskId) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        cloneTaskList();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return this.tasks.remove(taskId);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Creates a snapshot of the current task list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Mark the task completed as done."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param taskId the task that was completed"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public void markTaskAsDone(int taskId) throws DukeException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        cloneTaskList();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        Task doneTask \u003d tasks.remove(taskId - 1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        Task clone \u003d doneTask.markAsDone();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        tasks.add(taskId - 1, clone);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Hold a copy of the most recent task list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private void cloneTaskList() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        this.snapshot \u003d new ArrayList\u003c\u003e(this.tasks);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Restores the list to the most recent version."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Used by the undo command."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public void restoreToSnapshot() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e(this.snapshot);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Finds the matching tasks from the current list of tasks,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * which match the keywords given keyword."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param keyword to match"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @return list of tasks that match with keyword"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public List\u003cTask\u003e findMatchingTasks(String keyword) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            if (task.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                matchingTasks.add(task);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return matchingTasks;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ambhinav": 109
    }
  },
  {
    "path": "src/main/java/utils/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "package utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private static final String LINE_PREFIX \u003d \"|| \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private static final String LOGO \u003d \" ____        _        \\n\" + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\" + \"|____/ \\\\__,_|_|\\\\\\\\___|\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private static final String DUKE_STARTUP \u003d \"Hello from\\n\" + LOGO;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private static final String DUKE_SAYS_HI \u003d \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private static final String EXIT_MESSAGE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private static final String LIST_MESSAGE \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private static final String MATCHING_LIST_MESSAGE \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private static final String UNDO_SUCCESS_MESSAGE \u003d \"Got it, last action was undone. Please do not press undo consecutively!\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Public constructor that triggers user input from Duke."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        this(System.in);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Overridden constructor, enables user input as well as feedback from Duke."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param in scanner object"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private Ui(InputStream in) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        this.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Read a command from the user."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String fullInputLine \u003d in.nextLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return fullInputLine;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Add line borders to all feedback to user."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param input String input"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public String addBorder(String input) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String border \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return border + \"\\n\\n\" + input + \"\\n\" + border + \"\\n\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Greet the user when they start up Duke."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public String welcomeMessage() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return DUKE_STARTUP + \"\\n\" + DUKE_SAYS_HI;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Display exit message to user when they leave Duke."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public String exitMessage() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return EXIT_MESSAGE;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Show user the list of tasks they have."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public String printList(TaskList tasks) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        assert tasks !\u003d null : \"task list cannot be null!\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        StringBuilder str \u003d new StringBuilder(LIST_MESSAGE);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        for (int i \u003d 1; i \u003c tasks.getSize() + 1; i++) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            if (i \u003d\u003d tasks.getSize()) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                str.append(i).append(\".\").append(tasks.getTask(i - 1));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                str.append(i).append(\".\").append(tasks.getTask(i - 1)).append(\"\\n\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return str.toString();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Show the users the tasks that match their query."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param taskList list of tasks that match query"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public String printMatchingTasks(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        assert taskList !\u003d null : \"List of tasks cannot be null!\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        StringBuilder str \u003d new StringBuilder(MATCHING_LIST_MESSAGE);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        for (int i \u003d 1; i \u003c taskList.size() + 1; i++) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            if (i \u003d\u003d taskList.size()) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                str.append(i).append(\".\").append(taskList.get(i - 1));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                str.append(i).append(\".\").append(taskList.get(i - 1)).append(\"\\n\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return str.toString();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public String printUndoResult(TaskList tasks) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return UNDO_SUCCESS_MESSAGE + printList(tasks);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * Relay errors during execution of Duke to user."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     * @param input String input."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    public String showErrors(String input) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ambhinav": 138
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "ambhinav": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "ambhinav": 19
    }
  },
  {
    "path": "src/test/java/tasks/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import utils.StringToDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private Deadline deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    DeadlineTest() throws ParseException, DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        this.deadline \u003d new Deadline(\"description\", new StringToDate(\"10-10-2019 18:00\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    void printForStorage_taskObject_formattedTaskString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        assertEquals(\"D | 0 | description | 10-10-2019 18:00\", deadline.printForStorage());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    void toString_taskObject_formattedTaskString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        assertEquals(\"[D][✗] description (by: 10-10-2019 18:00)\", deadline.toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ambhinav": 28
    }
  },
  {
    "path": "src/test/java/tasks/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import utils.StringToDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private Event event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    EventTest() throws ParseException, DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        event \u003d new Event(\"description\", new StringToDate(\"10-10-2019 18:00\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    void printForStorage_taskObject_formattedTaskString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        assertEquals(\"E | 0 | description | 10-10-2019 18:00\", event.printForStorage());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    void toString_taskObject_formattedTaskString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        assertEquals(\"[E][✗] description (at: 10-10-2019 18:00)\", event.toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ambhinav": 27
    }
  },
  {
    "path": "src/test/java/tasks/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    void printForStorage_taskObject_formattedTaskString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        assertEquals(\"T | 0 | description | \", new Todo(\"description\").printForStorage());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    void toString_taskObject_formattedTaskString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        assertEquals(\"[T][✗] description\", new Todo(\"description\").toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ambhinav": 18
    }
  },
  {
    "path": "src/test/java/utils/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "package utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import commands.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import commands.DeleteCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import commands.ListCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import commands.ExitCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    void parse_todoCommand_AddCommand() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String testPass \u003d \"todo Description\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String testFail \u003d \"todo\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            Command c \u003d Parser.parse(testPass);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            assertNotNull(c);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            assertTrue(c instanceof AddCommand);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            fail(\"I want an addCommand object!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parse(testFail));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    void parse_deadlineCommand_AddCommand() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String testPass \u003d \"deadline Description /by 18-10-2019 18:00\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            Command c \u003d Parser.parse(testPass);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            assertNotNull(c);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            assertTrue(c instanceof AddCommand);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            fail(\"I want an addCommand object!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String testFailOne \u003d \"deadline Description\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parse(testFailOne));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String testFailTwo \u003d \"deadline Description 18-10-2019 18:00\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parse(testFailTwo));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String testFailThree \u003d \"deadline Description /by\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parse(testFailThree));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    void parse_eventCommand_AddCommand() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String testPass \u003d \"event Description /at 18-10-2019 18:00\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            Command c \u003d Parser.parse(testPass);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            assertNotNull(c);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            assertTrue(c instanceof AddCommand);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            fail(\"I want an addCommand object!\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String testFailOne \u003d \"event Description\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parse(testFailOne));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String testFailTwo \u003d \"event Description 18-10-2019 18:00\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parse(testFailTwo));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String testFailThree \u003d \"event Description /at\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parse(testFailThree));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    void parse_deleteCommand_DeleteCommand() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String testPass \u003d \"delete 1\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String testFail \u003d \"delete\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            Command c \u003d Parser.parse(testPass);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            assertNotNull(c);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            assertTrue(c instanceof DeleteCommand);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            fail(\"I want a DeleteCommand object!\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parse(testFail));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    void parse_listCommand_ListCommand() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String testPass \u003d \"list\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            Command c \u003d Parser.parse(testPass);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            assertNotNull(c);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            assertTrue(c instanceof ListCommand);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            fail(\"I want a ListCommand object!\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    void parse_byeCommand_ExitCommand() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        String testPass \u003d \"bye\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            Command c \u003d Parser.parse(testPass);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            assertNotNull(c);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            assertTrue(c instanceof ExitCommand);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            fail(\"I want a ExitCommand object!\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ambhinav": 122
    }
  },
  {
    "path": "src/test/java/utils/StringToDateTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "package utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "class StringToDateTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    void constructor_invalidDateFormat_expectedException() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        assertThrows(ParseException.class, () -\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "            new StringToDate(\"10-10\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        });"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    void toString_string_formattedDateOutput() throws ParseException, DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        assertEquals(\"10-10-2019 18:00\", new StringToDate(\"10-10-2019 18:00\").toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ambhinav": 25
    }
  },
  {
    "path": "src/test/java/utils/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "package utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    private Task[] taskArr;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    TaskListTest() throws ParseException, DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        this.taskArr \u003d new Task[]{new Todo(\"descriptionOne\"), new Deadline(\"descriptionTwo\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                new StringToDate(\"10-10-2019 18:00\")), new Event(\"descriptionThree\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "                new StringToDate(\"10-10-2019 18:00\"))};"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    void getTask_task() throws ParseException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        TaskList tasks \u003d new TaskList(Arrays.asList(taskArr));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        assertEquals(\"[T][✗] descriptionOne\", tasks.getTask(0).toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        assertEquals(\"[D][✗] descriptionTwo (by: 10-10-2019 18:00)\", tasks.getTask(1).toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "        assertEquals(\"[E][✗] descriptionThree (at: 10-10-2019 18:00)\", tasks.getTask(2).toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ambhinav": 33
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ambhinav"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "[E][✗] project meeting (at: tomorrow 2pm)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "[D][✗] homework (by: friday 12pm)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "[T][✗] read chapter 3"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "1.[E][✗] project meeting (at: tomorrow 2pm)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "2.[D][✗] homework (by: friday 12pm)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "3.[T][✗] read chapter 3"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ambhinav"
        },
        "content": " [D][✓] homework (by: friday 12pm)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "[D][✗] OP1 submission (by: next monday 4:30pm)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ambhinav"
        },
        "content": " [D][✓] OP1 submission (by: next monday 4:30pm)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "1.[E][✗] project meeting (at: tomorrow 2pm)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "2.[D][✓] homework (by: friday 12pm)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "3.[T][✗] read chapter 3"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "4.[D][✓] OP1 submission (by: next monday 4:30pm)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "ambhinav": 75
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "event project meeting /at tomorrow 2pm"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "deadline homework /by friday 12pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "todo read chapter 3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "deadline OP1 submission /by next monday 4:30pm"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "list "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ambhinav": 9
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ambhinav"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "diff ACTUAL.TXT EXPECTED.txt"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ambhinav"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "ambhinav": 34
    }
  }
]
