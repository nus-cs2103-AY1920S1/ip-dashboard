[
  {
    "path": "src/main/java/Action.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neoshh"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neoshh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neoshh"
        },
        "content": "public class Action {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public static void welcomeMessage() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        System.out.println(\"     Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        System.out.println(\"     What can I do for you?\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public static void byeMessage() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public static void doTask(String command, ArrayList\u003cTask\u003e list) throws IncompleteCommandException, InvalidCommandException, ParseException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        String[] commandStrArray \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            if (commandStrArray[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    System.out.println(\"     \" + i + \".\" + list.get(i - 1));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                if (commandStrArray[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    list.get(Integer.parseInt(commandStrArray[1]) - 1).markAsDone();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                } else if (commandStrArray[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    System.out.println(\"     Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    System.out.println(\"       \" + list.get(Integer.parseInt(commandStrArray[1]) - 1));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    list.remove(Integer.parseInt(commandStrArray[1]) - 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    System.out.println(\"     Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    if (commandStrArray[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        if (commandStrArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                            throw new IncompleteCommandException(\"Incomplete Command\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        System.out.println(\"     Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        Task task \u003d new ToDo(commandStrArray[1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        System.out.println(\"       \" + task);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        list.add(task);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    } else if (commandStrArray[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        if (commandStrArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                            throw new IncompleteCommandException(\"Incomplete Command\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        String[] descriptionStrArray \u003d commandStrArray[1].split(\"/by\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        String dateString \u003d descriptionStrArray[1];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        Date date \u003d new SimpleDateFormat(\"dd/MM/yyyy hhmm\").parse(dateString);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        System.out.println(\"     Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        Task task \u003d new Deadline(descriptionStrArray[0], descriptionStrArray[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        System.out.println(\"       \" + task);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        list.add(task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    } else if (commandStrArray[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        if (commandStrArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                            throw new IncompleteCommandException(\"Incomplete Command\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        System.out.println(\"     Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        String[] descriptionStrArray \u003d commandStrArray[1].split(\"/at\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        Task task \u003d new Event(descriptionStrArray[0], descriptionStrArray[1]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        System.out.println(\"       \" + task);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        list.add(task);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        throw new InvalidCommandException(\"Invalid Command\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    System.out.println(\"     Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        } catch (IncompleteCommandException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"     ☹ OOPS!!! The description of a \" + commandStrArray[0] + \" cannot be empty.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"     ☹ OOPS!!! The date format is incorrect\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"     Please enter your date in this format: dd/MM/yyyy hhmm\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"     Eg: 2/12/2019 1800\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        saveList(list);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public static void saveList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        File file \u003d new File(\"/Users/sihao/Desktop/NUS AY19:20 Sem 1/CS2103/Duke/Data/Duke.txt\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file.getAbsoluteFile());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            for (Task t : list) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                bw.write(t.taskSavedTextFormat() + \"\\n\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public static void loadTaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        File file \u003d new File(\"/Users/sihao/Desktop/NUS AY19:20 Sem 1/CS2103/Duke/Data/Duke.txt\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            String taskString;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            while ((taskString \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                String[] taskStringArray \u003d taskString.split(\"\\\\|\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                if (taskStringArray[0].trim().equals(\"T\")) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    Task task \u003d new ToDo(taskStringArray[2].trim());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    if (taskStringArray[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        task.isDone \u003d true;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                } else if (taskStringArray[0].trim().equals(\"D\")) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    Task task \u003d new Deadline(taskStringArray[2].trim(), taskStringArray[3].trim());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    if (taskStringArray[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        task.isDone \u003d true;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    Task task \u003d new Event(taskStringArray[2].trim(), taskStringArray[3].trim());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    if (taskStringArray[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        task.isDone \u003d true;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "neoshh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 143
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neoshh"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    private String action;   //list, delete, done, todo, deadline, event, bye"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    private String nameOfTask; "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    private String dateStr;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\tprivate boolean exit \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\tpublic Command(String action, int index, String nameOfTask, String dateStr) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t\tthis.action \u003d action;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t\tthis.index \u003d index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t\tthis.nameOfTask \u003d nameOfTask;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        this.dateStr \u003d dateStr;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\tpublic void execute(TaskList tasks, Ui ui, Storage storage) throws IncompleteCommandException, InvalidCommandException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        if (action.equals(\"list\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            tasks.printList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        } else if (action.equals(\"delete\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"     Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"       \" + tasks.get(index));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            tasks.delete(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"     Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        } else if (action.equals(\"done\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        } else if (action.equals(\"bye\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        \tSystem.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            exit \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        } else if (action.equals(\"todo\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        \tTask newTask \u003d new ToDo(nameOfTask);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"     Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"       \" + newTask);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            tasks.add(newTask);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        } else if (action.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        \tTask newTask \u003d new Deadline(nameOfTask, dateStr);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"     Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"       \" + newTask);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            tasks.add(newTask);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        } else if (action.equals(\"event\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        \tTask newTask \u003d new Event(nameOfTask, dateStr);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"     Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"       \" + newTask);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            tasks.add(newTask);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        \tthrow new InvalidCommandException(\"Invalid Command\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\tpublic boolean isExit() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t\treturn exit;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "neoshh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 59
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neoshh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public String taskSavedTextFormat() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        String done \u003d \"0\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        if (super.isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            done \u003d \"1\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        return \"D | \" + done + \" | \" + super.description + \" | \" + by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neoshh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 22
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        new Duke(\"/Users/sihao/Desktop/NUS AY19:20 Sem 1/CS2103/Duke/Data/Duke.txt\").run();  "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 35,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neoshh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\tpublic DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neoshh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public String taskSavedTextFormat() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        String done \u003d \"0\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        if (super.isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            done \u003d \"1\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        return \"E | \" + done + \" | \" + super.description + \" | \" + at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neoshh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 22
    }
  },
  {
    "path": "src/main/java/IncompleteCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neoshh"
        },
        "content": "public class IncompleteCommandException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public IncompleteCommandException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 5
    }
  },
  {
    "path": "src/main/java/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neoshh"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 5
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neoshh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\tprivate static String action;   //list, delete, done, todo, deadline, event, bye"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    private static int index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    private static String nameOfTask; "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    private static String dateStr;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \taction \u003d fullCommand.split(\" \")[0];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \tif (action.equals(\"list\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            index \u003d -1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            nameOfTask \u003d \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            dateStr \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t} else if (action.equals(\"delete\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            nameOfTask \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            dateStr \u003d \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\ttry {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                index \u003d Integer.parseInt(fullCommand.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t} catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                throw new InvalidCommandException(\"Invalid Command\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t} catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t\tthrow new IncompleteCommandException(\"Incomplete Command\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t} else if (action.equals(\"done\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            nameOfTask \u003d \"\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            dateStr \u003d \"\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\ttry {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                index \u003d Integer.parseInt(fullCommand.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t} catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                throw new InvalidCommandException(\"Invalid Command\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t} catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t\tthrow new IncompleteCommandException(\"Incomplete Command\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t} else if (action.equals(\"bye\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\tindex \u003d -1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            nameOfTask \u003d \"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            dateStr \u003d \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t} else if (action.equals(\"todo\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\tindex \u003d -1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            dateStr \u003d \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\ttry {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t\tnameOfTask \u003d fullCommand.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t} catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t\tthrow new IncompleteCommandException(\"Incomplete Command\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t} else if (action.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\tindex \u003d -1;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\ttry {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t\tnameOfTask \u003d fullCommand.split(\" \", 2)[1].split(\"/by\")[0];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t\tdateStr \u003d fullCommand.split(\" \", 2)[1].split(\"/by\")[1];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t} catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t\tthrow new IncompleteCommandException(\"Incomplete Command\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t}    \t\t"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t} else if (action.equals(\"event\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\tindex \u003d -1;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\ttry {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t\tnameOfTask \u003d fullCommand.split(\" \", 2)[1].split(\"/by\")[0];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t\tdateStr \u003d fullCommand.split(\" \", 2)[1].split(\"/at\")[1];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t} catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t\tthrow new IncompleteCommandException(\"Incomplete Command\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t} "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t} else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\tthrow new InvalidCommandException(\"Invalid Command\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t}"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        String d \u003d dateStr;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \tif (!d.equals(\"\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\ttry {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                Date date \u003d new SimpleDateFormat(\"dd/MM/yyyy hhmm\").parse(dateStr);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t} catch (ParseException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t\tthrow new DukeException(\"Wrong date and time format\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        return new Command(action, index, nameOfTask, dateStr);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "neoshh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 82
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neoshh"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neoshh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\tString filePath;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\tpublic Storage(String filePath) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t\tthis.filePath \u003d filePath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        \tFile file \u003d new File(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            String taskString;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            while ((taskString \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                String[] taskStringArray \u003d taskString.split(\"\\\\|\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                if (taskStringArray[0].trim().equals(\"T\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    Task task \u003d new ToDo(taskStringArray[2].trim());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    if (taskStringArray[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        task.isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    taskList.add(task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                } else if (taskStringArray[0].trim().equals(\"D\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    Task task \u003d new Deadline(taskStringArray[2].trim(), taskStringArray[3].trim());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    if (taskStringArray[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        task.isDone \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    taskList.add(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    Task task \u003d new Event(taskStringArray[2].trim(), taskStringArray[3].trim());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    if (taskStringArray[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        task.isDone \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    taskList.add(task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            throw new DukeException(\"File not found\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    } "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \tFile file \u003d new File(\"/Users/sihao/Desktop/NUS AY19:20 Sem 1/CS2103/Duke/Data/Duke.txt\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file.getAbsoluteFile());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            for (Task t : list) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                bw.write(t.taskSavedTextFormat() + \"\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "neoshh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 59
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neoshh"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        System.out.println(\"     Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                + \"       [\\u2713] \" + description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public abstract String taskSavedTextFormat();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neoshh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 26
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neoshh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    private ArrayList\u003cTask\u003e list; "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \tthis.list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \tthis.list \u003d list;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \treturn this.list.get(index);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \tthis.list.remove(index);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public void done(int index) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        this.list.get(index).markAsDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \tthis.list.add(task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        return this.list.size();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \tSystem.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"     \" + i + \".\" + list.get(i - 1));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "neoshh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 41
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neoshh"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public String taskSavedTextFormat() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        String done \u003d \"0\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        if (super.isDone) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            done \u003d \"1\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        return \"T | \" + done + \" | \" + super.description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neoshh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 19
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neoshh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        System.out.println(\"     Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        System.out.println(\"     What can I do for you?\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \tSystem.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        System.out.println(\"     No task to load\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \tSystem.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        System.out.println(\"     \" + errorMessage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \tScanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \treturn sc.nextLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neoshh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 30
    }
  }
]
