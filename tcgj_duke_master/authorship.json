[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tcgj"
        },
        "content": "group \u0027tcgj.duke\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tcgj"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tcgj"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tcgj"
        },
        "content": "test {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tcgj"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tcgj"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tcgj"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    archiveVersion \u003d \"0.1.0\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tcgj": 18,
      "-": 14
    }
  },
  {
    "path": "src/main/java/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tcgj"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tcgj"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tcgj"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tcgj"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    protected Date deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    public DeadlineTask(String description, Date deadline) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        this(description, deadline, false);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    public DeadlineTask(String description, Date deadline, boolean done) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    public boolean hasArgs() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    public String getArgs() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        return new SimpleDateFormat(\"dd/MM/yyyy HHmm\").format(deadline);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        return String.format(\"[%s]%s (by: %s)\", getType(), super.toString(), deadline);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tcgj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tcgj": 36
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tcgj"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tcgj"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tcgj"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tcgj"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tcgj"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tcgj"
        },
        "content": "import java.io.OutputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tcgj"
        },
        "content": "import java.io.OutputStreamWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tcgj"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tcgj"
        },
        "content": "import java.nio.charset.Charset;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tcgj"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tcgj"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tcgj"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tcgj"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tcgj"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tcgj"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tcgj"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    public static final Charset DUKE_CHARSET \u003d StandardCharsets.UTF_8;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    public static final int CONTINUE_CODE \u003d 0;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    public static final int EXIT_CODE \u003d 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    protected BufferedReader reader;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    protected PrintWriter writer;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    protected ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    protected Path dataPath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    public Duke(InputStream in, OutputStream out, String saveLocation) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        reader \u003d new BufferedReader(new InputStreamReader(in));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        writer \u003d new PrintWriter(new OutputStreamWriter(out, DUKE_CHARSET));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        dataPath \u003d Path.of(saveLocation).normalize();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    public int mainFlow() throws IOException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        String input \u003d reader.readLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        if (input \u003d\u003d null) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            return EXIT_CODE;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            String[] data \u003d input.split(\"\\\\s+|$\", 2);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            data[0] \u003d data[0].toLowerCase();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            switch (data[0]) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                return EXIT_CODE;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                displayTaskList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                setTaskDone(data[1]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                addTodo(data[1]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                addDeadline(data[1]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                addEvent(data[1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                deleteTask(data[1]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            writer.println(e.getMessage());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            writer.flush();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        return CONTINUE_CODE;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    protected void run() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            loadFromFile();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            greet();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            int returnCode \u003d CONTINUE_CODE;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            while (returnCode !\u003d EXIT_CODE) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                returnCode \u003d mainFlow();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            bye();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            saveToFile();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            reader.close();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            e.printStackTrace(writer);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    protected void loadFromFile() throws IOException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        File file \u003d dataPath.toFile();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            try (BufferedReader reader \u003d Files.newBufferedReader(dataPath, DUKE_CHARSET)) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                String line;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                while ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                    String[] data \u003d line.split(\"\\\\s\\\\|SPACE\\\\|\\\\s\", -1);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                    boolean done \u003d data[1].equals(\"1\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                    switch (data[0]) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                        list.add(new TodoTask(data[2], done));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                        Date deadline \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(data[3]);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                        list.add(new DeadlineTask(data[2], deadline, done));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                        Date datetime \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(data[3]);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                        list.add(new EventTask(data[2], datetime, done));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                e.printStackTrace(writer);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    protected void saveToFile() throws IOException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        Files.createDirectories(dataPath.getParent());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        ArrayList\u003cString\u003e output \u003d formatList();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        Files.write("
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                dataPath,"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                output,"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                DUKE_CHARSET);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    protected ArrayList\u003cString\u003e formatList() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        ArrayList\u003cString\u003e outList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        String delimiter \u003d \" |SPACE| \";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        for (Task t : list) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            if (t.hasArgs()) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                outList.add(String.join(delimiter,"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                        t.getType(),"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                        t.isDone() ? \"1\" : \"0\","
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                        t.getDescription(),"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                        t.getArgs()));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                outList.add(String.join(delimiter,"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                        t.getType(),"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                        t.isDone() ? \"1\" : \"0\","
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tcgj"
        },
        "content": "                        t.getDescription()));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        return outList;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    protected void greet() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        String helloText \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        writer.println(helloText);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        writer.flush();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    protected void bye() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        writer.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        writer.flush();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    protected void addTodo(String taskInfo) throws DukeException {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        if (taskInfo.isEmpty()) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        Task task \u003d new TodoTask(taskInfo);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        writer.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        writer.println(\"  \" + task);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        writer.println(\"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        writer.flush();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    protected void addDeadline(String taskInfo) throws DukeException {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        if (taskInfo.isEmpty()) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            String[] details \u003d taskInfo.split(\"\\\\s+/by\\\\s+\", 2);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            Date deadline \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(details[1]);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            Task task \u003d new DeadlineTask(details[0], deadline);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            list.add(task);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            writer.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            writer.println(\"  \" + task);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            writer.println(\"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            writer.flush();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            throw new DukeException(\"OOPS!!! You did not specify a datetime.\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            throw new DukeException(\"OOPS!!! Please specify a date in the form \\\u0027dd/mm/yyyy HHMM\\\u0027\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    protected void addEvent(String taskInfo) throws DukeException {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        if (taskInfo.isEmpty()) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            String[] details \u003d taskInfo.split(\"\\\\s+/at\\\\s+\", 2);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            Date datetime \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(details[1]);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            Task task \u003d new EventTask(details[0], datetime);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            list.add(task);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            writer.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            writer.println(\"  \" + task);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            writer.println(\"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            writer.flush();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            throw new DukeException(\"OOPS!!! You did not specify a datetime.\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            throw new DukeException(\"OOPS!!! Please specify a date in the form \\\u0027dd/mm/yyyy HHMM\\\u0027\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    protected Task getTask(String taskStr) throws DukeException {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            int taskNo \u003d Integer.parseInt(taskStr);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            return list.get(taskNo - 1);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            throw new DukeException(\"OOPS!!! That is not a valid list number.\");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            throw new DukeException(\"OOPS!!! This task does not exist.\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    protected void setTaskDone(String index) throws DukeException {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        if (index.isEmpty()) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            throw new DukeException(\"OOPS!!! I don\u0027t know which task has been done.\");"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        Task task \u003d getTask(index);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        task.setDone(true);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        writer.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        writer.println(\"  \" + task);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        writer.flush();"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    protected void deleteTask(String index) throws DukeException {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        if (index.isEmpty()) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            throw new DukeException(\"OOPS!!! I don\u0027t know which task to delete.\");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        Task task \u003d getTask(index);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        list.remove(task);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        writer.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        writer.println(\"  \" + task);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        writer.println(\"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        writer.flush();"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    protected void displayTaskList() {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        int listSize \u003d list.size();"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        writer.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        for (int i \u003d 0; i \u003c listSize; i++) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            writer.println((i + 1) + \".\" + list.get(i));"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        writer.flush();"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        String path \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        if (args.length \u003e 0) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "tcgj"
        },
        "content": "            path \u003d args[0];"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        Duke duke \u003d new Duke(System.in, System.out, path);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tcgj": 266,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tcgj"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        super(\"\\u2639 \" + message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tcgj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tcgj": 5
    }
  },
  {
    "path": "src/main/java/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tcgj"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tcgj"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tcgj"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    protected Date datetime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    public EventTask(String description, Date datetime) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        this(description, datetime, false);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    public EventTask(String description, Date datetime, boolean done) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        this.datetime \u003d datetime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    public boolean hasArgs() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    public String getArgs() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        return new SimpleDateFormat(\"dd/MM/yyyy HHmm\").format(datetime);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        return String.format(\"[%s]%s (at: %s)\", getType(), super.toString(), datetime);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tcgj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tcgj": 35
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tcgj"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    protected final String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    protected boolean done;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    public Task(String description, boolean done) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        return done;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    public abstract boolean hasArgs();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    public abstract String getType();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    public abstract String getArgs();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        return String.format(\"[%s] %s\", (done ? \"\\u2713\" : \"\\u2718\"), description);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tcgj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tcgj": 32
    }
  },
  {
    "path": "src/main/java/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tcgj"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    public TodoTask(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        this(description, false);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    public TodoTask(String description, boolean done) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    public boolean hasArgs() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    public String getArgs() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tcgj"
        },
        "content": "        return String.format(\"[%s]%s\", getType(), super.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tcgj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tcgj": 29
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tcgj"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tcgj"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tcgj"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tcgj"
        },
        "content": "  [T][✘] read book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tcgj"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tcgj"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tcgj"
        },
        "content": "  [D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tcgj"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tcgj"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tcgj"
        },
        "content": "  [E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tcgj"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tcgj"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tcgj"
        },
        "content": "  [T][✘] join sports club"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tcgj"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tcgj"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tcgj"
        },
        "content": "  [T][✘] borrow book"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tcgj"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tcgj"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tcgj"
        },
        "content": "  [T][✓] read book"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tcgj"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tcgj"
        },
        "content": "  [T][✓] join sports club"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tcgj"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tcgj"
        },
        "content": "1.[T][✓] read book"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tcgj"
        },
        "content": "2.[D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tcgj"
        },
        "content": "3.[E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tcgj"
        },
        "content": "4.[T][✓] join sports club"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tcgj"
        },
        "content": "5.[T][✘] borrow book"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tcgj"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tcgj"
        },
        "content": "  [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tcgj"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tcgj"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tcgj"
        },
        "content": "  [E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tcgj"
        },
        "content": "Now you have 7 tasks in the list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tcgj"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tcgj"
        },
        "content": "1.[T][✓] read book"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tcgj"
        },
        "content": "2.[D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tcgj"
        },
        "content": "3.[E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tcgj"
        },
        "content": "4.[T][✓] join sports club"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tcgj"
        },
        "content": "5.[T][✘] borrow book"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tcgj"
        },
        "content": "6.[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tcgj"
        },
        "content": "7.[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tcgj"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "tcgj": 42
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tcgj"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tcgj"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tcgj"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tcgj"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tcgj"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tcgj"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tcgj"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tcgj"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tcgj"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tcgj"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tcgj"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "tcgj": 11
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tcgj"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tcgj"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tcgj"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tcgj"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tcgj"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tcgj"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tcgj"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tcgj"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tcgj"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tcgj"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tcgj"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tcgj"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tcgj"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tcgj"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tcgj"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tcgj"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tcgj"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tcgj"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tcgj"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tcgj"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tcgj"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tcgj"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tcgj"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "tcgj": 34
    }
  }
]
