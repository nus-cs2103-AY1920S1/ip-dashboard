[
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.ui.UI;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.task.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        ui \u003d new UI();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        String command \u003d ui.readCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        new Parser().parse(command, ui, tasks, storage.path);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        ui.showGoodByeMessage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        new Duke(\"C:\\\\duke\\\\src\\\\data\\\\tasklist.txt\").run();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "charliechoong": 32
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public DukeException(String message){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/parser/DateParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class DateParser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public Date parseDate(String strDate) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            SimpleDateFormat formatter1 \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            return formatter1.parse(strDate);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 16
    }
  },
  {
    "path": "src/main/java/seedu/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.ui.UI;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "/** Represents a command checker to verify if a command is valid. If valid, the command will be"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": " * executed accordingly."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    /** Checks if a command is valid and execute command. If command is incomplete, throws"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * ArrayOutOfBoundException. If command is invalid, throws DukeException."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * @param command Represents the command to be executedd."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * @param ui Represents the user input Object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * @param tasks Represents the TaskList object to add or remove Task objects."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * @param filePath Represents the file for the tasks to be recorded in."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public void parse(String command, UI ui, TaskList tasks, String filePath){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            while (!command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    String[] parts \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                        printList(tasks, ui);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    } else if (parts[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                        int taskNum \u003d Integer.parseInt(parts[1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                        ui.printReply(tasks.get(taskNum - 1).markAsDone());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    } else if (parts[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                        int taskNum \u003d Integer.parseInt(parts[1]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                        removeFromList(tasks, taskNum, ui);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    } else if (parts[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                        findKeyword(tasks, parts[1], ui);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    } else if (parts[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                        addToList(new Todo(parts[1]), tasks, fw, ui);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    } else if (parts[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                        String[] subparts \u003d parts[1].split(\" /by \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                        addToList(new Deadline(subparts[0], (subparts[1])), tasks, fw, ui);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    } else if (parts[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                        String[] subparts \u003d parts[1].split(\" /at \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                        addToList(new Event(subparts[0], (subparts[1])), tasks, fw, ui);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                        throw new DukeException(\"\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    ui.printReply(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    ui.printReply(\"OOPS!!! The description of a \" + command.split(\" \", 2)[0] + \" cannot be empty\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                command \u003d ui.readCommand();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        }catch (IOException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            System.out.println(\"File not found.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    /** Prints out all the tasks in the Task list."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * @param taskList The list that contains/may not contain tasks."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * @param ui User input that handles the printing."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public static void printList(TaskList taskList, UI ui){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        String reply \u003d \"Here are the tasks in your list:\\n\\t \";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        for(int i\u003d0; i\u003ctaskList.size(); i++) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            reply +\u003d (i + 1) + \".\" + taskList.get(i);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            if (i !\u003d taskList.size() - 1) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                reply +\u003d \"\\n\\t \";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        ui.printReply(reply);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    /** Adds a task to the Task list."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * @param task Task to be added to the list. Prints out a reply when task is added."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * @param taskList Task list for the task to be added to."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * @param fw File to record the tasks in Task list."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * @param ui Handles the printing of reply."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public static void addToList(Task task, TaskList taskList, FileWriter fw, UI ui) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        String reply \u003d \"Got it. I\u0027ve added this task:\\n\\t  \" + task + \"\\n\\tNow you have \" + taskList.size()"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                + ((taskList.size() \u003d\u003d 1) ? \" task\" : \" tasks\") + \" in the list.\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        ui.printReply(reply);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        String replyToFile \u003d task.toFile();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            fw.write(replyToFile);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        } catch (IOException e) { }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    /** Removes a task from the Task list. If task index is out of the list, throws DukeException."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * @param taskList Task list for the task to be removed from."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * @param taskIndex Index of the task to be removed."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * @param ui Handles the printing of reply."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * @throws DukeException If task index is more than the size of Task list."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public static void removeFromList(TaskList taskList, int taskIndex, UI ui) throws DukeException{"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        if(taskIndex \u003e taskList.size()){"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            throw new DukeException(\"\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        String reply \u003d \"Noted. I\u0027ve removed this task:\\n\\t  \" + taskList.remove(taskIndex-1) + \"\\n\\t\" +"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                \"Now you have \" + taskList.size() + ((taskList.size() \u003d\u003d 1)? \" task\": \" tasks\") + \" in the list.\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        ui.printReply(reply);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    /** Prints out all the tasks in the Task list containing the keyword input by user."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * @param taskList Task list containing the tasks."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * @param keyword A word parsed by user to search for the tasks containing this word."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * @param ui Handles the printing of the tasks."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public static void findKeyword(TaskList taskList, String keyword, UI ui) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        TaskList matchingTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        String reply \u003d \"Here are the matching tasks in your list:\\n\\t \";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        for(Task task: taskList) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            if(task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                matchingTasks.add(task);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        for(int i \u003d 1; i \u003c\u003d matchingTasks.size(); i++) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            reply +\u003d i + \".\" + matchingTasks.get(i-1);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            if(i \u003c matchingTasks.size()) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                reply +\u003d \"\\n\\t \";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        ui.printReply(reply);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 135
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public String path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public Storage(String filePath){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        this.path \u003d filePath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public File load(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        return new File(path);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 15
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.parser.DateParser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    protected String strBy;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public Deadline(String description, String strBy) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        this.strBy \u003d strBy;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        this.by \u003d new DateParser().parseDate(strBy);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public String toFile(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        return \"D | \" + (isDone?\"1\":\"0\") + \" | \" + this.description + \" | \" + this.strBy + \"\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + strBy + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 25
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.parser.DateParser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    protected String strAt;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public Event(String description, String strAt) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        this.strAt \u003d strAt;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        this.at \u003d new DateParser().parseDate(strAt);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + this.description + \" | \" + this.strAt + \"\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + strAt + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 25
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public Task(String description){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public String getStatusIcon(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        return (isDone? \"\\u2713\": \"\\u2718\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public String markAsDone(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        String reply \u003d \"Nice! I\u0027ve marked this task as done:\\n\\t\" +  \" [\\u2713] \" + this.description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public String toFile(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 33
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": " * Represents an ArrayList that takes in objects of type Task and its subclasses."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class TaskList extends ArrayList\u003cTask\u003e{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    /** This is the first constructor which is used to initialise an empty TaskList */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public TaskList(){}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    /** This is the second constructor which is used to initialise a non-empty TaskList."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * It reads the existing Task objects from a file and adds them to the TaskList."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * @param f Represents the file to be read."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * @throws DukeException  If f cannot be found."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public TaskList(File f) throws DukeException{"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            while(sc.hasNext()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                String[] parts \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                switch(parts[0]) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    add(new Todo(parts[2]));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    this.get(this.size() - 1).isDone \u003d (parts[1].equals(\"1\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    add(new Event(parts[2], parts[3]));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    this.get(this.size() - 1).isDone \u003d (parts[1].equals(\"1\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    add(new Deadline(parts[2], parts[3]));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    this.get(this.size() - 1).isDone \u003d (parts[1].equals(\"1\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            throw new DukeException(\"\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 47
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public Todo(String description){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public String toFile(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "       return \"T | \" + (isDone?\"1\":\"0\") + \" | \" + this.description + \"\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/ui/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private static final String REPLY_WRAPPER \u003d \"_______________________________________________________________\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private final PrintStream out;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public UI(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        this(System.in, System.out);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public UI(InputStream in, PrintStream out){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        this.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public void showWelcome(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        printReply(\"Hello! I\u0027m Duke\\n\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public String readCommand(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public void showGoodByeMessage(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        printReply(\"Bye. Hope to see you again soon.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public void showLoadingError(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        printReply(\"No file found.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public void printReply(String reply) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        System.out.println(\"\\t\" + REPLY_WRAPPER + \"\\n\\t\" + reply + \"\\n\\t\" + REPLY_WRAPPER);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 40
    }
  },
  {
    "path": "src/test/seedu/duke/parser/DateParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class DateParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public void testParseDate(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        assertEquals(\"Sun Dec 15 12:10:00 SGT 1996\", new DateParser().parseDate(\"15/12/1996 1210\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    void testParseDate_invalidFormat_null(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        assertEquals(null, new DateParser().parseDate(\"15121996 1210\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 16
    }
  },
  {
    "path": "src/test/seedu/duke/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        assertEquals(\"[T][\\u2718] running home\", new Todo(\"running home\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "charliechoong": 14
    }
  }
]
