[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public Deadline(String description, boolean isDone, LocalDateTime by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        return this.by.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        DateTimeFormatter myFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(myFormatter) + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WilliamRyank": 22
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        ui.printHello();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        while (!(command \u003d ui.getNext()).equals(\"bye\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                Parser.parse(tasks, ui, storage, command, ui.getNextLine());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                System.out.println(\"    _____________________________________\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                System.out.println(\"     \" + e.getMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                System.out.println(\"    _____________________________________\\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        storage.save(tasks.getListOfTasks());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        ui.printBye();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WilliamRyank": 30,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WilliamRyank": 7
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public Event(String description, boolean isDone, LocalDateTime at) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        return this.at.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        DateTimeFormatter myFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at.format(myFormatter) + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WilliamRyank": 22
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "     * Parses user input based on different type of command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "     * For each case, different parse requirement is needed"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "     * @param taskList TaskList of the current file."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "     * @param ui Ui of the project."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "     * @param storage Storage of the project."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "     * @param inputType InputType of the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "     * @param userInput The rest of user input after the inputType."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "     * @throws DukeException If user input is not in the format"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public static void parse(TaskList taskList, Ui ui, Storage storage, String inputType, String userInput) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        if (inputType.equals(\"todo\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                String description \u003d userInput.trim();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                if (description.isBlank()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                    throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                Task newTodo \u003d new Todo(description, false);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                taskList.addTask(newTodo);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                ui.printAddTask(taskList, newTodo);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                throw new DukeException(\"OOPS!!! Your input format is wrong. Use: todo [task description]\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        } else if (inputType.equals(\"list\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                if (!userInput.isBlank()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                    throw new Exception();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                ui.printTaskList(taskList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                throw new DukeException(\"OOPS!!! Your input format is wrong. Use: list\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        } else if (inputType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                String[] statement \u003d userInput.split(\"/by\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                String taskDescription \u003d statement[0].trim();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                String taskBy \u003d statement[1].trim();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                if (taskDescription.isBlank() || taskBy.isBlank()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                    throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                Task newDeadline \u003d new Deadline(taskDescription, false, dateTimeConverter(taskBy));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                taskList.addTask(newDeadline);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                ui.printAddTask(taskList, newDeadline);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                throw new DukeException(\"OOPS!!! Task description/Task by can not be empty\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                throw new DukeException(\"OOPS!!! Your input format is wrong. Use: deadline [task description] /by [dd/mm/yyyy HHmm]\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        } else if (inputType.equals(\"event\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                String[] statement \u003d userInput.split(\"/at\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                String taskDescription \u003d statement[0].trim();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                String taskAt \u003d statement[1].trim();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                if (taskDescription.isBlank() || taskAt.isBlank()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                    throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                Task newEvent \u003d new Event(taskDescription, false, dateTimeConverter(taskAt));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                taskList.addTask(newEvent);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                ui.printAddTask(taskList, newEvent);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                throw new DukeException(\"OOPS!!! Task description/Task at can not be empty\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                throw new DukeException(\"OOPS!!! Your input format is wrong. Use: event [task description] /at [dd/mm/yyyy HHmm]\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        } else if (inputType.equals(\"done\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(userInput.trim()) - 1;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                taskList.getListOfTasks().get(taskNumber).markAsDone();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                ui.printDoneTask(taskList, taskNumber);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                throw new DukeException(\"OOPS!!! The task number you specified is not in the list.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                throw new DukeException(\"OOPS!!! Your input format is wrong. Use: done [task number]\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        } else if (inputType.equals(\"delete\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(userInput.trim()) - 1;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                Task deletedTask \u003d taskList.getListOfTasks().get(taskNumber);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                taskList.getListOfTasks().remove(taskNumber);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                ui.printDeleteTask(taskList, deletedTask);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                throw new DukeException(\"OOPS!!! The task number you specified is not in the list.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                throw new DukeException(\"OOPS!!! Your input format is wrong. Use: delete [task number]\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        } else if (inputType.equals(\"find\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                String keyword \u003d userInput.trim();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                ArrayList\u003cTask\u003e filterTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                for (Task task : taskList.getListOfTasks()) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                    if (task.getTaskDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                        filterTasks.add(task);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                ui.printFindTasks(filterTasks);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                throw new DukeException(\"OOPS!!! Your input format is wrong. Use: find [task description]\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "     * Converts string to dateTime object in java."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "     * @param str String that will be converted."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "     * @return Date Time object if str can be converted."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "     * @throws ArrayIndexOutOfBoundsException If string can not be converted"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public static LocalDateTime dateTimeConverter(String str) throws ArrayIndexOutOfBoundsException{"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        String[] dateTime \u003d str.split(\" \");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        String[] date \u003d dateTime[0].split(\"/\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        String time \u003d dateTime[1];"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        return LocalDateTime.of(Integer.parseInt(date[2]),"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                Integer.parseInt(date[1]), Integer.parseInt(date[0]),"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                        Integer.parseInt(time.substring(0, 2)), Integer.parseInt(time.substring(2)));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WilliamRyank": 134
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    private static File file;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        file \u003d new File(filePath);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "     * Loads a file to populate the list of tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "     * If the file does not exist, a new file will be created"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "     * @return the list of tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public static ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            checkFileExist();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                String[] task \u003d sc.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                String taskType \u003d task[0].trim();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                    boolean isTaskDone \u003d task[1].trim().equals(\"1\") ? true : false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                    String taskDescription \u003d task[2].trim();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                    String taskBy \u003d task[3].trim();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                    listOfTasks.add(new Deadline(taskDescription, isTaskDone, Parser.dateTimeConverter(taskBy)));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                } else if (taskType.equals(\"E\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                    boolean isTaskDone \u003d task[1].trim().equals(\"1\") ? true : false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                    String taskDescription \u003d task[2].trim();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                    String taskAt \u003d task[3].trim();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                    listOfTasks.add(new Event(taskDescription, isTaskDone, Parser.dateTimeConverter(taskAt)));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                    boolean isTaskDone \u003d task[1].trim().equals(\"1\") ? true : false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                    String taskDescription \u003d task[2].trim();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                    listOfTasks.add(new Todo(taskDescription, isTaskDone));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        return listOfTasks;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "     * Saves current list of tasks to hard drive"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "     * @param listOfTasks List that will be saved to the file"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public static void save(List\u003cTask\u003e listOfTasks) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            for (Task task : listOfTasks) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                    String taskToAdd \u003d String.format(\"D | %s | %s | %s\\n\", task.isTaskDone() ? \"1\" : \"0\","
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                        task.getTaskDescription(), ((Deadline) task).getBy());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                    fw.write(taskToAdd);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                    String taskToAdd \u003d String.format(\"E | %s | %s | %s\\n\", task.isTaskDone() ? \"1\" : \"0\","
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                        task.getTaskDescription(), ((Event) task).getAt());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                    fw.write(taskToAdd);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                    String taskToAdd \u003d String.format(\"T | %s | %s\\n\", task.isTaskDone() ? \"1\" : \"0\","
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                        task.getTaskDescription());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                    fw.write(taskToAdd);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "     * Checks if the file exists, if not create a new file"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    private static void checkFileExist() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            String folder \u003d \"data\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            File directory \u003d new File(folder);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            if (!directory.exists()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                directory.mkdir();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                if (!file.exists()) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                    file.createNewFile();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WilliamRyank": 105
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        return (isDone ? \"+\" : \"-\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public boolean isTaskDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public String getTaskDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WilliamRyank": 30
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    private ArrayList\u003cTask\u003e listOfTasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e listOfTasks) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        this.listOfTasks \u003d listOfTasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        listOfTasks.add(task);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public void deleteTask(int taskNumber) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        Task deletedTask \u003d listOfTasks.get(taskNumber);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        listOfTasks.remove(taskNumber);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public ArrayList\u003cTask\u003e getListOfTasks() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        return listOfTasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WilliamRyank": 23
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WilliamRyank": 11
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public String getNextLine() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public String getNext() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        return sc.next();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public void printHello() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"    _____________________________________\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"     Hello! I\u0027m Duke\\n     What can I do for you?\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"    _____________________________________\\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public void printBye() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"    _____________________________________\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"    _____________________________________\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public void printAddTask(TaskList taskList, Task newTask) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"    _____________________________________\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"       \" + newTask);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"     Now you have \" + taskList.getListOfTasks().size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"    _____________________________________\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public void printTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"    _____________________________________\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getListOfTasks().size(); i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            int number \u003d i + 1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            System.out.println(\"     \" + number + \".\" + taskList.getListOfTasks().get(i));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"    _____________________________________\\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public void printDoneTask(TaskList taskList, int taskNumber) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"    _____________________________________\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"       \" + taskList.getListOfTasks().get(taskNumber));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"    _____________________________________\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public void printDeleteTask(TaskList taskList, Task deletedTask) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"    _____________________________________\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"     Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"       \" + deletedTask);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"     Now you have \" +  taskList.getListOfTasks().size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"    _____________________________________\\n\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public void printFindTasks(ArrayList\u003cTask\u003e listOfTasks) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"     _____________________________________\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"     Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        for (int i \u003d 0; i \u003c listOfTasks.size(); i++) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            int number \u003d i + 1;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            System.out.println(\"     \" + number + \".\" + listOfTasks.get(i));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"     _____________________________________\\n\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WilliamRyank": 74
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WilliamRyank": 10
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public void addTask(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        TaskList taskList \u003d new TaskList(list);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        taskList.addTask(new Task(\"borrow book\", false));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        assertEquals(1, taskList.getListOfTasks().size());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WilliamRyank": 16
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public void printCorrectly(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        Task todo \u003d new Todo(\"borrow book\", false);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        assertEquals(\"[T][-] borrow book\", todo.toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WilliamRyank": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "WilliamRyank": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "WilliamRyank": 22
    }
  }
]
