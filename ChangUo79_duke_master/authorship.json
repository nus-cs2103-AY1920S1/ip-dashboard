[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\tid \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\tid \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\ttoolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\tarchiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\tarchiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\tarchiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\tarchiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\ttestImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\tuseJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "run{"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\tstandardInput \u003d System.in"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "application {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ErwinChan": 26,
      "Jeffry Lum": 15
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":init"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":end"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 84
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rootProject.name \u003d \u0027duke\u0027"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 1
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\tprotected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\tpublic Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t\tsuper(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t\tthis.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t\treturn \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ErwinChan": 16
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "        String border \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "        System.out.println(border + \"\\nHello! I\u0027m Duke\\nWhat can I do for you?\\n\" + border);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "        ArrayList\u003cTask\u003e userList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "         int counter \u003d 0;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "            String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                System.out.println(border + \"\\nBye. Hope to see you again soon!\\n\" + border);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "            } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                int itemNumber \u003d 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                if (counter \u003d\u003d 0) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    System.out.println(border + \"\\nYou currently have no task!\\n\" + border);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    System.out.println(border + \"\\nHere are the tasks in your list:\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    for (int i \u003d 0; i \u003c counter; i++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                        System.out.println(itemNumber + \".\" + userList.get(i).toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                        itemNumber ++;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    System.out.println(border);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "            } else if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    String[] taskDone \u003d input.split(\" \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    if (taskDone.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                        throw new DukeException(border +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                                \"\\n☹ OOPS!!! Which task do you want to complete?\\n\" + border);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    if (taskDone.length \u003e 2) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                        throw new DukeInvalidArgumentException(\"OOPS!! Wrong format! Format: done [task number]\", input);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    int taskIndex \u003d Integer.parseInt(taskDone[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    userList.get(taskIndex - 1).markAsDone();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    System.out.println(border + \"\\nNice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    System.out.println(userList.get(taskIndex - 1).toString() +  \"\\n\" + border);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                } catch (DukeInvalidArgumentException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    System.out.println(border +\"\\n\" + e + \"\\n\" + border);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    System.out.println(e);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    System.out.println(border + \"\\nTask number not found! Try again!\\n\" + border);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    System.out.println(border + \"\\nOOPS!! Please input a task number!\\n\" + border);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "            } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    if (input.length() \u003c 9) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    String[] deadLineDate \u003d input.substring(9).split(\" /by \");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    if (deadLineDate.length !\u003d 2) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                        throw new  DukeInvalidArgumentException(\"OOPS!! Wrong format! Format: deadline [Task] /by [deadline]\","
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                                input);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    String taskD \u003d deadLineDate[0];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    String dateD \u003d deadLineDate[1];"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    Deadline newDeadLine \u003d new Deadline(taskD, dateD);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    userList.add(newDeadLine);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    counter ++;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    System.out.println(border + \"\\nGot it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    System.out.println(newDeadLine.toString());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    System.out.println(\"Now you have \" + counter + \" tasks in the list.\\n\" + border);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                } catch (DukeInvalidArgumentException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    System.out.println(border +\"\\n\" + e + \"\\n\" + border);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    System.out.println(border + \"\\n\" + e + \"\\n\" + border);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "            }else if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    if (input.length() \u003c 6) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    String[] eventDate \u003d input.substring(6).split(\" /at \");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    if (eventDate.length !\u003d 2) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                        throw new  DukeInvalidArgumentException(\"OOPS!! Wrong format! Format: event [Task] /at [time]\","
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                                input);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    String taskE \u003d eventDate[0];"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    String dateE \u003d eventDate[1];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    Event newEvent \u003d new Event(taskE, dateE);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    userList.add(newEvent);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    counter ++;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    System.out.println(border + \"\\nGot it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    System.out.println(newEvent.toString());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    System.out.println(\"Now you have \" + counter + \" tasks in the list.\\n\" + border);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                } catch (DukeInvalidArgumentException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    System.out.println(border +\"\\n\" + e + \"\\n\" + border);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    System.out.println(border + \"\\n\" + e + \"\\n\" + border);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "            } else if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    if (input.length() \u003c 5) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    String[] td \u003d input.split(\" \");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    if (td.length \u003e 2 ) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                        throw new DukeInvalidArgumentException(\"OOPS!! Wrong format! Format: todo [Task]\", input);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    String taskToDo \u003d td[1];"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    Todo newToDo \u003d new Todo(taskToDo);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    userList.add(newToDo);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    counter ++;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    System.out.println(border + \"\\nGot it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    System.out.println(newToDo.toString());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    System.out.println(\"Now you have \" + counter + \" tasks in the list.\\n\" + border);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                } catch (DukeInvalidArgumentException e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    System.out.println(border + \"\\n\" + e + \"\\n\" + border);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                catch (DukeException e) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    System.out.println(border + \"\\n\" + e + \"\\n\" + border);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "            } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    String[] taskDelete \u003d input.split(\" \");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    if (taskDelete.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! Which task would you like to delete?\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    if (taskDelete.length \u003e 2) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                        throw new DukeInvalidArgumentException(\"OOPS!! Wrong format! Format: delete [task number]\", input);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    int taskIndex \u003d Integer.parseInt(taskDelete[1]);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    String removedTask \u003d userList.get(taskIndex - 1).toString();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    userList.remove(taskIndex - 1);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    System.out.println(border + \"\\nNoted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    System.out.println(removedTask);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    counter --;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    System.out.println(\"Now you have \" + counter + \" tasks in the list.\\n\" + border);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                } catch (DukeInvalidArgumentException e) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    System.out.println(border + \"\\n\" + e + \"\\n\" + border);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    System.out.println(border + \"\\nOOPS!! Please input a task number!\\n\" + border);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    System.out.println(border + \"\\nTask number not found! Try again!\\n\" + border);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    System.out.println(border + \"\\n\" + e + \"\\n\" + border);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                } catch (DukeException e){"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                    System.out.println(border + \"\\n\" + e + \"\\n\" + border);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ErwinChan": 190,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\tprotected String inputMessage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\tpublic DukeException(String inputMessage) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t\tthis.inputMessage \u003d inputMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t\treturn this.inputMessage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ErwinChan": 15
    }
  },
  {
    "path": "src/main/java/DukeInvalidArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "public class DukeInvalidArgumentException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\tprotected String inputMessage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\tpublic DukeInvalidArgumentException (String message, String inputMessage) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t\tsuper(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t\tthis.inputMessage \u003d inputMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t\treturn super.toString() + \"\\nInput by user: \" + inputMessage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ErwinChan": 16
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\tprotected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\tpublic Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t\tsuper(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t\tthis.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t\treturn \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ErwinChan": 16
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\tprotected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\tprotected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\tpublic Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t\tthis.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t\tthis.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\tpublic String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t\treturn (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\tpublic void markAsDone(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t\tthis.isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\tpublic String getDescription() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t\treturn this.description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\tpublic String toString(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t\treturn \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ErwinChan": 32
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\tpublic Todo (String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t\tsuper(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t\treturn \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ErwinChan": 13
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "[T][✘] read book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "[D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "[E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "[T][✘] join sports club"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "[T][✓] read book"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "[T][✓] join sports club"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "[T][✘] borrow book"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "1.[T][✓] read book"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "2.[D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "3.[E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "4.[T][✓] join sports club"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "5.[T][✘] borrow book"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "Now you have 7 tasks in the list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "ErwinChan": 55
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "event project meeting /at Mon 2-4pm"
      }
    ],
    "authorContributionMap": {
      "ErwinChan": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ErwinChan"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "ErwinChan": 21
    }
  }
]
