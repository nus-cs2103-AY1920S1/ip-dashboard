[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dragontho"
        },
        "content": "//Solution below adapted from https://nus-cs2103-ay1920s1.github.io/website/schedule/week2/project.html"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dragontho"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dragontho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dragontho": 16
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Paul Tho"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dragontho"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Paul Tho"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    private static int pointer \u003d 0;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Paul Tho"
        },
        "content": "    private static final String border \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    private static final String upperBorder \u003d border + \"\\n\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    private static final String lowerBorder \u003d border + \"\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Paul Tho"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Paul Tho"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Paul Tho"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo + \"\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                + upperBorder + \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\" + lowerBorder);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Paul Tho"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Paul Tho"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                String str \u003d sc.nextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                String[] keywords \u003d str.split(\" \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                if (keywords[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Paul Tho"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                } else if (keywords[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    outputList(taskList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                } else if (keywords[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        System.out.println(doneTask(Integer.parseInt(keywords[1])));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        System.out.println(upperBorder"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                                + \"â˜¹ OOPS!!! I\u0027m sorry, but this task does not exist.\\n\" + lowerBorder);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                } else if (keywords[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        String temp \u003d parseTodo(keywords);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        System.out.println(todo(temp.strip()));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        pointer++;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    } catch (DukeException ex) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        System.out.println(upperBorder + ex.getMessage() + \"\\n\" + lowerBorder);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                } else if (keywords[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        String[] temp \u003d parseTaskTime(keywords, \"deadline\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        System.out.println(deadline(temp[0].strip(), temp[1].strip()));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        pointer++;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    } catch (DukeException ex) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        System.out.println(upperBorder + ex.getMessage() + \"\\n\" + lowerBorder);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                } else if (keywords[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        String[] temp \u003d parseTaskTime(keywords, \"event\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        System.out.println(event(temp[0].strip(), temp[1].strip()));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        pointer++;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    } catch (DukeException ex) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        System.out.println(upperBorder + ex.getMessage() + \"\\n\" + lowerBorder);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                } else if (keywords[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        System.out.println(deleteTask(Integer.parseInt(keywords[1])));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        pointer--;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    } catch (DukeException ex) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        System.out.println(upperBorder + ex.getMessage() + \"\\n\" + lowerBorder);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        System.out.println(upperBorder"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                                + \"â˜¹ OOPS!!! I\u0027m sorry, but this task does not exist.\\n\" + lowerBorder);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    throw new DukeException(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                System.out.println(upperBorder + ex.getMessage() + \"\\n\" + lowerBorder);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                System.out.println(upperBorder + \"â˜¹ OOPS!!! Please input something! :-(\" + \"\\n\" + lowerBorder);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Paul Tho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Paul Tho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Paul Tho"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        System.out.println(upperBorder + \"Bye. Hope to see you again soon!\\n\" + lowerBorder);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Paul Tho"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Paul Tho"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    // public static String addToList(int pointer, String string) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    //     taskList[pointer] \u003d new Task(string);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    //     return upperBorder + \"added: \" + string + \"\\n\" + lowerBorder;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    // }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public static void outputList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        System.out.println(border + \"\\n\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        for (int i \u003d 1; i \u003c taskList.size() + 1; i++) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            System.out.println(i + \". \" + taskList.get(i - 1));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        System.out.println(lowerBorder);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public static String doneTask(int pointer) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        taskList.get(pointer - 1).setDone();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        return upperBorder + \"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            + taskList.get(pointer - 1) + \"\\n\" + lowerBorder;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public static String todo(String string) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        taskList.add(new Todo(string));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        return taskWrap(taskList.get(pointer), \"add\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public static String deadline(String string, String by) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        taskList.add(new Deadline(string, by));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        return taskWrap(taskList.get(pointer), \"add\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public static String event(String string, String at) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        taskList.add(new Event(string, at));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        return taskWrap(taskList.get(pointer), \"add\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public static String taskWrap(Task task, String type) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            case \"add\":"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                return upperBorder + \"Got it. I\u0027ve added this task:\\n\" + task"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                + \"\\n\" + \"Now you have \" + (pointer + 1) + \" tasks in the list.\\n\" + lowerBorder;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            case \"delete\":     "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                return upperBorder + \"Noted. I\u0027ve removed this task:\\n\" + task"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                + \"\\n\" + \"Now you have \" + (pointer - 1) + \" tasks in the list.\\n\" + lowerBorder;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public static String parseTodo(String[] keywords) throws DukeException {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        if (keywords.length \u003c 2) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            throw new DukeException(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        }else {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            String temp \u003d \"\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            for (int i \u003d 1; i \u003c keywords.length; i++) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                temp \u003d temp + \" \" + keywords[i];"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            return temp;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public static String[] parseTaskTime(String[] keywords, String dateTimeType) throws DukeException {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dragontho"
        },
        "content": "       if (keywords.length \u003c 2) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            throw new DukeException(\"â˜¹ OOPS!!! The description of a \" + dateTimeType + \" cannot be empty.\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            String temp \u003d \"\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            String date \u003d \"\";"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            boolean flag \u003d false;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            switch (dateTimeType) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                for (int i \u003d 1; i \u003c keywords.length; i++) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    if (flag) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        date \u003d date + \" \" + keywords[i];"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    } else if (keywords[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        flag \u003d true;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        temp \u003d temp + \" \" + keywords[i];"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                for (int i \u003d 1; i \u003c keywords.length; i++) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    if (flag) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        date \u003d date + \" \" + keywords[i];"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    } else if (keywords[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        flag \u003d true;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        temp \u003d temp + \" \" + keywords[i];"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            if (date.equals(\"\")) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                switch (dateTimeType) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    throw new DukeException(\"â˜¹ OOPS!!! Your deadline does not have a /by.\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    throw new DukeException(\"â˜¹ OOPS!!! Your event does not have an /at.\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            return new String[] {temp, date};"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public static String deleteTask(int pointer) throws DukeException {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            return taskWrap(taskList.remove(pointer - 1), \"delete\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            throw new DukeException(\"â˜¹ OOPS!!! I\u0027m sorry, but this task does not exist.\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dragontho": 183,
      "Paul Tho": 14,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dragontho"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dragontho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dragontho": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dragontho"
        },
        "content": "//Solution below adapted from https://nus-cs2103-ay1920s1.github.io/website/schedule/week2/project.html"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dragontho"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dragontho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dragontho": 16
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dragontho"
        },
        "content": "//Solution below adapted from https://nus-cs2103-ay1920s1.github.io/website/schedule/week2/project.html"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dragontho"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        return (isDone ? \"âœ“\" : \"âœ—\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + \" \" + description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dragontho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dragontho": 24
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dragontho"
        },
        "content": "//Solution below adapted from https://nus-cs2103-ay1920s1.github.io/website/schedule/week2/project.html"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dragontho"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dragontho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dragontho": 13
    }
  },
  {
    "path": "test-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dragontho"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dragontho"
        },
        "content": " ____        _"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dragontho"
        },
        "content": "|  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dragontho"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dragontho"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dragontho"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dragontho"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dragontho"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dragontho"
        },
        "content": "todo This is a test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dragontho"
        },
        "content": "deadline do this project /by 22/08/2019"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dragontho"
        },
        "content": "event cousins meetup /at when again lol"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dragontho"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dragontho"
        },
        "content": "[T][ï¿½??] This is a test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dragontho"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dragontho"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dragontho"
        },
        "content": "[D][ï¿½??] do this project (by: 22/08/2019)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dragontho"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dragontho"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dragontho"
        },
        "content": "[E][ï¿½??] cousins meetup (at: when again lol)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dragontho"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dragontho"
        },
        "content": "bye"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dragontho"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "dragontho": 42
    }
  },
  {
    "path": "test-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dragontho"
        },
        "content": "todo This is a test"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dragontho"
        },
        "content": "deadline do this project /by 22/08/2019"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dragontho"
        },
        "content": "event cousins meetup /at when again lol"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dragontho"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "dragontho": 4
    }
  },
  {
    "path": "test-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dragontho"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dragontho"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dragontho"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dragontho"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dragontho"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dragontho"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dragontho"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dragontho"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dragontho"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dragontho"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dragontho"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dragontho"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dragontho"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dragontho"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "dragontho": 21
    }
  }
]
