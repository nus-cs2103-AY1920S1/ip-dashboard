[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "[D][N] this (by: 02/12/2019 1800)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "atharvjoshi": 2
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * Encapsulates a deadline-type task handled by Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * A deadline differs from other tasks because it has a due date."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * @author atharvjoshi"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * @version CS2103 AY19/20 Sem 1 iP Week 2"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /** The date by which task is due */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private String dueDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /** Date / Time converted to Date format */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private Date byWhen;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Creates a deadline with a description and due date."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @param description string representing the description of the deadline."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @param dueDate string representing date by which deadline is due."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public Deadline(String description, String dueDate) throws ParseException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        this.byWhen \u003d this.toDate();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Return a string representation of this deadline."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @return string representing this deadline."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + dueDate + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public Date toDate() throws ParseException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            return new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(this.dueDate);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        } catch (ParseException exception) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            System.out.println(\"Looks like you entered the incorrect Date/Time \""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    + \"format. Please follow \u003cdd\u003e/\u003cmm\u003e/\u003cyyyy\u003e \u003chhmm\u003e\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "atharvjoshi": 50
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "import java.lang.Integer;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "import java.lang.StringBuilder;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-Level-8"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * Encapsulates attributes and behaviour of Duke, a personal assistant chatbot."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * Duke manages a user\u0027s list of tasks. It can store, add to, remove from, or"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * modify the contents of the list. User input must come either in the form of"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * commands \u0027list\u0027, \u0027bye\u0027 \u0027done \u003ctask index\u003e\u0027, \u0027delete \u003ctask index\u003e\u0027 or storage"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * requests beginning with the type of task to be stored. Duke supports three"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * types of tasks - todos, deadlines, and events. Deadlines and events need to"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * be supplied with additional date or time information. The input format for"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * todos is \u0027todo \u003ctask description\u003e\u0027 and that for deadlines and events is"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * \u0027\u003ctask type\u003e \u003ctask description\u003e / \u003cdate/time\u003e\u0027. Deviating from this input"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * format results in Duke supplying error messages to the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * @author atharvjoshi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * @contributors j-lum, damithc"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * @version CS2103 AY19/20 Sem 1 iP Week 2"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * An enumeration of all commands handled by Duke, which currently include:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * BYE, DEADLINE, DELETE, DONE, EVENT, LIST, TODO."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private enum Command {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        BYE {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            public void run(Duke duke) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                duke.exit();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        }, DEADLINE {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            public void run(Duke duke) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                duke.storeTask(this.name());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        }, DELETE {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            public void run(Duke duke) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                duke.deleteTask(this.name());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        }, DONE {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            public void run(Duke duke) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                duke.markTaskAsDone(this.name());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        }, EVENT {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            public void run(Duke duke) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                duke.storeTask(this.name());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        }, LIST {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            public void run(Duke duke) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                duke.printTasks();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        }, TODO {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            public void run(Duke duke) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                duke.storeTask(this.name());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        };"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "         * Abstract method to run command, specified by each command"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "         */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        public abstract void run(Duke duke);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /** a unique logo for Duke */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private final String logo;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /** welcome message */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private String welcomeMessage;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /** exit message */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private String exitMessage;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /** flag to indicate if Duke is listening to commands from the user */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private boolean isListening;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /** a list of all tasks entered by the user */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /** current command being processed by Duke */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private String currentCommand;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /** Handler for loading from and writing to hard disk*/"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Creates and initialises an instance of Duke."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Duke is initialised with a unique logo, a welcome and exit message,"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * active status (listening or not listening), and an empty list of tasks"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * to be added to by the user."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        this.logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        this.welcomeMessage \u003d \"Hello! I\u0027m Duke\\n\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        this.exitMessage \u003d \"Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        // when an instance of Duke is created, it starts listening to commands"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        this.isListening \u003d true;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        // initialise ArrayList to store Tasks"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        // initialise handler for loading from and writing to hard disk"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Starts running Duke by showing a welcome message and the list of tasks"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * currently being managed by Duke."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        System.out.print(welcomeMessage);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        this.loadListFromFile();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Processes a command entered by the user."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * This method runs through a list of accepted commands and handles"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * them accordingly. It prints an error message if it encounters an"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * unrecognised command."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @param inputString a string containing the command(s) entered by the user"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public void processCommand(String inputString) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        // set current command"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        this.currentCommand \u003d inputString;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        // extract the imperative specified by the user to identify which"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        // command is to be executed by Duke"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        String imperative \u003d inputString.split(\" \")[0].toUpperCase();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        // try to create the command enum based on the imperative and run it"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        // if the imperative entered is unrecognised, inform the user"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            Command command \u003d Command.valueOf(imperative);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            command.run(this);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        } catch (IllegalArgumentException exceptionOne) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            System.out.println(\"You entered a command I do not understand :-(\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            System.out.println(\"Let\u0027s speak the same language! Type \u0027help\u0027 to \""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    + \"see the list of commands I understand :-)\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        } catch (NullPointerException exceptionTwo) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            // the user has entered an empty line, wait for next command"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Exits the chatbot application with an exit message."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        this.isListening \u003d false;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        System.out.print(exitMessage);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        this.loadListFromFile();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Returns the current listening state of Duke."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @return true if Duke is currently listening to commands, false otherwise."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public boolean getIsListening() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        return (this.isListening);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Prints all tasks entered by the user in a readable format."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private void printTasks() {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        // inform user if the list is empty"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        if (this.tasks.isEmpty()) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            System.out.println(\"No tasks in your list!\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            // loop through each task in list and print it"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            int listSize \u003d this.tasks.size();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            for (int i \u003d 0; i \u003c listSize; i++) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                // specified format e.g. \"1. task 1\""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                Task currentTask \u003d this.tasks.get(i);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                System.out.format(\"%d. %s\\n\", i + 1, currentTask);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Creates a new task based on given task type and attributes."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @param taskType the type of task to be created - deadline, event, todo"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @param taskAttributes the description and date/time of the task"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @return the new task if one can be created, or null otherwise"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @throws IndexOutOfBoundsException if incorrect input format encountered"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private Task createNewTask(String taskType, String taskAttributes)"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        if (taskType.equals(\"TODO\")) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            return new Todo(taskAttributes);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                // try to obtain the description and date/time information of"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                // the deadline / event. Inform user if the input is in an"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                // incorrect format."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                String[] splitTaskAttributes \u003d taskAttributes.split(\"\\\\/\", 2);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                String taskDescription \u003d splitTaskAttributes[0];"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                String taskDateTime \u003d splitTaskAttributes[1].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                System.out.println(taskDateTime);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                if (taskType.equals(\"DEADLINE\")) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    return new Deadline(taskDescription, taskDateTime);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                } else if (taskType.equals(\"EVENT\")) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    return new Event(taskDescription, taskDateTime);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            } catch (IndexOutOfBoundsException exceptionOne) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                System.out.println(\"Looks like your format is incorrect. \""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                        + \"Please follow \u003cevent type\u003e \u003cdescription\u003e / \u003cdd/mm/yyyy\u003e \u003chhmm\u003e\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            } catch (IndexOutOfBoundsException | ParseException exception) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                System.out.println(\"Looks like your format is incorrect. \""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                        + \"Please follow \u003cevent type\u003e \u003cdescription\u003e \""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                        + \"/ \u003cdd\u003e/\u003cmm\u003e/\u003cyyyy\u003e \u003chh\u003e\u003cmm\u003e\");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-Level-8"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Stores tasks such as deadlines, events, and todos in the chatbot\u0027s"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * internal list of tasks."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @param taskType the type of task to store"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @throws IndexOutOfBoundsException if the user enters a task with an"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *      empty description."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private void storeTask(String taskType)"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            // try to get the task attributes from the current command"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            // if the task attributes are empty, inform the user"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            String taskAttributes \u003d this.currentCommand.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            // try to create a new task based on obtained attributes"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            // add this new task to the list and inform the user"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            Task newTask \u003d this.createNewTask(taskType, taskAttributes);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            if (newTask !\u003d null) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                this.tasks.add(newTask);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                        + \"  \" + newTask);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                System.out.format(\"Now you have %d tasks in the list.\\n\","
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                        this.tasks.size());"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                // write change to file"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                this.updateFile();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        } catch (IndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            System.out.println(\"Please enter a description of the \" +"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    taskType + \" you want to get done :-)\");"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Marks the task specified by the user as \u0027done\u0027 and informs the user."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @param commandType the command type i.e. \"DONE\"."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @throws NumberFormatException if the user does not enter an integer"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *      after the command type \u0027done\u0027."
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @throws IndexOutOfBoundsException if the user provides an index"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *      bigger than the size of the list."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private void markTaskAsDone(String commandType)"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            throws NumberFormatException, IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        if (this.tasks.isEmpty()) {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            // if the user is trying this command on an empty task list"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            System.out.println(\"No tasks in your list to complete!\");"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        } else if (this.currentCommand.equalsIgnoreCase(commandType)) {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            // the user has not specified the index of the task to be marked"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            System.out.println(\"Please specify the index of the task \""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    + \"you wish to mark as completed!\");"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                // try to get index of the task to be marked from the input"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                String taskNumber \u003d this.currentCommand.split(\" \")[1];"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                int taskIndex \u003d Integer.parseInt(taskNumber) - 1;"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                // retrieve task from list, mark as done, and inform the user"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                Task currentTask \u003d this.tasks.get(taskIndex);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                if (!currentTask.getIsDone()) {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    currentTask.setTaskAsDone(true);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    System.out.println(\"   \" + currentTask);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    // save changes to file"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    this.updateFile();"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    System.out.println(\"This task has already been done!\");"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            } catch (NumberFormatException exceptionOne) {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                // if the user does not specify an integer in the command"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                System.out.println(\"Please input an integer which is the \" +"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                        \"index of the task you wish to mark as done.\");"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            } catch (IndexOutOfBoundsException exceptionTwo) {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                // if the user specifies an index that is bigger than list size"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                System.out.println(\"You\u0027ve specified a 0 index or an index \" +"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                        \"that is bigger than the size of your list!\");"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Deletes a specified task from the list and informs the user."
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @param commandType the command type i.e. \"DELETE\"."
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @throws NumberFormatException if the user does not enter an integer"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *      after the command type \u0027delete\u0027."
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @throws IndexOutOfBoundsException if the user provides an index bigger"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *      than the size of the list."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private void deleteTask(String commandType)"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            throws NumberFormatException, IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        if (this.tasks.isEmpty()) {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            // if the user is trying this command on an empty task list"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            System.out.println(\"No tasks in your list to delete!\");"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        } else if (this.currentCommand.equalsIgnoreCase(commandType)) {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            // the user has not specified the index of the task to be marked"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            System.out.println(\"Please specify the index of the task \""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    + \"you wish to delete!\");"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                // obtain the index of the task to be deleted"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                String taskNumber \u003d this.currentCommand.split(\" \")[1];"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                int taskIndex \u003d Integer.parseInt(taskNumber) - 1;"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                // retrieve task to be removed, remove it, and inform the user"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                Task taskToRemove \u003d this.tasks.get(taskIndex);"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                this.tasks.remove(taskIndex);"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                System.out.println(\"   \" + taskToRemove);"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                System.out.format(\"Now you have %d tasks in the list\\n\","
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                        this.tasks.size());"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                // save changes to file"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                this.updateFile();"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            } catch (NumberFormatException exceptionOne) {"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                // if the user does not specify an integer in the command"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                System.out.println(\"Please input an integer which is the \" +"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                        \"index of the task you wish to mark as done.\");"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            } catch (IndexOutOfBoundsException exceptionTwo) {"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                // if the user specifies an index that is bigger than list size"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                System.out.println(\"You\u0027ve specified a 0 index or index \""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                        + \"that is bigger than the size of your list!\");"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private void updateFile() {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            if (!this.tasks.isEmpty()) {"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                // loop through each task in list and append to string builder."
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                int listSize \u003d this.tasks.size();"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                for (int i \u003d 0; i \u003c listSize; i++) {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    Task currentTask \u003d this.tasks.get(i);"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    sb.append(currentTask.toString());"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    sb.append(\"\\n\");"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                this.storage.writeToFile(sb.toString());"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            System.out.println(\"Sorry. I can\u0027t save this change :-(\");"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private void loadListFromFile() {"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            this.storage.printFileContents();"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        } catch (FileNotFoundException exception) {"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            System.out.println(\"Sorry! Duke couldn\u0027t find the file specified\" +"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    \". Please try again :-)\");"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "atharvjoshi": 385,
      "-": 8
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * Encapsulates a event-type task handled by Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * A event differs from other tasks because it has a date on which it is to"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * occur."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * @author atharvjoshi"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * @version CS2103 AY19/20 Sem 1 iP Week 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /** String representing date or time at which event is slated to occur */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private String dateTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /** Date / Time converted to Date format */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private Date when;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Creates an event with a description and date/time information."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @param description string representing description of event."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @param dateTime string representing when the event will occur."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public Event(String description, String dateTime) throws ParseException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        this.when \u003d this.toDate();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Return a string representation of this event."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @return string representing this event."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + dateTime + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public Date toDate() throws ParseException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            return new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(this.dateTime);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        } catch (ParseException exception) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            System.out.println(\"Looks like you entered the incorrect Date/Time \""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    + \"format. Please follow \u003cdd\u003e/\u003cmm\u003e/\u003cyyyy\u003e \u003chhmm\u003e\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "atharvjoshi": 50
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * Driver class for Duke, a personal assistant chatbot."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * @author atharvjoshi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * @version CS2103 AY19/20 Sem 1 iP Week 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * The main method for Duke."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Creates a new instance of Duke, asks Duke to greet user, and then reads"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * data from stdin. This input is then handed over to Duke for processing."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @param args command(s) from the user"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        // create an instance of Duke with the file containing the task list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        Duke duke \u003d new Duke(\"../../../data/duke.txt\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        duke.start();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        // scan for commands from the over and send them to Duke for processing"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        while (duke.getIsListening()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            duke.processCommand(scanner.nextLine());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "atharvjoshi": 30
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * Deals with storage - loading tasks from file and saving to file"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public void printFileContents() throws FileNotFoundException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        // if file is empty, inform the user"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        if (file.exists() \u0026\u0026 file.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            System.out.println(\"Your task list is empty. Use Duke to \" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                    \"add tasks to your list!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            // read file using Scanner class"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            Scanner s \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            // print file contents line by line until end of file"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            System.out.println(\"Here is your current task list: \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "                System.out.println(s.nextLine());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public void writeToFile(String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.filePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        fw.write(\"\\n\"); // add newline"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "atharvjoshi": 43
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * Encapsulates a task handled by Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * A task has a description and a status, for each of which getter methods have"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * been provided. The task status can also be updated when a task is done."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * @author atharvjoshi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * @version CS2103 AY19/20 Sem 1 iP Week 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /** The description of the task */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /** The status of the task - done or not done */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Creates a task with a description and a status."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @param description string representing the description of this task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Retrieves the unicode icon indicating task status."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @return tick mark if task is done or cross mark if task is not done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    private String getTaskStatusIcon() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        return (this.isDone ? \"Y\" : \"N\"); // return Y or N"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        // return (this.isDone ? \"\\u2713\" : \"\\u2718\"); // return tick or X symbols"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Get current status of this task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @return true if current task is done, false if current task is not done."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Changes the status of the task to \u0027done\u0027."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @param hasBeenDone boolean to indicate that the task has been completed."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public void setTaskAsDone(boolean hasBeenDone) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        this.isDone \u003d hasBeenDone;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Return a string representation of this task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @return string representing this task."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        return \"[\" + this.getTaskStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "atharvjoshi": 64
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * Encapsulates a todo-type task handled by Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * A todo differs from other tasks because it has no due date, it simply has"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * a task description."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * @author atharvjoshi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " * @version CS2103 AY19/20 Sem 1 iP Week 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Create a todo with a description."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @param description string representing description of this todo."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * Return a string representation of this todo."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     * @return string representing this todo."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "atharvjoshi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "atharvjoshi": 29
    }
  }
]
