[
  {
    "path": "src/main/java/org/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.function.Function;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.task.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.task.EventTask;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.task.DeadlineTask;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.task.TaskType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.json.JsonParser;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.json.JsonWriter;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.json.ValueHandler;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.ui.DukeIO;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.ui.Command;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.util.CounterDecorator;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate static final String[] initialGreeting \u003d new String[]{"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\"Hello! I\u0027m Duke\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\"What can I do for you?\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t};"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate DukeIO io;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate void addTask(Task t) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.taskList.add(t);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.io.say("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\"Got it. I\u0027ve added this task:\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\"  \" + t,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tString.format(\"Now you have %d task%s in the list.\","
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tthis.taskList.size(),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tthis.taskList.size() \u003d\u003d 1 ? \"\" : \"s\")"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate boolean handleBye(Command input) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.io.say(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate boolean displayList(Command input) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.io.say(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.io.say(this.taskList.stream()"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t.map(Object::toString)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t.map(new CounterDecorator(1))"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t.iterator());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn false;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate boolean makeDeadlineTask(Command input) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tString description \u003d input.arguments;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tString deadline \u003d input.namedArguments.get(\"by\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tif(deadline \u003d\u003d null) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tdeadline \u003d \"unknown\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tDeadlineTask task \u003d new DeadlineTask(description, deadline);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.addTask(task);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn false;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate boolean makeEventTask(Command input) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tString description \u003d input.arguments;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tString timing \u003d input.namedArguments.get(\"at\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tif(timing \u003d\u003d null) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\ttiming \u003d \"unknown\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tEventTask task \u003d new EventTask(description, timing);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.addTask(task);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn false;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate boolean makeToDoTask(Command input) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.addTask(new Task(input.arguments));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn false;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t} "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate boolean markAsDone(Command input) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tint index;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tindex \u003d Integer.parseInt(input.arguments);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t} catch(NumberFormatException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthrow new DukeException(\"Index provided was not an integer!\", e);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tif(index \u003c 0 || index \u003e this.taskList.size()) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthrow new DukeException(\"There\u0027s no task with that index!\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tTask selectedTask \u003d this.taskList.get(index-1);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tselectedTask.markComplete();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.io.say(\"Nice! I\u0027ve marked this task as done:\","
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\"  \" + selectedTask);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn false;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate boolean deleteTask(Command input) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tint index;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tindex \u003d Integer.parseInt(input.arguments);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t} catch(NumberFormatException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthrow new DukeException(\"Index provided was not an integer!\", e);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tif(index \u003c 0 || index \u003e this.taskList.size()) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthrow new DukeException(\"There\u0027s no task with that index!\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tTask selectedTask \u003d this.taskList.remove(index-1);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.io.say(\"Nice! I\u0027ve marked this task as done:\","
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\"  \" + selectedTask,"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tString.format(\"Now you have %d task%s in the list.\","
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tthis.taskList.size(),"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tthis.taskList.size() \u003d\u003d 1 ? \"\" : \"s\"));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn false;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate Duke() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.io \u003d new DukeIO();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t//Bind command handlers"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.io.bindCommand(\"list\", this::displayList);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.io.bindCommand(\"done\", this::markAsDone);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.io.bindCommand(\"bye\", this::handleBye);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.io.bindCommand(\"deadline\", this::makeDeadlineTask);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.io.bindCommand(\"event\", this::makeEventTask);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.io.bindCommand(\"todo\", this::makeToDoTask);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.io.bindCommand(\"delete\", this::deleteTask);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.io.setUnknownCommandHandler(cmd -\u003e { throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means. :-(\"); });"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate static final String SAVE_PATH \u003d \"./duke.json\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate ArrayList\u003cTask\u003e loadStorage() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\ttry(FileReader read \u003d new FileReader(SAVE_PATH)) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\treturn JsonParser.parse(read, ValueHandler.listOf(new TaskType.Builder()));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t} catch(FileNotFoundException e) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\treturn new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t} catch(IOException e) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthrow new DukeException(\"Unable to load saved data\", e);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate void saveStorage(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\ttry(FileWriter write \u003d new FileWriter(SAVE_PATH);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tJsonWriter jw \u003d new JsonWriter(write)) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tjw.writeValue(tasks);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t} catch(Exception e) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthrow new DukeException(e);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate void run() {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.loadStorage();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t//Start off greeting the user."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.io.withDialogBlock(() -\u003e {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthis.io.say(initialGreeting);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthis.taskList \u003d this.loadStorage();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t});"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t//Start listen loop."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.io.listen();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.io.withDialogBlock(() -\u003e {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthis.saveStorage(this.taskList);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t});"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tDuke duke \u003d new Duke();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tduke.run();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 185,
      "-": 3
    }
  },
  {
    "path": "src/main/java/org/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class DukeException extends RuntimeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic DukeException() {}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic DukeException(String message) { super(message); }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic DukeException(Exception inner) { super(inner); }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic DukeException(String message, Exception inner) { super(message, inner); }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 8
    }
  },
  {
    "path": "src/main/java/org/duke/json/ArrayHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.json;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.function.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public interface ArrayHandler\u003cT\u003e {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic void handleElement(Receiver receiver);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic T handleEnd();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic static \u003cT\u003e ValueHandler\u003cArrayList\u003cT\u003e\u003e listOf(ValueHandler\u003cT\u003e valueHandler) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn new ValueHandler\u003cArrayList\u003cT\u003e\u003e() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tpublic ArrayHandler\u003cArrayList\u003cT\u003e\u003e handleArray() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\treturn new ListValue\u003c\u003e(valueHandler);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t};"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic class ListValue\u003cT\u003e implements ArrayHandler\u003cArrayList\u003cT\u003e\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tprivate final ArrayList\u003cT\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tprivate final ValueHandler\u003cT\u003e valueHandler;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tpublic ListValue(ValueHandler\u003cT\u003e valueHandler) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthis.valueHandler \u003d valueHandler;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tpublic void handleElement(Receiver receiver) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tT elem \u003d receiver.receive(valueHandler);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tlist.add(elem);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tpublic ArrayList\u003cT\u003e handleEnd() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\treturn list;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 32
    }
  },
  {
    "path": "src/main/java/org/duke/json/JsonException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.json;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class JsonException extends RuntimeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic JsonException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tsuper(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic JsonException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tsuper(message, cause);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic JsonException(String format, Object... args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tsuper(String.format(format, args));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic JsonException(String format, Throwable cause, Object... args) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tsuper(String.format(format, args), cause);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 16
    }
  },
  {
    "path": "src/main/java/org/duke/json/JsonParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.json;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class JsonParser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate final PushbackReader reader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate JsonParser(Reader reader) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.reader \u003d new PushbackReader(new BufferedReader(reader));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate char next() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tint c \u003d this.reader.read();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tif(c \u003d\u003d -1) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tthrow new JsonException(\"Unexpected end of input\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\treturn (char) c;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t} catch(IOException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthrow new JsonException(\"Unexpected IO error\", e);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate void unread(char c) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthis.reader.unread(c);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t} catch(IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthrow new JsonException(\"Unable to pushback character, this should not happen!\", e);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate void eatWhitespace() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\twhile(true) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tchar c \u003d this.next();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tif(!Character.isWhitespace(c)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tthis.unread(c);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate static enum CommaState {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tEmpty,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tReadElement,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tReadComma"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate \u003cT\u003e T readObjectFields(ObjectHandler\u003cT\u003e handler) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tCommaState commaState \u003d CommaState.Empty;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tboolean reachedEnd \u003d false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\twhile(!reachedEnd) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthis.eatWhitespace();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tchar first \u003d this.next();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tswitch(first) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tcase \u0027\"\u0027:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tif(commaState \u003d\u003d CommaState.ReadElement) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\t\tthrow new JsonException(\"Missing comma between fields\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tString fieldName \u003d this.readString();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tthis.eatWhitespace();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tthis.expect(\":\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tthis.eatWhitespace();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\thandler.handleField(fieldName, this::readValue);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tthis.eatWhitespace();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tcommaState \u003d CommaState.ReadElement;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tcase \u0027,\u0027:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tif(commaState !\u003d CommaState.ReadElement) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\t\tthrow new JsonException(\"Extra commas in object\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tcommaState \u003d CommaState.ReadComma;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tcase \u0027}\u0027:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tif(commaState \u003d\u003d CommaState.ReadComma) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\t\tthrow new JsonException(\"Extra commas in object\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\treachedEnd \u003d true;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tdefault:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tthrow new JsonException(\"Unknown character when reading object\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn handler.handleEnd();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate \u003cT\u003e T readArrayElems(ArrayHandler\u003cT\u003e handler) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tCommaState commaState \u003d CommaState.Empty;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tboolean reachedEnd \u003d false;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\twhile(!reachedEnd) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthis.eatWhitespace();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tchar first \u003d this.next();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tswitch(first) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tcase \u0027,\u0027:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tif(commaState !\u003d CommaState.ReadElement) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tthrow new JsonException(\"Extra commas in array\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tcommaState \u003d CommaState.ReadComma;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tcase \u0027]\u0027:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tif(commaState \u003d\u003d CommaState.ReadComma) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tthrow new JsonException(\"Extra commas in array\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\treachedEnd \u003d true;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tdefault:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tthis.unread(first);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\thandler.handleElement(this::readValue);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tcommaState \u003d CommaState.ReadElement;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn handler.handleEnd();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate void readEscape(StringBuilder sb) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tchar c \u003d this.next();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tswitch(c) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tcase \u0027\\\\\u0027:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tcase \u0027\\\"\u0027:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tcase \u0027/\u0027:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tsb.append(c);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tcase \u0027b\u0027:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tsb.append(\u0027\\b\u0027);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tcase \u0027f\u0027:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tsb.append(\u0027\\f\u0027);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tcase \u0027n\u0027:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tsb.append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tcase \u0027r\u0027:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tsb.append(\u0027\\r\u0027);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tcase \u0027t\u0027:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tsb.append(\u0027\\t\u0027);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tcase \u0027u\u0027:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tchar[] code \u003d new char[4];"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tfor(int i\u003d0;i\u003c4;i++) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tcode[i] \u003d this.next();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tString codeString \u003d new String(code);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\ttry {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tint codePoint \u003d Integer.parseInt(codeString, 16);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tsb.append(Character.toChars(codePoint));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t} catch(NumberFormatException e) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tthrow new JsonException(\"Bad unicode escape %s\", e, codeString);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tdefault:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tthrow new JsonException(\"Unknown escape %c\", c);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate String readString() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tStringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\twhile(true) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tchar c \u003d this.next();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tif(c \u003d\u003d \u0027\"\u0027) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tswitch(c) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tcase \u0027\\\\\u0027:"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tthis.readEscape(sb);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tdefault:"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tsb.append(c);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn sb.toString();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate double readNumber() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t//TODO proper handling"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tStringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\twhile(true) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tchar c \u003d this.next();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tif(Character.isWhitespace(c)) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tif(!(Character.isDigit(c) || c \u003d\u003d \u0027.\u0027 || c \u003d\u003d \u0027-\u0027)) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tthis.unread(c);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tsb.append(c);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn Double.parseDouble(sb.toString());"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate void expect(String target) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.eatWhitespace();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tfor(int i\u003d0;i\u003ctarget.length();i++) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tchar c \u003d this.next();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tif(c !\u003d target.charAt(i)) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tthrow new JsonException(\"Unexpected character %c, expected %c\",c,target.charAt(i));"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate \u003cT\u003e T readValue(ValueHandler\u003cT\u003e handler) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.eatWhitespace();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tchar first \u003d this.next();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tswitch(first) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tcase \u0027{\u0027:"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\treturn this.readObjectFields(handler.handleObject());"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tcase \u0027[\u0027:"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\treturn this.readArrayElems(handler.handleArray());"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tcase \u0027\"\u0027:"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\treturn handler.handleString(this.readString());"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tcase \u0027t\u0027:"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tthis.expect(\"rue\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\treturn handler.handleBoolean(true);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tcase \u0027f\u0027:"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tthis.expect(\"alse\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\treturn handler.handleBoolean(false);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tcase \u0027n\u0027:"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tthis.expect(\"ull\");"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\treturn handler.handleNull();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tdefault:"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t//TODO: Avoid unicode points"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tif(!Character.isDigit(first)) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tthrow new JsonException(\"Unknown character %c reading JSON value!\", first);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tthis.unread(first);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\treturn handler.handleNumber(this.readNumber());"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic static \u003cT\u003e T parse(Reader r, ValueHandler\u003cT\u003e handler) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tJsonParser p \u003d new JsonParser(r);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn p.readValue(handler);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 235
    }
  },
  {
    "path": "src/main/java/org/duke/json/JsonWriter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.json;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.function.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class JsonWriter implements AutoCloseable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic class ValueContext {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tpublic void writeString(String s) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tJsonWriter.this.appendQuoted(s);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tpublic void writeNumber(double d) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tJsonWriter.this.append(Double.toString(d));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tpublic void writeBoolean(boolean b) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tJsonWriter.this.append(Boolean.toString(b));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tpublic void writeNull() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tJsonWriter.this.append(\"null\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tpublic void writeArray(Consumer\u003cArrayContext\u003e coder) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\ttry(ArrayContext a \u003d new ArrayContext()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tcoder.accept(a);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tpublic void writeObject(Consumer\u003cObjectContext\u003e coder) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\ttry(ObjectContext o \u003d new ObjectContext()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tcoder.accept(o);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tpublic \u003cT\u003e void writeValue(T value) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tif(value \u003d\u003d null) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tthis.writeNull();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\treturn;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthis.writeValue(value, value.getClass());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tpublic \u003cT\u003e void writeValue(T value, Class\u003c? extends T\u003e clazz) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tBiConsumer\u003cValueContext, T\u003e coder \u003d Registry.getEncoder(clazz);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tcoder.accept(this, value);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tpublic \u003cT\u003e void writeValues(Iterator\u003cT\u003e it, BiConsumer\u003cValueContext,T\u003e coder) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthis.writeArray(ctx -\u003e {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\twhile(it.hasNext()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tT value \u003d it.next(); "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tctx.writeElem(vctx -\u003e coder.accept(vctx, value));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t});"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tpublic \u003cK,T\u003e void writeDict(Map\u003cK,T\u003e it, BiConsumer\u003cValueContext,T\u003e coder) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthis.writeObject(ctx -\u003e {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tfor(Map.Entry\u003cK,T\u003e entry : it.entrySet()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tT value \u003d entry.getValue();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tctx.writeField(entry.getKey().toString(),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\t\t\tvctx -\u003e coder.accept(vctx, value));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t});"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate int indentationLevel \u003d 0;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate final Writer writer;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate ValueContext valueContext \u003d new ValueContext();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic JsonWriter(Writer writer) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.writer \u003d new BufferedWriter(writer);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic void writeValue(Consumer\u003cValueContext\u003e coder) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tcoder.accept(this.valueContext);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic \u003cT\u003e void writeValue(T value) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.valueContext.writeValue(value);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate static String escapeString(String unescaped) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tStringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tfor(int i\u003d0;i\u003cunescaped.length();i++) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tchar c \u003d unescaped.charAt(i);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tswitch(c) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tcase \u0027\\\\\u0027:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tcase \u0027\\\"\u0027:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tcase \u0027/\u0027:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tsb.append(\"\\\\\").append(c);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tcase \u0027\\b\u0027:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tsb.append(\"\\\\b\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tcase \u0027\\f\u0027:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tsb.append(\"\\\\f\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tcase \u0027\\n\u0027:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tsb.append(\"\\\\n\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tcase \u0027\\r\u0027:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tsb.append(\"\\\\r\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tcase \u0027\\t\u0027:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tsb.append(\"\\\\t\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tdefault:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tsb.append(c);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn sb.toString();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate JsonWriter beginLine() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthis.writer.write(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tfor(int i\u003d0;i\u003cthis.indentationLevel;i++) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tthis.writer.write(\u0027\\t\u0027);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t} catch(IOException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthrow new JsonException(\"IO error\", e);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn this;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate JsonWriter appendQuoted(String unescaped) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tString escaped \u003d JsonWriter.escapeString(unescaped);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthis.writer.write(\u0027\"\u0027);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthis.writer.write(escaped);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthis.writer.write(\u0027\"\u0027);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t} catch(IOException e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthrow new JsonException(\"IO error\", e);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn this;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate JsonWriter append(String literal) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthis.writer.write(literal);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t} catch(IOException e) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthrow new JsonException(\"IO error\", e);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn this;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate JsonWriter append(char literal) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthis.writer.write(literal);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t} catch(IOException e) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthrow new JsonException(\"IO error\", e);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn this;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate abstract class BlockContext implements AutoCloseable {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tprivate boolean hasPrev \u003d false;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tprivate static final String separator \u003d \",\";"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tprotected abstract char blockStart();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tprotected abstract char blockEnd();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tprotected BlockContext() {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tJsonWriter.this.append(this.blockStart());"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tJsonWriter.this.indentationLevel++;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tJsonWriter.this.beginLine();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tprotected void startObject() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tif(this.hasPrev) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tJsonWriter.this.append(separator).beginLine();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t} else {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tthis.hasPrev \u003d true;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t@Override"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tpublic void close() {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tJsonWriter.this.indentationLevel--;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tJsonWriter.this.beginLine().append(this.blockEnd());"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic class ObjectContext extends BlockContext {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tprotected char blockStart() {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\treturn \u0027{\u0027;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tprotected char blockEnd() {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\treturn \u0027}\u0027;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tpublic void writeField(String name, Consumer\u003cValueContext\u003e coder) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthis.startObject();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tJsonWriter.this.appendQuoted(name).append(\": \");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tcoder.accept(JsonWriter.this.valueContext);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tpublic \u003cT\u003e void writeField(String name, T value) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthis.writeField(name, vctx -\u003e vctx.writeValue(value));"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic class ArrayContext extends BlockContext {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tprotected char blockStart() {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\treturn \u0027[\u0027;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tprotected char blockEnd() {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\treturn \u0027]\u0027;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tpublic \u003cT\u003e void writeElem(Consumer\u003cValueContext\u003e coder) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthis.startObject();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tcoder.accept(JsonWriter.this.valueContext);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic void flush() throws IOException {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.writer.flush();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic void close() throws Exception {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.writer.close();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 224
    }
  },
  {
    "path": "src/main/java/org/duke/json/ObjectHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.json;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.function.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public interface ObjectHandler\u003cT\u003e {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic void handleField(String name, Receiver receiver);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic T handleEnd();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tdefault \u003cU\u003e ObjectHandler\u003cU\u003e map(Function\u003cT,U\u003e function) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn new ObjectHandler\u003c\u003e() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tpublic void handleField(String name, Receiver receiver) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tObjectHandler.this.handleField(name, receiver);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tpublic U handleEnd() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\treturn function.apply(ObjectHandler.this.handleEnd());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t};"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic static \u003cT\u003e ValueHandler\u003cMap\u003cString, T\u003e\u003e mapOf(ValueHandler\u003cT\u003e valueHandler) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn new ValueHandler\u003c\u003e() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tpublic ObjectHandler\u003cMap\u003cString, T\u003e\u003e handleObject() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\treturn new DictValue\u003c\u003e(valueHandler);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t};"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic class DictValue\u003cT\u003e implements ObjectHandler\u003cMap\u003cString, T\u003e\u003e {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tprivate final HashMap\u003cString, T\u003e map \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tprivate final ValueHandler\u003cT\u003e valueHandler;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tpublic static DictValue\u003cObject\u003e basicDict() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\treturn new DictValue\u003c\u003e(ValueHandler.ObjectValue.INSTANCE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tpublic DictValue(ValueHandler\u003cT\u003e valueHandler) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthis.valueHandler \u003d valueHandler;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tpublic void handleField(String name, Receiver receiver) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tT elem \u003d receiver.receive(this.valueHandler);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthis.map.put(name, elem);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tpublic Map\u003cString, T\u003e handleEnd() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\treturn map;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 45
    }
  },
  {
    "path": "src/main/java/org/duke/json/Receiver.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.json;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "@FunctionalInterface"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public interface Receiver {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\u003cT\u003e T receive(ValueHandler\u003c? extends T\u003e handler);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 6
    }
  },
  {
    "path": "src/main/java/org/duke/json/Registry.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.json;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.lang.reflect.Type;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.function.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class Registry {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate static HashMap\u003cClass\u003c?\u003e, BiConsumer\u003cJsonWriter.ValueContext, ?\u003e\u003e encoderMap"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate static HashMap\u003cClass\u003c?\u003e, BiConsumer\u003cJsonWriter.ValueContext, ?\u003e\u003e encoderCache"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic static \u003cT\u003e void register("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tClass\u003cT\u003e clazz,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tBiConsumer\u003cJsonWriter.ValueContext, T\u003e encoder) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tencoderMap.put(clazz, encoder);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tencoderCache.clear();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tstatic {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tregister(List.class, (ctx, list) -\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tctx.writeValues("
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\t((List\u003c?\u003e) list).iterator(),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tJsonWriter.ValueContext::writeValue));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tregister(Iterable.class, (ctx, itb) -\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tctx.writeValues("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\t((Iterable\u003c?\u003e) itb).iterator(),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tJsonWriter.ValueContext::writeValue));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tregister(Map.class, (ctx, map) -\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tctx.writeDict("
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\t(Map\u003c?,?\u003e) map,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tJsonWriter.ValueContext::writeValue));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tregister(Number.class, (ctx, val) -\u003e ctx.writeNumber(val.doubleValue()));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tregister(String.class, (ctx, str) -\u003e ctx.writeString(str));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tregister(Boolean.class, (ctx, b) -\u003e ctx.writeBoolean(b));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tregister(Object.class, (ctx, obj) -\u003e ctx.writeString(obj.toString()));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate static \u003cT\u003e BiConsumer\u003cJsonWriter.ValueContext, T\u003e getEncoderInner(Class\u003c? extends T\u003e clazz) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tClass\u003c?\u003e current \u003d clazz;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\twhile(!Object.class.equals(current)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tBiConsumer\u003cJsonWriter.ValueContext, ?\u003e encoder \u003d encoderMap.get(current);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tif(encoder !\u003d null) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\treturn (BiConsumer\u003cJsonWriter.ValueContext, T\u003e) encoder;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tcurrent \u003d current.getSuperclass();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tcurrent \u003d clazz;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\twhile(!Object.class.equals(current)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tfor(Type iface : current.getInterfaces()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tif(iface instanceof Class) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tClass\u003c?\u003e c \u003d (Class\u003c?\u003e) iface;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tBiConsumer\u003cJsonWriter.ValueContext, ?\u003e encoder \u003d encoderMap.get(c);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tif(encoder !\u003d null) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\treturn (BiConsumer\u003cJsonWriter.ValueContext, T\u003e) encoder;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tcurrent \u003d current.getSuperclass();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tBiConsumer\u003cJsonWriter.ValueContext, ?\u003e encoder \u003d encoderMap.get(Object.class);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tif(encoder !\u003d null) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\treturn (BiConsumer\u003cJsonWriter.ValueContext, T\u003e) encoder;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthrow new JsonException(\"No handler for class %s\", clazz);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic static \u003cT\u003e BiConsumer\u003cJsonWriter.ValueContext, T\u003e getEncoder(Class\u003c? extends T\u003e clazz) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tif(encoderCache.containsKey(clazz)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\treturn (BiConsumer\u003cJsonWriter.ValueContext, T\u003e) encoderCache.get(clazz);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tBiConsumer\u003cJsonWriter.ValueContext, T\u003e encoder \u003d getEncoderInner(clazz);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tencoderCache.put(clazz, encoder);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn encoder;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 78
    }
  },
  {
    "path": "src/main/java/org/duke/json/ValueHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.json;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public interface ValueHandler\u003cT\u003e {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tdefault T handleBoolean(boolean val) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthrow new UnsupportedOperationException();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tdefault T handleNumber(double val) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthrow new UnsupportedOperationException();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tdefault T handleNull() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthrow new UnsupportedOperationException();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tdefault T handleString(String val) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthrow new UnsupportedOperationException();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tdefault ObjectHandler\u003c? extends T\u003e handleObject() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthrow new UnsupportedOperationException();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tdefault ArrayHandler\u003c? extends T\u003e handleArray() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthrow new UnsupportedOperationException();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic class BooleanValue implements ValueHandler\u003cBoolean\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tpublic static final BooleanValue INSTANCE \u003d new BooleanValue();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tpublic Boolean handleString(boolean val) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\treturn val;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic class StringValue implements ValueHandler\u003cString\u003e {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tpublic static final StringValue INSTANCE \u003d new StringValue();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tpublic String handleString(String val) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\treturn val;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic class ObjectValue implements ValueHandler\u003cObject\u003e {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tpublic static final ObjectValue INSTANCE \u003d new ObjectValue();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tpublic Object handleBoolean(boolean val) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\treturn val;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tpublic Object handleNumber(double val) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\treturn val;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tpublic Object handleNull() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\treturn null;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tpublic Object handleString(String val) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\treturn val;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tpublic ObjectHandler\u003cMap\u003cString, Object\u003e\u003e handleObject() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\treturn new ObjectHandler.DictValue\u003c\u003e(INSTANCE);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tpublic ArrayHandler\u003cArrayList\u003cObject\u003e\u003e handleArray() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\treturn new ArrayHandler.ListValue\u003c\u003e(INSTANCE);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic static \u003cT\u003e ValueHandler\u003cArrayList\u003cT\u003e\u003e listOf(ValueHandler\u003cT\u003e elemHandler) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn new ValueHandler\u003c\u003e() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tpublic ArrayHandler\u003cArrayList\u003cT\u003e\u003e handleArray() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\treturn new ArrayHandler.ListValue\u003cT\u003e(elemHandler);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t};"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 67
    }
  },
  {
    "path": "src/main/java/org/duke/task/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.json.JsonWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.util.DateParser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate final LocalDateTime deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic DeadlineTask(String task, String deadline) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tsuper(task);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.deadline \u003d DateParser.parse(deadline);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tDeadlineTask(Map\u003cString, Object\u003e dict) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tsuper(dict);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.deadline \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t.parse((String) dict.get(\"deadline\"), LocalDateTime::from);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprotected TaskType getTaskType() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn TaskType.Deadline;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tString baseDescription \u003d super.toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn String.format(\"%s (by: %s)\", baseDescription,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tDateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM).format(deadline));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprotected void toJson(JsonWriter.ObjectContext ctx) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tsuper.toJson(ctx);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tctx.writeField(\"deadline\", DateTimeFormatter.ISO_LOCAL_DATE_TIME.format(this.deadline));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 42
    }
  },
  {
    "path": "src/main/java/org/duke/task/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.json.JsonWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.util.DateParser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate final LocalDateTime timing;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic EventTask(String task, String timing) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tsuper(task);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.timing \u003d DateParser.parse(timing);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tEventTask(Map\u003cString, Object\u003e dict) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tsuper(dict);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.timing \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t.parse((String) dict.get(\"timing\"), LocalDateTime::from);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprotected TaskType getTaskType() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn TaskType.Event;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tString baseDescription \u003d super.toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn String.format(\"%s (at: %s)\", baseDescription,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tDateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM).format(timing));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic void toJson(JsonWriter.ObjectContext ctx) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tsuper.toJson(ctx);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tctx.writeField(\"timing\", DateTimeFormatter.ISO_LOCAL_DATE_TIME.format(this.timing));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 42
    }
  },
  {
    "path": "src/main/java/org/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.json.JsonWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.json.Registry;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.function.Function;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate final String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate boolean completed;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis(description, false);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate Task(String description, boolean completed) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tif(description \u003d\u003d null || description.isEmpty()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tString message \u003d String.format(\"The description of a %s cannot be empty.\", this.getTaskType());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthrow new DukeException(message);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.completed \u003d completed;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tTask(Map\u003cString, Object\u003e dict) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis((String) dict.get(\"description\"),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t(Boolean) dict.getOrDefault(\"completed\", false));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic void markComplete() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.completed \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic boolean isCompleted() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn this.completed;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate static final String completedMarker \u003d \"[✓]\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate static final String incompleteMarker \u003d \"[✗]\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprotected String getTypeMarker() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn getTaskType().getMarker();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprotected TaskType getTaskType() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn TaskType.ToDo;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate String getCompleteMarker() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn this.completed ? completedMarker : incompleteMarker;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn String.format(\"[%s]%s %s\","
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tthis.getTypeMarker(),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tthis.getCompleteMarker(),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tthis.description);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprotected void toJson(JsonWriter.ObjectContext ctx) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tctx.writeField(\"type\", this.getTaskType());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tctx.writeField(\"description\", this.description);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tctx.writeField(\"completed\", this.completed);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic static void serialize(JsonWriter.ValueContext ctx, Task value) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tctx.writeObject(value::toJson);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tstatic {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tRegistry.register(Task.class, Task::serialize);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 79
    }
  },
  {
    "path": "src/main/java/org/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.function.Function;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.json.ObjectHandler;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.json.Receiver;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.json.ValueHandler;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tToDo(\"T\", Task::new),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tDeadline(\"D\", DeadlineTask::new),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tEvent(\"E\", EventTask::new);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate final String marker;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate final Function\u003cMap\u003cString,Object\u003e, ? extends Task\u003e jsonConstructor;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate TaskType(String marker,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tFunction\u003cMap\u003cString,Object\u003e, ? extends Task\u003e jsonConstructor) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.marker \u003d marker;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.jsonConstructor \u003d jsonConstructor;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic static TaskType fromString(String value) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tfor(TaskType t : TaskType.values()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tif(t.name().equalsIgnoreCase(value)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\treturn t;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn TaskType.ToDo;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic String getMarker() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn marker;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic static class Builder implements ValueHandler\u003cTask\u003e {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tpublic ObjectHandler\u003cTask\u003e handleObject() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\treturn ObjectHandler.DictValue.basicDict().map(dict -\u003e {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tString typeString \u003d dict.getOrDefault(\"type\", \"ToDo\").toString();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tTaskType type \u003d TaskType.fromString(typeString);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\treturn type.jsonConstructor.apply(dict);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t});"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 47
    }
  },
  {
    "path": "src/main/java/org/duke/ui/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic final String type;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic final String arguments;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic final Map\u003cString,String\u003e namedArguments;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic Command(String type, String arguments, Map\u003cString, String\u003e namedArguments) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.type \u003d type;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.arguments \u003d arguments;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.namedArguments \u003d namedArguments;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate static final Pattern switchBoundary \u003d Pattern.compile(\"\\\\s+/\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate static final Pattern cmdBoundary \u003d Pattern.compile(\"\\\\s+\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic static Command parse(String input) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tinput \u003d input.trim();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t//Split on the presence of any switches"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tString[] splits \u003d switchBoundary.split(input);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t//First split value is \"cmd-type args...\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tString[] mainArgs \u003d cmdBoundary.split(splits[0], 2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tif(mainArgs[0].isEmpty()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\treturn null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tString type \u003d mainArgs[0];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t//If no arguments, leave as empty string"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tString arguments \u003d mainArgs.length \u003e 1 ? mainArgs[1] : \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tMap\u003cString, String\u003e namedArguments \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tif(splits.length \u003e 1) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t//Each split value is \"switch-name args...\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t//with no preceding slash"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tfor(int i\u003d1;i\u003csplits.length;i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tif(splits[i].isEmpty()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tcontinue;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t//Split at first whitespace"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tString[] switchArgs \u003d cmdBoundary.split(splits[i], 2);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tString switchName \u003d switchArgs[0];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t//If no arguments, leave as empty string"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tString switchArguments \u003d switchArgs.length \u003e 1 ? switchArgs[1] : \"\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tnamedArguments.put(switchName, switchArguments);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn new Command(type, arguments, namedArguments);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 54
    }
  },
  {
    "path": "src/main/java/org/duke/ui/DukeIO.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.function.Supplier;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class DukeIO {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate static final String lineRule \u003d"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\"____________________________________________________________\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate final Map\u003cString, Predicate\u003cCommand\u003e\u003e commandMap"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate Predicate\u003cCommand\u003e defaultHandler \u003d null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate boolean printingDialogBlock;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate final Scanner scanner;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic DukeIO() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic void say(String... lines) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tsay(Arrays.asList(lines).iterator());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic void say(Iterator\u003cString\u003e lines) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tif(!this.printingDialogBlock) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t//Print start of reply line"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tSystem.out.println(lineRule);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthis.printingDialogBlock \u003d true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t//Print each given line"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\twhile(lines.hasNext()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tSystem.out.println(lines.next());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic void sayError(DukeException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.say(String.format(\"☹ OOPS!!! %s\", e.getMessage())); "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic void bindCommand(String command, Predicate\u003cCommand\u003e handler) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.commandMap.put(command, handler);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic void setUnknownCommandHandler(Predicate\u003cCommand\u003e handler) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.defaultHandler \u003d handler;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic void withDialogBlock(Runnable action) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.withDialogBlock(() -\u003e { action.run(); return null; }, null);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic \u003cT\u003e T withDialogBlock(Supplier\u003cT\u003e action, T fallback) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.printingDialogBlock \u003d false;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\treturn action.get();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t} catch(DukeException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tthis.sayError(e);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\treturn fallback;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t} finally {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tif(this.printingDialogBlock) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t//Print end of reply line, and extra empty line"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tSystem.out.println(lineRule);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic void listen() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t//While there is still input from user"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\twhile(scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t//Read single line of user input, and remove extra spaces"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tString userInput \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tCommand command \u003d Command.parse(userInput);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tPredicate\u003cCommand\u003e cmdHandler \u003d commandMap.get(command.type);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tboolean shouldExit \u003d this.withDialogBlock( () -\u003e {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tif(cmdHandler !\u003d null) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\treturn cmdHandler.test(command);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t} else if(defaultHandler !\u003d null) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\treturn defaultHandler.test(command);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t} else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tthis.say(String.format(\"Unknown command %s\", command.type));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\treturn false;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t}, false);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tif(shouldExit) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 102
    }
  },
  {
    "path": "src/main/java/org/duke/util/CounterDecorator.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.function.Function;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class CounterDecorator implements Function\u003cString, String\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate int counter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic CounterDecorator(int start) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.counter \u003d start;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic String apply(String str) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tString ret \u003d String.format(\"%d: %s\", this.counter, str);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.counter++;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn ret;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 15
    }
  },
  {
    "path": "src/main/java/org/duke/util/DateParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.time.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.time.temporal.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.time.format.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.text.ParsePosition;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class DateParser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate String text;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate ParsePosition pos;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate void eatWhitespace() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tint i;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tfor(i \u003d pos.getIndex(); i \u003c text.length(); i++) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tif(!Character.isWhitespace(text.charAt(i))) break;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tpos.setIndex(i);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate \u003cR\u003e R tryParse(DateTimeFormatter formatter,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tTemporalQuery\u003cR\u003e query) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\teatWhitespace();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tint ix \u003d pos.getIndex(), errIx \u003d pos.getErrorIndex();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tTemporalAccessor parsed \u003d formatter.parse(text, pos);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tR value \u003d query.queryFrom(parsed);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tif(value \u003d\u003d null) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tpos.setIndex(ix);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tpos.setErrorIndex(errIx);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\treturn value;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t} catch(DateTimeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tpos.setIndex(ix);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tpos.setErrorIndex(errIx);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\treturn null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t@SafeVarargs"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate \u003cR\u003e R tryParses(DateTimeFormatter formatter,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tTemporalQuery\u003cR\u003e... queries) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn tryParse(formatter, parsed -\u003e {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tfor(TemporalQuery\u003cR\u003e q : queries) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\ttry {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tR value \u003d q.queryFrom(parsed);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tif(value !\u003d null) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\t\treturn value;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t} catch(DateTimeException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tcontinue;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\treturn null;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t});"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate static final DateTimeFormatter weekdayFormatter \u003d"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tnew DateTimeFormatterBuilder()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t.parseCaseInsensitive().parseLenient()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t.optionalStart()"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t.appendText(ChronoField.DAY_OF_WEEK, TextStyle.SHORT)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t.optionalEnd()"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t.optionalStart()"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t.appendText(ChronoField.DAY_OF_WEEK, TextStyle.FULL)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t.optionalEnd()"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t.toFormatter();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate static final DateTimeFormatter dmFormatter \u003d "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tnew DateTimeFormatterBuilder()"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t.parseLenient()"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t.appendValue(ChronoField.DAY_OF_MONTH)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t.appendLiteral(\u0027 \u0027)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t.appendText(ChronoField.MONTH_OF_YEAR, TextStyle.SHORT).toFormatter();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate static final DateTimeFormatter mdFormatter \u003d "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tnew DateTimeFormatterBuilder()"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t.parseLenient()"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t.appendText(ChronoField.MONTH_OF_YEAR, TextStyle.SHORT)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t.appendLiteral(\u0027 \u0027)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t.appendValue(ChronoField.DAY_OF_MONTH).toFormatter();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate static DateTimeFormatter addYear(DateTimeFormatter fmt) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn new DateTimeFormatterBuilder()"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t.append(fmt)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t.parseLenient()"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t.appendLiteral(\u0027 \u0027)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t.appendValueReduced(ChronoField.YEAR, 2, 4, 2000)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t.toFormatter();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate static final DateTimeFormatter[] dateFormatters \u003d new DateTimeFormatter[] {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tdmFormatter, addYear(dmFormatter),"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tmdFormatter, addYear(mdFormatter),"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tDateTimeFormatter.ISO_LOCAL_DATE"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t};"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate static final DateTimeFormatter[] timeFormatters \u003d new DateTimeFormatter[] {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tDateTimeFormatter.ofLocalizedTime(FormatStyle.MEDIUM),"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tDateTimeFormatter.ofPattern(\"kkmm\u0027h\u0027\"),"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tnew DateTimeFormatterBuilder()"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t.appendPattern(\"h[[\u0027:\u0027][\u0027.\u0027]mm][\u0027 \u0027]\")"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t.parseCaseInsensitive()"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t.optionalStart().appendText(ChronoField.AMPM_OF_DAY).optionalEnd()"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t.toFormatter(),"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tDateTimeFormatter.ISO_LOCAL_TIME"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t};"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate Stream\u003cLocalDate\u003e parseWeekday(DayOfWeek weekday) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tTemporalAdjuster nextOrSameWeekday \u003d TemporalAdjusters.nextOrSame(weekday);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tTemporalAdjuster nextWeekday \u003d TemporalAdjusters.next(weekday);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tLocalDate first \u003d LocalDate.now().with(nextOrSameWeekday);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn Stream.iterate(first, prev -\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\tLocalDate.from(nextWeekday.adjustInto(prev))"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate Stream\u003cLocalDate\u003e parseMonthDay(MonthDay md) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tLocalDate now \u003d LocalDate.now();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tint startYear \u003d now.getYear();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tIntStream yearStream \u003d IntStream.range(startYear, 9999);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tif(md.equals(MonthDay.of(2, 29))) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tyearStream \u003d yearStream.filter(y -\u003e Year.of(y).isLeap());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn yearStream.mapToObj(y -\u003e md.atYear(y))"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t.filter(date -\u003e date.isAfter(now));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate LocalDateTime tryDates(Stream\u003cLocalDate\u003e possibleDates, LocalTime exactTime) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tif(possibleDates \u003d\u003d null || exactTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\treturn null;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tLocalDateTime now \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn possibleDates.map(d -\u003e d.atTime(exactTime))"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t.filter(d -\u003e d.isAfter(now))"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t.findFirst().orElse(null);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic LocalDateTime parseDateTime() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tfor(DateTimeFormatter dt : dateFormatters) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tLocalDateTime date \u003d tryParses(dt,"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tacc -\u003e {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\t\tLocalDate exactDate \u003d LocalDate.from(acc);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\t\tif(exactDate \u003d\u003d null) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\t\t\treturn null;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\t\t}"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\t\tLocalTime exactTime \u003d parseTime();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\t\tif(exactTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\t\t\treturn null;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\t\t}"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\t\treturn exactDate.atTime(exactTime);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\t},"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tacc -\u003e {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\t\tStream\u003cLocalDate\u003e possibleDates \u003d parseMonthDay(MonthDay.from(acc));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\t\tLocalTime exactTime \u003d parseTime();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\t\treturn tryDates(possibleDates, exactTime);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\t});"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tif(date !\u003d null) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\treturn date;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tfor(DateTimeFormatter dt : dateFormatters) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tLocalDateTime date \u003d tryParses(dt,"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tacc -\u003e {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\t\tLocalDate exactDate \u003d LocalDate.from(acc);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\t\tif(exactDate \u003d\u003d null) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\t\t\treturn null;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\t\t}"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\t\treturn exactDate.atTime(LocalTime.MIDNIGHT);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\t},"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\tacc -\u003e {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\t\tStream\u003cLocalDate\u003e possibleDates \u003d parseMonthDay(MonthDay.from(acc));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\t\treturn tryDates(possibleDates, LocalTime.MIDNIGHT);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\t\t});"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tif(date !\u003d null) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\treturn date;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tStream\u003cLocalDate\u003e possibleDates \u003d tryParse(weekdayFormatter,"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tacc -\u003e parseWeekday(DayOfWeek.from(acc))"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tLocalTime exactTime \u003d parseTime();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tif(exactTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\texactTime \u003d LocalTime.MIDNIGHT;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn tryDates(possibleDates, exactTime);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate LocalTime parseTime() {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tfor(DateTimeFormatter dt : timeFormatters) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tLocalTime time \u003d tryParse(dt, LocalTime::from);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\tif(time !\u003d null) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t\treturn time;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn null;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tprivate DateParser(String input) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.text \u003d input;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\tthis.pos \u003d new ParsePosition(0);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\tpublic static LocalDateTime parse(String input) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t\treturn new DateParser(input).parseDateTime();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 207
    }
  }
]
