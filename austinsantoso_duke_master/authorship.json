[
  {
    "path": "src/main/java/DeadlinesTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "public class DeadlinesTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    String taskName;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    String taskTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    public DeadlinesTask(String task) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        String[] taskSplit \u003d task.split(\"/\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        if(taskSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "            throw new EmptyDescriptionDukeException(\"deadline\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        taskName \u003d taskSplit[0].trim();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        String taskTimeOriginal \u003d taskSplit[1];"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        int firstWordLength \u003d taskTimeOriginal.split(\" \")[0].length();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        taskTime \u003d taskTimeOriginal.split(\" \")[0] + \": \" + taskTimeOriginal.substring(firstWordLength).trim();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        String output \u003d \"[D]\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        if (super.completed) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "            output +\u003d \"[✓]\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "            output +\u003d \"[✗]\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        output +\u003d \" \" + this.taskName + \" (\" + this.taskTime + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Austin Santoso": 28
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    private enum Commands {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        bye,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        list,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        done,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        delete,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        todo,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        event,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        deadline,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        prints out a series of dashes that result in a straight line"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    private static void straightLine() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        System.out.println(\"\\n--------------------------------------\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        adds a new task newTask to the arraylist tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        and also prints out statememnts stating that it has been completed"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    private static void addTask(Task newTask) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        System.out.println(\"    Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        System.out.println(\"      \" + newTask.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        System.out.println(\"    Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        straightLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        System.out.println(\"How may I help you?\\n\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        straightLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        boolean shouldStop \u003d false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        while (!shouldStop) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                String input \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                straightLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                String command \u003d input.split(\" \")[0]; //the first word of the user input"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                Commands commandEnum;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                    commandEnum \u003d Commands.valueOf(command.toLowerCase());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                } catch(IllegalArgumentException err) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                    throw new InvalidCommandDukeException(command);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                String description \u003d input.substring(command.length()).trim();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                switch (commandEnum) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                    case bye:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                        System.out.println(\"    Bye! See you again soon!!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                        straightLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                        shouldStop \u003d true;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                    case list:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                        System.out.println(\"    Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                            System.out.println(\"      \" + (i + 1) + \".\" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                        straightLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                    case done:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                            int taskNumber;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                                taskNumber \u003d Integer.parseInt(description) - 1;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                                tasks.get(taskNumber).complete();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                                System.out.println(\"    Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                                System.out.println(\"      \" + tasks.get(taskNumber).toString());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                                straightLine();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                            } catch (IndexOutOfBoundsException | NumberFormatException err) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                                throw new InvalidDescriptionDukeException(command, description);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                    case delete:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                            int taskNumber;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                                taskNumber \u003d Integer.parseInt(description) - 1;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                                System.out.println(\"    Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                                System.out.println(\"      \" + tasks.get(taskNumber).toString());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                                tasks.remove(taskNumber);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                                System.out.println(\"    Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                                straightLine();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                            } catch (IndexOutOfBoundsException | NumberFormatException err) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                                throw new InvalidDescriptionDukeException(command, description);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                    case todo:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                        addTask(new ToDoTask(description));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                    case event:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                        addTask(new EventsTask(description));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                    case deadline:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                        addTask(new DeadlinesTask(description));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                        throw new InvalidCommandDukeException(command);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "            } catch(DukeException err) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                System.out.println(\"    \" + err.toString());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                straightLine();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Austin Santoso": 109,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "public class DukeException extends RuntimeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Austin Santoso": 5
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "public class EmptyDescriptionDukeException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    String id;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    public EmptyDescriptionDukeException(String id) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        super(id);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        return \"OOPS!!! The description of a \" + id + \" task cannot be empty.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Austin Santoso": 12
    }
  },
  {
    "path": "src/main/java/EventsTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "public class EventsTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    String taskName;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    String taskTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    public EventsTask(String task) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        String[] taskSplit \u003d task.split(\"/\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        if(taskSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "            throw new EmptyDescriptionDukeException(\"event\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        taskName \u003d taskSplit[0].trim();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        String taskTimeOriginal \u003d taskSplit[1];"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        int firstWordLength \u003d taskTimeOriginal.split(\" \")[0].length();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        taskTime \u003d taskTimeOriginal.split(\" \")[0] + \": \" + taskTimeOriginal.substring(firstWordLength).trim();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        String output \u003d \"[E]\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        if (super.completed) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "            output +\u003d \"[✓]\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "            output +\u003d \"[✗]\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        output +\u003d \" \" + this.taskName + \" (\" + this.taskTime + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Austin Santoso": 28
    }
  },
  {
    "path": "src/main/java/InvalidCommandDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "public class InvalidCommandDukeException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    String command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    public InvalidCommandDukeException(String command) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what \u0027\" + this.command +\"\u0027 means.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Austin Santoso": 11
    }
  },
  {
    "path": "src/main/java/InvalidDescriptionDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "public class InvalidDescriptionDukeException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    String command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    String descrption;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    public InvalidDescriptionDukeException(String command, String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        super(\"command:\" + command + \" description: \" + description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        this.descrption \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        return \"OOPS!!! invalid description \u0027\" + this.descrption + \"\u0027 for command \u0027\" + this.command + \"\u0027\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Austin Santoso": 15
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    boolean completed \u003d false;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    String task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    public Task(String task) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    public void complete() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        this.completed \u003d true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        if (completed) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "            return \"[✓] \" + this.task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "            return \"[✗] \" + this.task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Austin Santoso": 21
    }
  },
  {
    "path": "src/main/java/ToDoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "public class ToDoTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    public ToDoTask(String task) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        if (task.trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "                throw new EmptyDescriptionDukeException(\"todo\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        String output \u003d \"[T]\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        if (super.completed) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "            output +\u003d \"[✓]\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "            output +\u003d \"[✗]\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        output +\u003d \" \" + super.task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Austin Santoso": 20
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "How may I help you?"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    OOPS!!! I\u0027m sorry, but I don\u0027t know what \u0027hi\u0027 means."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    OOPS!!! The description of a todo task cannot be empty."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "      [T][✗] sleep"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "      [D][✗] homework (by: midnight)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "      1.[T][✗] sleep"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "      2.[D][✗] homework (by: midnight)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "      [T][✓] sleep"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    Bye! See you again soon!!"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "--------------------------------------"
      }
    ],
    "authorContributionMap": {
      "Austin Santoso": 53
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "hi"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "todo sleep"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "deadline homework /by midnight"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Austin Santoso": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Austin Santoso"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Austin Santoso": 21
    }
  }
]
