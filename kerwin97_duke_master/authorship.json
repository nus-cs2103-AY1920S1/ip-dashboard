[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "test {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerwin97": 28,
      "-": 19
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * Constructor for Deadline task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * @param description description of the deadline."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * @param by date and time of the deadline in String format"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public Deadline (String description, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerwin97": 21
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import javafx.scene.layout.Priority;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public static DialogBox getUserDialog(String l, Image iv) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        DialogBox temp \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        temp.setStyle(\"-fx-background-color: #0099cc\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public static DialogBox getDukeDialog(String l, Image iv) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        db.setStyle(\"-fx-background-color: #009999\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerwin97": 61
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\tprivate static UI ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\tprivate GuiUI gui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\tprivate Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\tprivate Tasklist tasklist;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\tprivate GuiParser parse;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\t * Constructor for Duke"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\t * Creates new Storage instance and Parser"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\t\tthis.gui \u003d new GuiUI();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\t\tthis.storage \u003d new Storage(\"src/main/java/data/duke.txt\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\t\tthis.parse \u003d new GuiParser(storage.getTasks(), gui, storage);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\t * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\t * Replace this stub with your completed method."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\tpublic String getResponse(String input) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\t\tString out \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\t\t\tout \u003d parse.guiParserRead(input);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\t\t\te.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\t\treturn out;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\tpublic String startList() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\t\treturn storage.getTasks().printlist();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerwin97": 38,
      "-": 2
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    String message;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        return this.message;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerwin97": 13
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * Constructor for Event task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * @param description description of the event."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * @param at date and time of the Event in String format"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public Event (String description, String at) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerwin97": 21
    }
  },
  {
    "path": "src/main/java/GuiParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "public class GuiParser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    static Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    private static UI ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    private GuiUI gui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    private static int count;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    private Tasklist tasklist;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * Parser constructor"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * @param tasklist tasklist containing the list of tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * @param gui the ui to be used"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * @param storage where the tasks will be stored"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public GuiParser(Tasklist tasklist, GuiUI gui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        this.tasklist \u003d tasklist;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        this.gui \u003d gui;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        if (tasklist.returnTasks().isEmpty()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            count \u003d 0;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            count \u003d tasklist.size();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * Reads the user input and converts it to instructions."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * @throws IOException  if the user input is wrong"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public String guiParserRead(String command) throws IOException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                return gui.bye();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                return gui.listOut() + \"\\n\" + tasklist.printlist();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                String[] ls \u003d command.split(\" \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                if (ls[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    String num \u003d command.substring(5, 6);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    return doneCommand(num);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                } else if (ls[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    String[] td \u003d command.split(\" \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        return todoCommand(td);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    } catch (DukeException e){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        System.out.println(e);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                } else if (ls[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    String[] eve \u003d command.split(\" \");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    return eventCommand(eve);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                } else if (ls[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    String[] eve \u003d command.split(\" \");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    return deadlineCommand(eve);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                } else if (ls[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    String dnumber \u003d ls[1];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    return deleteCommand(dnumber);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                } else if (ls[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    ArrayList\u003cTask\u003e temp \u003d tasklist.find(ls[1]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    String out \u003d gui.find();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    out \u003d out + \"\\n\" + tasklist.printlistfind(temp);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    return out;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                } else if (ls[0].equals(\"help\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    return helpCommand();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        System.out.println(e);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * Returns String of the Date and Time in the user friendly format"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * @param deadline deadline of event or deadline"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * @return String in user friendly format"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public String getDateTime(String deadline) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String[] datetime \u003d deadline.split(\" \");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String[] date \u003d datetime[0].split(\"/\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String time \u003d datetime[1];"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        int day \u003d Integer.parseInt(date[0]);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        int month \u003d Integer.parseInt(date[1]);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        int year \u003d Integer.parseInt(date[2]);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        DateTimeFormatter dateformatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        LocalDate datef \u003d LocalDate.parse(datetime[0], dateformatter);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String dates \u003d datef.format(DateTimeFormatter.ofPattern(\"LLLL uuuu\"));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String days \u003d datef.format(DateTimeFormatter.ofPattern(\"d\"));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        DateTimeFormatter timeformatter \u003d DateTimeFormatter.ofPattern(\"Hmm\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        LocalTime timef \u003d LocalTime.parse(time, timeformatter);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String times \u003d timef.format(DateTimeFormatter.ofPattern(\"h.mma\"));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        if (day \u003d\u003d 1) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            days \u003d days + \"st\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        } else if (day \u003d\u003d 2) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            days \u003d days + \"nd\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        } else if (day \u003d\u003d 3) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            days \u003d days + \"rd\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            days \u003d days + \"th\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String output \u003d days + \" of \" + dates + \", \" + times;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public String doneCommand(String num) throws IOException {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        int res \u003d Integer.parseInt(num);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        Task t \u003d tasklist.get(res - 1);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        t.markAsDone();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        storage.saveFile(tasklist.returnTasks());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        return gui.done() + \"\\n\" + t;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public String todoCommand(String[] td) throws IOException, DukeException {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        if (td.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String com \u003d td[1];"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        if (td.length \u003e 1) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            for (int i \u003d 2; i \u003c td.length; i ++) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                com \u003d com + \" \" + td[i];"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        tasklist.addTodo(new Todo(com));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String out \u003d gui.taskadded();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        out \u003d out + \"\\n\" + tasklist.returnTasks().get(count);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        count++;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        out \u003d out + \"\\n\" + gui.listcount(count);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        storage.saveFile(tasklist.returnTasks());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        return out;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public String eventCommand(String[] eve) throws IOException {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String com \u003d \"\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String eventdate \u003d \"\";"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        for (int i \u003d 1; i \u003c eve.length; i ++) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            if (eve[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                eventdate \u003d eve[i+1];"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                for (int j \u003d i+2; j \u003c eve.length; j ++) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    eventdate \u003d eventdate + \" \" + eve[j];"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                if (com \u003d\u003d \"\") {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    com \u003d eve[i];"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    com \u003d com + \" \" + eve[i];"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        tasklist.addEvent(new Event(com, getDateTime(eventdate)));"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String out \u003d gui.taskadded();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        out \u003d out + \"\\n\" + tasklist.returnTasks().get(count);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        count++;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        out \u003d out + \"\\n\" + gui.listcount(count);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        storage.saveFile(tasklist.returnTasks());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        return out;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public String deadlineCommand(String[] eve) throws IOException {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String com \u003d \"\";"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String deadline \u003d \"\";"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        for (int i \u003d 1; i \u003c eve.length; i ++) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            if (eve[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                deadline \u003d eve[i+1];"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                for (int j \u003d i+2; j \u003c eve.length; j ++) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    deadline \u003d deadline + \" \" + eve[j];"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                if (com \u003d\u003d \"\") {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    com \u003d eve[i];"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    com \u003d com + \" \" + eve[i];"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        tasklist.addDeadline(new Deadline(com, getDateTime(deadline)));"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String out \u003d gui.taskadded();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        out \u003d out + \"\\n\" + tasklist.returnTasks().get(count);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        count++;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        out \u003d out + \"\\n\" + gui.listcount(count);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        storage.saveFile(tasklist.returnTasks());"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        return out;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public String deleteCommand(String dnumber) throws IOException {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        int dnum \u003d Integer.parseInt(dnumber);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String out \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        assert tasklist !\u003d null : \"tasklist cannot be empty\";"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        out \u003d out + \"\\n\" + tasklist.returnTasks().get(dnum-1);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        tasklist.delete(dnum-1);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        count--;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        out \u003d out + \"\\n\" + gui.listcount(count);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        storage.saveFile(tasklist.returnTasks());"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        return out;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public String helpCommand() {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String intro \u003d \"Here are some commands you can use:\\n\";"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String list \u003d \"list\\n\";"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String del \u003d \"delete [item number]\\n\";"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String todo \u003d \"todo [todo description]\\n\";"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String event \u003d \"event [event description] [time and date, dd/mm/yy]\\n\";"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String deadline \u003d \"deadline [deadline description] [time and date, dd/mm/yy]\\n\";"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String find \u003d \"find [description word]\\n\";"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String out \u003d intro + list + todo + event + deadline + find + del;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        return out;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerwin97": 233
    }
  },
  {
    "path": "src/main/java/GuiUI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "public class GuiUI {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public GuiUI() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public String start() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        /*String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String a \u003d (\"\\nHello! I\u0027m Jeanne\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String b \u003d (\"\\nWhat can I do for you?\\n\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String c \u003d \"\\nYou may type \u0027help\u0027 for a list of commands!\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        return a + b + c;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public String bye() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        return \"\\nBye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public String listOut() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        return (\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public String listcount(int count) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        return (\"Now you have \" + count + \" tasks in the list.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public String done() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        return (\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public String taskadded() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        return (\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public String find() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        return (\"\\nHere are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerwin97": 42
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerwin97": 7
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kerwin97"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kerwin97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().printGreeting();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerwin97": 30
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kerwin97"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kerwin97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    private GuiUI Gui \u003d new GuiUI();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpg\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public void printGreeting() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String output \u003d Gui.start();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String list \u003d Gui.listOut() + \"\\n\" + duke.startList();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                DialogBox.getDukeDialog(output, dukeImage),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                DialogBox.getDukeDialog(list, dukeImage)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerwin97": 61
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    static Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    private static UI ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    private static int count;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    private Tasklist tasklist;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * Parser constructor"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * @param tasklist tasklist containing the list of tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * @param ui the ui to be used"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * @param storage where the tasks will be stored"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public Parser(Tasklist tasklist, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        this.tasklist \u003d tasklist;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        if (tasklist.returnTasks().isEmpty()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            count \u003d 0;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            count \u003d tasklist.size();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * Reads the user input and converts it to instructions."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * @throws IOException  if the user input is wrong"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public void parserRead() throws IOException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                UI.bye();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                UI.printLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                UI.listOut();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                tasklist.listout();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                UI.printLineS();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                String[] ls \u003d command.split(\" \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                if (ls[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    String num \u003d command.substring(5, 6);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    int res \u003d Integer.parseInt(num);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    Task t \u003d tasklist.get(res - 1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    t.markAsDone();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    UI.printLine();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    UI.done();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    System.out.println(t);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    UI.printLineS();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    storage.saveFile(tasklist.returnTasks());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                } else if (ls[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    String[] td \u003d command.split(\" \");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        if (td.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        String com \u003d td[1];"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        if (td.length \u003e 1) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                            for (int i \u003d 2; i \u003c td.length; i ++) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                                com \u003d com + \" \" + td[i];"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        tasklist.addTodo(new Todo(com));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        UI.printLine();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        UI.taskadded();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        System.out.println(tasklist.returnTasks().get(count));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        count++;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        UI.listcount(count);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        UI.printLineS();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        storage.saveFile(tasklist.returnTasks());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    } catch (DukeException e){"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        System.out.println(e);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                } else if (ls[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    String[] eve \u003d command.split(\" \");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    String com \u003d \"\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    String eventdate \u003d \"\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    for (int i \u003d 1; i \u003c eve.length; i ++) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        if (eve[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                            eventdate \u003d eve[i+1];"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                            for (int j \u003d i+2; j \u003c eve.length; j ++) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                                eventdate \u003d eventdate + \" \" + eve[j];"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                            if (com \u003d\u003d \"\") {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                                com \u003d eve[i];"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                                com \u003d com + \" \" + eve[i];"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    tasklist.addEvent(new Event(com, getDateTime(eventdate)));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    UI.printLine();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    UI.taskadded();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    System.out.println(tasklist.returnTasks().get(count));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    count++;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    UI.listcount(count);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    UI.printLineS();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    storage.saveFile(tasklist.returnTasks());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                } else if (ls[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    String[] eve \u003d command.split(\" \");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    String com \u003d \"\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    String deadline \u003d \"\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    for (int i \u003d 1; i \u003c eve.length; i ++) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        if (eve[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                            deadline \u003d eve[i+1];"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                            for (int j \u003d i+2; j \u003c eve.length; j ++) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                                deadline \u003d deadline + \" \" + eve[j];"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                            if (com \u003d\u003d \"\") {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                                com \u003d eve[i];"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                                com \u003d com + \" \" + eve[i];"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    tasklist.addDeadline(new Deadline(com, getDateTime(deadline)));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    UI.printLine();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    UI.taskadded();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    System.out.println(tasklist.returnTasks().get(count));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    count++;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    UI.listcount(count);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    UI.printLineS();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    storage.saveFile(tasklist.returnTasks());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                } else if (ls[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    String dnumber \u003d ls[1];"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    int dnum \u003d Integer.parseInt(dnumber);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    UI.printLine();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    System.out.println(tasklist.returnTasks().get(dnum-1));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    tasklist.delete(dnum-1);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    count--;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    UI.listcount(count);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    UI.printLineS();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    storage.saveFile(tasklist.returnTasks());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                } else if (ls[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    ArrayList\u003cTask\u003e temp \u003d tasklist.find(ls[1]);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    UI.find();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    tasklist.listfind(temp);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    UI.printLineS();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        System.out.println(e);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * Returns String of the Date and Time in the user friendly format"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * @param deadline deadline of event or deadline"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * @return String in user friendly format"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public static String getDateTime(String deadline) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String[] datetime \u003d deadline.split(\" \");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String[] date \u003d datetime[0].split(\"/\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String time \u003d datetime[1];"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        int day \u003d Integer.parseInt(date[0]);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        int month \u003d Integer.parseInt(date[1]);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        int year \u003d Integer.parseInt(date[2]);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        DateTimeFormatter dateformatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        LocalDate datef \u003d LocalDate.parse(datetime[0], dateformatter);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String dates \u003d datef.format(DateTimeFormatter.ofPattern(\"LLLL uuuu\"));"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String days \u003d datef.format(DateTimeFormatter.ofPattern(\"d\"));"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        DateTimeFormatter timeformatter \u003d DateTimeFormatter.ofPattern(\"Hmm\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        LocalTime timef \u003d LocalTime.parse(time, timeformatter);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String times \u003d timef.format(DateTimeFormatter.ofPattern(\"h.mma\"));"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        if (day \u003d\u003d 1) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            days \u003d days + \"st\";"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        } else if (day \u003d\u003d 2) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            days \u003d days + \"nd\";"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        } else if (day \u003d\u003d 3) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            days \u003d days + \"rd\";"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            days \u003d days + \"th\";"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String output \u003d days + \" of \" + dates + \", \" + times;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerwin97": 208
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    //public static ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    private String fileloc;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    private File tempFile;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    private Tasklist tasklist;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * Constructor for Storage instance"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * @param fileloc takes in the fileloc to know where to store"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * @throws IOException  If file is wrong"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public Storage(String fileloc) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        //ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        Tasklist tasklist \u003d new Tasklist();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        this.tasklist \u003d tasklist;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        //this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        this.fileloc \u003d fileloc;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        this.tempFile \u003d new File(fileloc);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            if (hasFile()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                readFile();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                createFile();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * Method to retrieve Tasklist to get tasks"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * @return tasklist of tasks"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public Tasklist getTasks() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        assert tasklist !\u003d null : \"tasklist cannot be null\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        return tasklist;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * Saves the current tasks at hand into the txt file"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * @param tasks  ArrayList of the tasks"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * @throws IOException  If file is wrong"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public void saveFile(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        FileWriter fw \u003d new FileWriter(fileloc);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String texttoadd \u003d \"\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        System.out.println(\"These will be saved\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i ++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            int num \u003d i + 1;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            String textpart \u003d num + \". \" + tasks.get(i);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                texttoadd \u003d textpart;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                texttoadd \u003d texttoadd + \"\\n\" + textpart;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            fw.write(texttoadd);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public boolean hasFile() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        return tempFile.exists();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * Creates a file for the data to be saved"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * @throws IOException  If file is wrong"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public void createFile() throws IOException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        boolean exists \u003d tempFile.exists();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        boolean fileCreated \u003d tempFile.createNewFile();    //no file yet so create"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * Reads a file and prints the data."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * Also calls a createTasks function to save those on the list to Tasklist."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * @throws FileNotFoundException  If file is wrong"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public void readFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        ArrayList\u003cString\u003e filetasks \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        Scanner s \u003d new Scanner(tempFile);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            String t \u003d s.nextLine();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            //System.out.println(t);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            filetasks.add(t);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        createTasks(filetasks);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public void createTasks(ArrayList\u003cString\u003e filetasks) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        while (!filetasks.isEmpty()) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            String tas \u003d filetasks.remove(0);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            String[] splittedtas \u003d tas.split(\"\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            if (splittedtas[4].equals(\"T\")) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                String word \u003d \"\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                for (int i \u003d 10; i \u003c splittedtas.length; i ++) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    word \u003d word + splittedtas[i];"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                tasklist.addTodo(new Todo(word));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                if (isDone(splittedtas[7])) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    Task t \u003d tasklist.returnTasks().get(tasklist.size()-1);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    t.markAsDone();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            } else if (splittedtas[4].equals(\"D\")) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                String word \u003d \"\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                String deadline \u003d \"\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                for (int i \u003d 10; i \u003c splittedtas.length; i ++) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    if (splittedtas[i].equals(\"(\")) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        for (int j \u003d i+5; j \u003c splittedtas.length-1; j++) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                            deadline \u003d deadline + splittedtas[j];"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        if (splittedtas[i+1].equals(\"(\")) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                            word \u003d word + splittedtas[i];"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                tasklist.addDeadline(new Deadline(word, deadline));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                if (isDone(splittedtas[7])) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    Task t \u003d tasklist.returnTasks().get(tasklist.size()-1);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    t.markAsDone();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            } else if (splittedtas[4].equals(\"E\")) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                String word \u003d \"\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                String date \u003d \"\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                for (int i \u003d 10; i \u003c splittedtas.length; i ++) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    if (splittedtas[i].equals(\"(\")) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        for (int j \u003d i+5; j \u003c splittedtas.length-1; j++) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                            date \u003d date + splittedtas[j];"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        if (splittedtas[i+1].equals(\"(\")) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                            word \u003d word + splittedtas[i];"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                tasklist.addEvent(new Event(word, date));"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                if (isDone(splittedtas[7])) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    Task t \u003d tasklist.returnTasks().get(tasklist.size()-1);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                    t.markAsDone();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public static boolean isDone(String op) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        return (op.equals(\"\\u2713\"));"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerwin97": 180
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * Constructor for Task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * @param description description of the Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * @return the appropriate status icon for whether the task is done or not."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String output \u003d \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerwin97": 40
    }
  },
  {
    "path": "src/main/java/Tasklist.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "public class Tasklist {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public Tasklist() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public void addTodo(Todo todo) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        tasks.add(todo);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public void addEvent(Event event) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        tasks.add(event);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public void addDeadline(Deadline deadline) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        tasks.add(deadline);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public ArrayList\u003cTask\u003e returnTasks() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        return tasks.get(i);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public void delete(int num) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        tasks.remove(num);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public void listout() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i ++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            int num \u003d i + 1;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            System.out.println(num + \". \" + tasks.get(i));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public void listfind(ArrayList\u003cTask\u003e found) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        for (int i \u003d 0; i \u003c found.size(); i ++) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            int num \u003d i + 1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            System.out.println(num + \". \" + found.get(i));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public String printlistfind(ArrayList\u003cTask\u003e found) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String out \u003d \"\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        if (found.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            return out;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            for (int i \u003d 0; i \u003c found.size(); i ++) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                int num \u003d i + 1;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                out \u003d out + \"\\n\" + num + \". \" + found.get(i);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        return out;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public ArrayList\u003cTask\u003e find(String word) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i ++) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            Task t \u003d tasks.get(i);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            String des \u003d t.getDescription();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            if (hasWord(des, word)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                temp.add(t);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public boolean hasWord(String description, String word) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String[] ls \u003d description.split(\" \");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        boolean a \u003d false;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        for (int i \u003d 0; i \u003c ls.length; i ++) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            if (ls[i].equals(word)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                a \u003d true;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        return a;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public String printlist() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String temp \u003d \"\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i ++) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            int num \u003d i + 1;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            temp \u003d temp + (num + \". \" + tasks.get(i) + \"\\n\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerwin97": 105
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * Constructor for Todoinstance"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     * @param description is a string of the description of the Task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public Todo (String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerwin97": 17
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public static void start() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        /*String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        printLineS();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public static void printLine() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public static void printLineS() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public static void bye() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        printLineS();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public static void listOut() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public static void listcount(int count) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        System.out.println(\"Now you have \" + count + \" tasks in the list.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public static void done() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public static void taskadded() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public static void find() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerwin97": 54
    }
  },
  {
    "path": "src/main/java/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "1. [T][✓] do fwoc"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "2. [D][✓] fwoc (by: 6th aug)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "3. [T][✓] krbff"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "4. [T][✘] jeanne"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "5. [T][✘] jeanne"
      }
    ],
    "authorContributionMap": {
      "kerwin97": 5
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" depthTest\u003d\"ENABLE\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"TOP_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            \u003cFont name\u003d\"Arial\" size\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "         \u003c/font\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "kerwin97": 23
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" maxHeight\u003d\"Infinity\" fillWidth\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "kerwin97": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerwin97": 10
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public void parsertest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String test \u003d \"20/12/2019 1845\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String output \u003d Parser.getDateTime(test);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        assertEquals(\"20th of December 2019, 6.45PM\", output);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerwin97": 13
    }
  },
  {
    "path": "src/test/java/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerwin97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    public void storagetest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String test1 \u003d \"✓\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        String test2 \u003d \"✘\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        boolean output1 \u003d Storage.isDone(test1);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        boolean output2 \u003d Storage.isDone(test2);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        assertEquals(true, output1);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "        assertEquals(false, output2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kerwin97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerwin97": 15
    }
  }
]
