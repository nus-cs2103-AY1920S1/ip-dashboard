[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhuplim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhuplim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhuplim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junhuplim": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "import java.net.SocketOption;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhuplim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhuplim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke \\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        Scanner scanner  \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                    System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                    scanner.close();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                    printList(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                } else if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                    String[] inputs \u003d input.split(\" \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                    int numberToComplete \u003d Integer.parseInt(inputs[1]) - 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                    completeTask(numberToComplete, tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                    String[] inputs \u003d input.split(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                    int numberToDelete \u003d Integer.parseInt(inputs[1]) - 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                    deleteTask(numberToDelete, tasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                } else if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                    if (!input.substring(4).isEmpty()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                        String description \u003d input.substring(4);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                        Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                        tasks.add(todo);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                        printout(todo, tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                        throw new EmptyDescriptionException(\"todo\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                    if (input.contains(\"/by\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                        int index \u003d input.lastIndexOf(\"/by\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                        String description \u003d input.substring(8, index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                        String by \u003d input.substring(index + 3);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                        if (description.isBlank()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                            throw new EmptyDescriptionException(\"deadline\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                        if (by.isBlank()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                            throw new InvalidDescriptionException(\"deadline\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                        Deadline deadline \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                        tasks.add(deadline);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                        printout(deadline, tasks);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                        throw new InvalidDescriptionException(\"deadline\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                } else if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                    if (input.contains(\"/at\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                        int index \u003d input.lastIndexOf(\"/at\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                        String description \u003d input.substring(5, index);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                        String at \u003d input.substring(index + 3);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                        if (description.isBlank()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                            throw new EmptyDescriptionException(\"event\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                        if (at.isBlank()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                            throw new InvalidDescriptionException(\"event\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                        Event event \u003d new Event(description, at);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                        tasks.add(event);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                        printout(event, tasks);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                        throw new InvalidDescriptionException(\"event\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                    throw new InvalidInputException();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "                handleException(e);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "junhuplim"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    public static void completeTask(int index, ArrayList\u003cTask\u003e tasksList) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        tasksList.get(index).complete();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        System.out.println(tasksList.get(index));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "junhuplim"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    public static void deleteTask(int index, ArrayList\u003cTask\u003e tasksList) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        Task removedTask \u003d tasksList.remove(index);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        System.out.println(removedTask);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        System.out.println(\"Now you have \" + tasksList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "junhuplim"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    public static void printout(Task task, ArrayList\u003cTask\u003e tasksList) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        System.out.println(\"Now you have \" + tasksList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "junhuplim"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    public static void printList(ArrayList\u003cTask\u003e tasksList) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        for(int i \u003d 0; i \u003c tasksList.size(); i++) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "            System.out.println(i + 1 + \".\" + tasksList.get(i));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    public static void handleException(Exception e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        if (e instanceof InvalidInputException) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "            System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        } else if (e instanceof EmptyDescriptionException) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "            System.out.println(String.format(\"OOPS!!! The description of a %s cannot be empty.\", e.getMessage()));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        } else if (e instanceof InvalidDescriptionException) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "            System.out.println(String.format(\"OOPS!!! Invalid input! Make sure your %s has a description and required data after /at for Event or /by for Deadline.\\n\", e.getMessage()));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "junhuplim"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "junhuplim"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "junhuplim": 113,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhuplim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junhuplim": 9
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "public class EmptyDescriptionException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    public EmptyDescriptionException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhuplim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    public EmptyDescriptionException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junhuplim": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhuplim"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhuplim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junhuplim": 13
    }
  },
  {
    "path": "src/main/java/InvalidDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "public class InvalidDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    public InvalidDescriptionException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhuplim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    public InvalidDescriptionException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junhuplim": 9
    }
  },
  {
    "path": "src/main/java/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "public class InvalidInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    public InvalidInputException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhuplim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    public InvalidInputException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junhuplim": 9
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    protected boolean isDone \u003d false;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhuplim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhuplim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhuplim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    public void complete() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhuplim"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        return this.getStatusIcon() + this.description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junhuplim": 20
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhuplim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhuplim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhuplim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junhuplim": 11
    }
  }
]
