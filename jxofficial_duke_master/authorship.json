[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public static final String filePath \u003d \"C:/Users/jxken/Desktop/Github/duke/data/duke.txt\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        TaskList tasks \u003d new TaskList(storage);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        UI ui \u003d new UI(tasks, storage);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        ui.sayHi();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            String fullCommand \u003d sc.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                UI.printLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                System.out.println(\"\\t â˜¹ OOPS!!! \" + e.getMessage());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                UI.printLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jxofficial": 35,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/FileReaderHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "public class FileReaderHandler {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public FileReaderHandler(TaskList tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public void readLineFromFileToList(String taskType, boolean isCompleted, String taskString) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                case \"TODO\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    tasks.addTask(new Todo(taskString, isCompleted), false);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                case \"DEADLINE\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    String[] deadlineParts \u003d taskString.split(\" \\\\(by: \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    String deadlineText \u003d deadlineParts[0];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                        tasks.addTask(new Deadline(deadlineText, deadlineParts[1], isCompleted), false);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    } catch (ParseException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                        System.out.println(e.getMessage() + \". Please make sure date from file is in this format DD/MM/YYYY HHMM\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                case \"EVENT\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    String[] eventParts \u003d taskString.split(\" \\\\(at: \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    String eventText \u003d eventParts[0];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                        tasks.addTask(new Event(eventText, eventParts[1], isCompleted), false);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    } catch (ParseException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                        System.out.println(e.getMessage() + \". Please enter date from file in this format DD/MM/YYYY HHMM - DD/MM/YYYY HHMM\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            System.out.println(\"\\t â˜¹ OOPS!!! \" + e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jxofficial": 48
    }
  },
  {
    "path": "src/main/java/duke/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public ListCommand(String taskInformation) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        super(taskInformation);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        tasks.printTasks();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jxofficial": 19
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        String[] parts \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        String command \u003d parts[0];"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        String commandInformation \u003d fullCommand.substring(command.length()).stripLeading();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    return new ExitCommand(commandInformation);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    return new ListCommand(commandInformation);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    return new MarkAsDoneCommand(commandInformation);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    return new CreateTodoCommand(commandInformation);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    return new CreateDeadlineCommand(commandInformation);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    return new CreateEventCommand(commandInformation);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    return new InvalidCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jxofficial": 33
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    private File tasksFile;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.tasksFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public void writeToTasksFile(TaskList tasks) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        List\u003cTask\u003e taskList \u003d tasks.getList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            FileWriter fw \u003d new FileWriter(tasksFile);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            for (Task t : taskList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                String fileString \u003d t.convertTaskToFileString() + \"\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                fw.write(fileString);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            System.out.println( e.getMessage() );"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public void readFromTasksFileToList (TaskList tasks) throws FileNotFoundException  {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        FileReaderHandler fileReaderHandler \u003d new FileReaderHandler(tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            Scanner sc \u003d new Scanner(tasksFile);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                String fileLine \u003d sc.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                String[] parts \u003d fileLine.split(\" \\\\| \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                String taskType \u003d parts[0].toUpperCase();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                boolean isCompleted \u003d parts[1].equals(\"T\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                String taskString \u003d parts[2];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                fileReaderHandler.readLineFromFileToList(taskType, isCompleted, taskString);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jxofficial": 50
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.exception.EmptyTodoTextException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.exception.TaskDoesNotExistException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public TaskList(Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        ui \u003d new UI(this, storage);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public TaskList(List taskList, UI ui) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public void addTask(Task t, boolean printMessage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        if (t.getTaskName().isBlank()) throw new EmptyTodoTextException(\"The description of a todo cannot be empty\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        taskList.add(t);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        if (printMessage) ui.printAddTaskMessage(t);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public void printTasks() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "       ui.printTasks();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public void markTaskAsCompleted(int taskNumber, boolean printMessage) throws TaskDoesNotExistException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        if (taskNumber \u003c 1 || taskNumber \u003e taskList.size()) throw new TaskDoesNotExistException(\"Task not found\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        Task t \u003d taskList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        t.markAsCompleted();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        if (printMessage) ui.printMarkTaskAsCompletedMessage(t);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public void deleteTask(int taskNumber, boolean printMessage) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        Task t \u003d taskList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        taskList.remove(t);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        if (printMessage) ui.printDeleteTaskMessage(t);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jxofficial": 60
    }
  },
  {
    "path": "src/main/java/duke/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public UI(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.taskList \u003d tasks.getList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public void sayBye() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        System.out.println(\"\\t Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "   public void sayHi() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        System.out.println(\"\\t Hello! I\u0027m Duke.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            storage.readFromTasksFileToList(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            System.out.println(\"\\t This is where you left off previously: \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            printLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            System.out.println(\"\\t Fetching failed. \" + e.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            System.out.println(\"\\t Creating file now...\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            File dukeTxt \u003d new File(Duke.filePath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                dukeTxt.createNewFile();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                System.out.println(\"\\t File created! \" + dukeTxt.getAbsolutePath());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                System.out.println(\"\\t Reading file...\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                printLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            } catch (IOException ioe) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                System.out.println(\"\\t File creation was not successful. \" + ioe);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                System.out.println(\"\\t Exiting system.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                printLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                System.exit(-1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        printTasks();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "   }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "   public static void printLine() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        System.out.println(\"\\t_______________________________\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public void printAddTaskMessage(Task t) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        String pluralOrNot \u003d taskList.size() \u003d\u003d 1 ? \"task\" : \"tasks\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        List\u003cTask\u003e list \u003d tasks.getList();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        System.out.println(\"\\t Got it. I\u0027ve added this task: \\n\" +"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                \"\\t  \" + t.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                \"\\t Now you have \" + list.size() + \" \" + pluralOrNot + \" in the list\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public void printTasks() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) System.out.println(\"\\t No pending tasks\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            String pluralOrNot \u003d taskList.size() \u003d\u003d 1 ? \"Task\" : \"Tasks\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            System.out.println(\"\\t \" + pluralOrNot);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                System.out.print(\"\\t \" + (i + 1) + \".\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                System.out.println(taskList.get(i));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public void printMarkTaskAsCompletedMessage(Task t) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        System.out.println(\"\\t Nice! I\u0027ve marked this task as done: \\n\" +"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                \"\\t  [âœ“] \" + t.getTaskName() + \" \" + t.getDetails() );"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public void printDeleteTaskMessage(Task t) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        String pluralOrNot \u003d taskList.size() \u003d\u003d 1 ? \"task\" : \"tasks\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        System.out.println(\"\\t I\u0027ve removed this task: \\n\" +"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                \"\\t  [âœ“] \" + t.getTaskName() + \" \" + t.getDetails() + \"\\n\" +"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                \"\\t Now you have \" + taskList.size() + \" \" + pluralOrNot + \" in the list\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jxofficial": 92
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    String commandInformation;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "\tpublic Command() { }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "\tpublic Command(String commandInformation) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "\t\tthis.commandInformation \u003d commandInformation;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "\tpublic abstract void execute(TaskList tasks, UI ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "\tpublic abstract boolean isExit();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jxofficial": 22
    }
  },
  {
    "path": "src/main/java/duke/command/CreateDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "public class CreateDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public CreateDeadlineCommand(String commandInformation) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        super(commandInformation);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        String deadline \u003d  this.commandInformation;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        String[] deadlineParts \u003d deadline.split(\" /by \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        String deadLineText \u003d deadlineParts[0];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        String by \u003d deadlineParts[1];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            tasks.addTask(new Deadline(deadLineText, by), true);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            System.out.println(\"\\t \" + e.getMessage() + \". Please enter date in this format DD/MM/YYYY HHMM\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        storage.writeToTasksFile(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jxofficial": 36
    }
  },
  {
    "path": "src/main/java/duke/command/CreateEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "public class CreateEventCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public CreateEventCommand(String commandInformation) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        super(commandInformation);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        String event \u003d this.commandInformation;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        String[] eventParts \u003d event.split(\" /at \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        String eventText \u003d eventParts[0];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        String at \u003d eventParts[1];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            tasks.addTask(new Event(eventText, at),true);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            System.out.println(\"\\t \" + e.getMessage() + \". Please enter date in this format DD/MM/YYYY HHMM - DD/MM/YYYY HHMM\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        storage.writeToTasksFile(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jxofficial": 36
    }
  },
  {
    "path": "src/main/java/duke/command/CreateTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "public class CreateTodoCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public CreateTodoCommand(String commandInformation) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        super(commandInformation);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        String todoText \u003d commandInformation;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        tasks.addTask(new Todo(todoText),true);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        storage.writeToTasksFile(tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jxofficial": 25
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public ExitCommand(String taskInformation) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        super(taskInformation);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        ui.sayBye();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jxofficial": 22
    }
  },
  {
    "path": "src/main/java/duke/command/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public InvalidCommand() { }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws InvalidCommandException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        throw new InvalidCommandException(\"\\t I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jxofficial": 21
    }
  },
  {
    "path": "src/main/java/duke/command/MarkAsDoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import duke.exception.TaskDoesNotExistException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "public class MarkAsDoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public MarkAsDoneCommand(String taskInformation) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        super(taskInformation);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws TaskDoesNotExistException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(commandInformation);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        tasks.markTaskAsCompleted(taskNumber, true);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        storage.writeToTasksFile(tasks);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jxofficial": 24
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jxofficial": 11
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyTodoTextException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "public class EmptyTodoTextException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public EmptyTodoTextException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jxofficial": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jxofficial": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/TaskDoesNotExistException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "public class TaskDoesNotExistException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public TaskDoesNotExistException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jxofficial": 8
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    protected Date byDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public Deadline(String taskName, String by) throws ParseException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.taskType \u003d TypeOfTask.DEADLINE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.byDate \u003d formatter.parse(by);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.details \u003d \"(by: \" + by + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public Deadline(String taskName, String by, boolean isCompleted) throws ParseException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        super(taskName, isCompleted);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.taskType \u003d TypeOfTask.DEADLINE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.byDate \u003d formatter.parse(by);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.details \u003d \"(by: \" + by;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jxofficial": 30
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    Date date1;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    Date date2;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public Event(String taskName, String at) throws ParseException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.taskType \u003d TypeOfTask.EVENT;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        String[] parts \u003d at.split(\" - \");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.date1 \u003d formatter.parse(parts[0]);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.date2 \u003d formatter.parse(parts[1]);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.details \u003d \"(at: \" + at + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public Event(String taskName, String at, boolean isCompleted) throws ParseException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        super(taskName, isCompleted);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.taskType \u003d TypeOfTask.EVENT;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        String[] parts \u003d at.split(\" - \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.date1 \u003d formatter.parse(parts[0]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.date2 \u003d formatter.parse(parts[1]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.details \u003d \"(at: \" + at;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jxofficial": 33
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    protected String taskName;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    protected boolean isCompleted;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    protected String details;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    protected TypeOfTask taskType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public Task(String taskName) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.isCompleted \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public Task(String taskName, boolean isCompleted) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.isCompleted \u003d isCompleted;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public String convertTaskToFileString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        char isCompleted \u003d this.isCompleted ? \u0027T\u0027 : \u0027F\u0027;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        String taskType \u003d this.taskType.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        String result \u003d  taskType + \" | \" + isCompleted + \" | \" + this.taskName + \" \" + this.details;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        return result.stripTrailing();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public void markAsCompleted() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.isCompleted \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public String getDetails() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        char symbol \u003d this.isCompleted ? \u0027âœ“\u0027 : \u0027âœ—\u0027;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        String result \u003d \"[\" + taskType + \"][\" + symbol + \"] \" + taskName + \" \" + details;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        return result.stripTrailing();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jxofficial": 46
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public Todo(String taskName) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.taskType \u003d TypeOfTask.TODO;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.details \u003d \"\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public Todo(String taskName, boolean isCompleted) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        super(taskName, isCompleted);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.taskType \u003d TypeOfTask.TODO;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.details \u003d \"\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jxofficial": 21
    }
  },
  {
    "path": "src/main/java/duke/task/TypeOfTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "public enum TypeOfTask {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    TODO, DEADLINE, EVENT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        String taskType \u003d super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        return taskType.substring(0, 1) + taskType.substring(1).toLowerCase();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jxofficial": 11
    }
  }
]
