[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    //mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "test {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ellieyee": 23,
      "-": 15
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "Todo|1|read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "Deadline|0|return book|June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "Todo|1|join sports club"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "Event|0|assignment|today"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "Todo|0|add this"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "Deadline|0|return book|2/12/2019 120"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "Event|0|sales|25/5/1997 2359"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "Event|0|do this|1/1/1991 1234"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "Event|0|today|1/1/1991 1234"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "Todo|1|this"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "Event|0|kvnj|1/1/1991 2123"
      }
    ],
    "authorContributionMap": {
      "Ellieyee": 11
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param task - Task given to execute command"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Adds given task into tasklist"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param taskList - list containing all existing tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public void execute(TaskList taskList) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        taskList.add(this.task);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        UI.printSuccessfulAddMessage(taskList.get(taskList.size()-1), taskList.size());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ellieyee": 21
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param task - Task given to execute command"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public Command(Task task) { this.task \u003d task; }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Execute command on given task and save into tasklist"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public abstract void execute(TaskList taskList);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ellieyee": 13
    }
  },
  {
    "path": "src/main/java/DataStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "public class DataStorage {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private static final String PATH \u003d \"C:\\\\Users\\\\ellieyeewenna\\\\Desktop\\\\Ellie\\\\NUS\\\\CS2103\\\\IP\\\\data\\\\duke.txt\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Stores all tasks in tasklist into given txt file"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param taskList - list containing all existing tasks"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public static void storeTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        String content \u003d getStringContent(taskList);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            Files.writeString(Paths.get(PATH), content);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Retrieves tasks from given txt file and stores into new TaskList"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @return TaskList - list containing all existing tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public static TaskList getStoredTaskList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        File file \u003d new File(PATH);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            String command;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            int idx \u003d 0;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            while ((command \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                String[] taskInfo \u003d command.split(\"\\\\|\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                switch(taskInfo[0]) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                    case \"Deadline\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                        taskList.add(new DeadlineTask(taskInfo[2], taskInfo[3]));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                    case \"Event\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                        taskList.add(new EventTask(taskInfo[2], taskInfo[3]));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                    case \"Todo\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                        taskList.add(new ToDoTask(taskInfo[2]));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                if(taskInfo[1].equals(\"1\")) { taskList.done(idx); }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                idx++;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            e.getMessage();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Converts existing taskList into storable and easily retrievable string format"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param taskList - list containing all existing tasks"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @return String format of taskList"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private static String getStringContent(TaskList taskList) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        String contents \u003d \"\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        for(int i \u003d 0; i \u003c taskList.size(); i ++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            String taskType \u003d task.getTaskType();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            String isDone \u003d (task.isDone()) ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            String taskName \u003d task.getName();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            switch(task.getTaskType()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                case \"Deadline\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                    DeadlineTask deadLineTask \u003d (DeadlineTask) task; // Check coding standard"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                    String deadline \u003d deadLineTask.getDeadline();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                    contents +\u003d taskType + \"|\" + isDone + \"|\" + taskName + \"|\" + deadline + \"\\n\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                case \"Event\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                    EventTask eventTask \u003d (EventTask) task;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                    String duration \u003d eventTask.getDuration();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                    contents +\u003d taskType + \"|\" + isDone + \"|\" + taskName + \"|\" + duration + \"\\n\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                case \"Todo\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                    contents +\u003d taskType + \"|\" + isDone + \"|\" + taskName + \"\\n\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        return contents;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ellieyee": 83
    }
  },
  {
    "path": "src/main/java/DateTimeParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "public class DateTimeParser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Validates the format of the given string as a proper Date format"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param dateToValidate - String containing expected date"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @throws WrongDateFormatException - thrown when the given String does not comply with Date formet"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public static void validateDateFormat(String dateToValidate) throws WrongDateFormatException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        //To make strict date format validation"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        formatter.setLenient(false);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            formatter.parse(dateToValidate);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            throw new WrongDateFormatException(dateToValidate);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ellieyee": 22
    }
  },
  {
    "path": "src/main/java/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private static final String DEFAULT_DEADLINE_ICON \u003d \"[D]\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private static final String DEADLINE_TASK_STATEMENT \u003d \"by\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private static final String DEADLINE_TASK_TYPE \u003d \"Deadline\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private String deadLine;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param taskName - Name of task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param deadLine - Deadline of task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public DeadlineTask(String taskName, String deadLine) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        super(taskName, DEFAULT_DEADLINE_ICON, DEADLINE_TASK_TYPE);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        this.deadLine \u003d deadLine;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Verifies that given statement complies with the required Deadline format"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param statement - String containing expected statement"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @throws IncorrectStatementException - thrown if the verification fails"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public static void verifyTaskStatement(String statement) throws IncorrectStatementException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        if (!statement.equals(DEADLINE_TASK_STATEMENT)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            throw new IncorrectStatementException(statement, DEADLINE_TASK_STATEMENT);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        return this.deadLine;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        return super.toString() + \" (by: \" + this.deadLine + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ellieyee": 36
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private int idx;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param idx - Index of task to delete"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public DeleteCommand(int idx) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        super(null);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        this.idx \u003d idx;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Execute delete command on given task and save into tasklist"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param taskList - list containing all existing tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public void execute(TaskList taskList) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        Task task \u003d taskList.get(this.idx);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        taskList.delete(idx);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        UI.printSuccessDeleteTaskMessage(task, taskList.size());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ellieyee": 22
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private int idx;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param idx - Index of task to delete"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public DoneCommand(int idx) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        super(null);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        this.idx \u003d idx;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Execute done command on given task and save into tasklist"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param taskList - list containing all existing tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public void execute(TaskList taskList) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        Task task \u003d taskList.get(idx);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        taskList.done(this.idx);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        UI.printSuccessfulDoneMessage(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ellieyee": 22
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /* Globals */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private static TaskList taskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private static Parser parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Initialize static variables"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public static void init() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        taskList \u003d DataStorage.getStoredTaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        Duke.init();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        UI.printWelcomeMessage();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        runEvents();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        UI.printGoodbyeMessage();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        DataStorage.storeTaskList(taskList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Adds commands to lists and runs executes commands"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private static void runEvents() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        String inputCommand \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        while (!inputCommand.toLowerCase().equals(\"bye\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            Optional\u003cCommand\u003e fullCommand \u003d parser.executeCommand(taskList, inputCommand);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            fullCommand.ifPresent(command -\u003e command.execute(taskList));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            inputCommand \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ellieyee": 33,
      "-": 4
    }
  },
  {
    "path": "src/main/java/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private static final String DEFAULT_EVENT_ICON \u003d \"[E]\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private static final String EVENT_TASK_STATEMENT \u003d \"at\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private static final String EVENT_TASK_TYPE \u003d \"Event\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private String duration;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param taskName - Name of task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param duration - Deadline of task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public EventTask(String taskName, String duration) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        super(taskName, DEFAULT_EVENT_ICON, EVENT_TASK_TYPE);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Verifies that given statement complies with the required Deadline format"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param statement - String containing expected statement"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @throws IncorrectStatementException - thrown if the verification fails"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public static void verifyTaskStatement(String statement) throws IncorrectStatementException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        if (!statement.equals(EVENT_TASK_STATEMENT)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            throw new IncorrectStatementException(statement, EVENT_TASK_STATEMENT);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public String getDuration() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        return this.duration;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        return super.toString() + \" (at: \" + this.duration + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ellieyee": 36
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param taskName - Name of task to search for"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public FindCommand(String taskName) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        super(null);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Execute find command on given task and save into tasklist"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param taskList - list containing all existing tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public void execute(TaskList taskList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        for(int i \u003d 0; i \u003c taskList.size(); i ++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            if(taskList.get(i).getName().contains(this.taskName)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                list.add(taskList.get(i));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        if(list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            UI.printNoKeywordMessage(this.taskName);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            UI.printFoundKeywordMessage();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            for(int i \u003d 0; i \u003c list.size(); i ++) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                System.out.println((i+1) + \".\" + list.get(i));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ellieyee": 36
    }
  },
  {
    "path": "src/main/java/ITask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "public interface ITask {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    String getName();"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    void markDone();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    String getTaskType();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    boolean isDone();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    String toString();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Ellieyee": 9
    }
  },
  {
    "path": "src/main/java/IncompleteCommandError.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "public class IncompleteCommandError extends UnknownCommandException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param message - Message describing command: Empty or incomplete"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param taskName - Name of task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public IncompleteCommandError(String message, String taskName) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        return \"☹ OOPS!!! The description of a \" + this.taskName + \" cannot be \" + this.message + \".\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ellieyee": 20
    }
  },
  {
    "path": "src/main/java/IncorrectStatementException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "public class IncorrectStatementException extends InvalidCommandError {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private String actualStatement;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private String givenStatement;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param givenStatement - Given message input by user"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param actualStatement - Expected ouput"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public IncorrectStatementException(String givenStatement, String actualStatement) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        super(actualStatement);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        this.actualStatement \u003d actualStatement;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        this.givenStatement \u003d givenStatement;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        return \"Sorry that statement is invalid. Try using \\\"/\" + this.actualStatement + \"\\\" instead of \\\"/\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                + this.givenStatement + \"\\\".\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ellieyee": 20
    }
  },
  {
    "path": "src/main/java/InvalidCommandError.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "public class InvalidCommandError extends UnknownCommandException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param message - Given message input by user"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public InvalidCommandError(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        return \"☹ OOPS!!! The statement: \\\"\" + this.message + \"\\\" is invalid. \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ellieyee": 17
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        super(null);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public void execute(TaskList tasklist) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        tasklist.print();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ellieyee": 13
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Parse given user input and returns Optional containing null or valid command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param taskList - list containing all existing tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param fullCommand - command given by user input"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @return Optional containing either valid command or null (when exception is thrown)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public Optional\u003cCommand\u003e executeCommand(TaskList taskList, String fullCommand) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        String[] commandDescription \u003d fullCommand.trim().split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        commandDescription[0] \u003d commandDescription[0].toLowerCase();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        String taskName \u003d commandDescription[0];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            switch (taskName) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                    return this.parseListCommand(fullCommand);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                    return this.parseDeleteCommand(commandDescription);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                    return this.parseDoneCommand(commandDescription);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                    return this.parseAddWithoutDateCommand(commandDescription);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                    return this.parseAddWithDateCommand(commandDescription);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                    return this.parseFindCommand(commandDescription);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                    throw new UnknownCommandException(commandDescription[0]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        } catch (UnknownCommandException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            UI.printExceedListMessage(this.taskList.size());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            UI.printInvalidStatementMessage(fullCommand);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        return Optional.empty();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Parse new task (without date) based on existing format"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param commandDescription - array of strings containing command description"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @return Optional containing either valid command or null (when exception thrown)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @throws IncompleteCommandError - throws error if the command is not in complete format"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private Optional\u003cCommand\u003e parseAddWithoutDateCommand(String[] commandDescription) throws IncompleteCommandError {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        this.checkCommandEmpty(commandDescription);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        return Optional.of(new AddCommand(new ToDoTask(commandDescription[1])));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Parse new task (with date) based on existing format"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param commandDescription - array of strings containing command description"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @return Optional containing either valid command or null (when exception thrown)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @throws IncompleteCommandError - throws error if the command is not in correct format"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private Optional\u003cCommand\u003e parseAddWithDateCommand(String[] commandDescription) throws UnknownCommandException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        this.checkCommandEmpty(commandDescription);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            String[] taskArray \u003d commandDescription[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            String taskName \u003d taskArray[0].trim();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            String taskType \u003d commandDescription[0].toLowerCase();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            String[] statementAndDate \u003d taskArray[1].split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            DateTimeParser.validateDateFormat(statementAndDate[1]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            switch(taskType) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                    DeadlineTask.verifyTaskStatement(statementAndDate[0].toLowerCase());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                    return Optional.of(new AddCommand(new DeadlineTask(taskName, statementAndDate[1])));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                    EventTask.verifyTaskStatement(statementAndDate[0].toLowerCase());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                    return Optional.of(new AddCommand(new EventTask(taskName, statementAndDate[1])));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            throw new IncompleteCommandError(\"incomplete\", commandDescription[0]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        return Optional.empty();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Parse delete command based on format"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param commandDescription - array of strings containing command description"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @return Optional containing either valid command or null (when exception thrown)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @throws RuntimeException - contains both NumberFormatException and IndexOutOfBoundsException"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @throws IncompleteCommandError - throws error if the command is not in complete format"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private Optional\u003cCommand\u003e parseDeleteCommand(String[] commandDescription) throws RuntimeException, IncompleteCommandError {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        this.checkCommandEmpty(commandDescription);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        int idx \u003d Integer.parseInt(commandDescription[1]) - 1;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        if(idx \u003e\u003d this.taskList.size()) { throw new IndexOutOfBoundsException(); }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        return Optional.of(new DeleteCommand(idx));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Marks specified command based on idx of command and required format"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param commandDescription - array of strings containing command description"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @return Optional containing either valid command or null (when exception thrown)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @throws RuntimeException - contains both NumberFormatException and IndexOutOfBoundsException"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @throws IncompleteCommandError - throws error if the command is not in complete format"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private Optional\u003cCommand\u003e parseDoneCommand(String[] commandDescription) throws RuntimeException, IncompleteCommandError {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        this.checkCommandEmpty(commandDescription);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        int idx \u003d Integer.parseInt(commandDescription[1]) - 1;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        if(idx \u003e\u003d this.taskList.size()) { throw new IndexOutOfBoundsException(); }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        return Optional.of(new DoneCommand(idx));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Parse list command based on required format"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @return Optional containing either valid command or null (when exception thrown)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @throws InvalidCommandError - throws error if the command is in wrong format"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private Optional\u003cCommand\u003e parseListCommand(String command) throws InvalidCommandError {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        if (!command.toLowerCase().equals(\"list\")) { throw new InvalidCommandError(command); }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        return Optional.of(new ListCommand());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Parse find command based on required format"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param commandDescription - array of strings containing command description"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @return Optional containing either valid command or null (when exception thrown)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @throws IncompleteCommandError - throws error if the command is not in complete format"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private Optional\u003cCommand\u003e parseFindCommand(String[] commandDescription) throws IncompleteCommandError {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        this.checkCommandEmpty(commandDescription);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        return Optional.of(new FindCommand(commandDescription[1]));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Throws error if the given command is empty"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param commandDescription - array of strings containing command description"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @throws IncompleteCommandError - throws error if the command is not in complete format"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private void checkCommandEmpty(String[] commandDescription) throws IncompleteCommandError {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        if(commandDescription.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            throw new IncompleteCommandError(\"empty\", commandDescription[0]);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ellieyee": 143
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "public class Task implements ITask {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private static final String DEFAULT_TASK_TYPE \u003d \"Default\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private String taskIcon;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param taskName - Name of given task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param taskIcon - Icon for the task - [D]/[E] etc.."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param taskType - Type of task - Deadline/Event etc.."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public Task(String taskName, String taskIcon, String taskType) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        this.taskIcon \u003d taskIcon;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Marks Task as Done"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Returns taskName"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @return String name"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        return this.taskName;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Returns tick if task is Done, else returns cross"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @return String symbol"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private String getDoneSymbol() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        if(this.isDone) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            return \"✓\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        return \"✗\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        return this.taskType;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private String getTaskIcon() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        return this.taskIcon;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        return this.getTaskIcon() + \"[\" + this.getDoneSymbol() + \"] \" + this.getName();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ellieyee": 63
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        this.list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Adds new task (without date) into list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param task - task to add"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        this.list.add(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Marks task at given index as done"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param idx - Index of task in list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @throws IndexOutOfBoundsException - Throws error if given index is out of list bounds"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public void done(int idx) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        this.list.get(idx).markDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Marks task at given index as done"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param idx - Index of task in list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @throws IndexOutOfBoundsException - Throws error if given index is out of list bounds"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public void delete(int idx) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        Task task \u003d this.list.get(idx);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        this.list.remove(idx);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        UI.printSuccessDeleteTaskMessage(task, this.size());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Returns task at index idx"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param idx - index of task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @return Task at index idx"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public Task get(int idx) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        return this.list.get(idx);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Returns the current size of list"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @return size of list"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        return this.list.size();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Prints out contents of list"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public void print() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        for (int i \u003d 0; i \u003c this.list.size(); i++) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "            System.out.println((i+1) + \".\" + this.list.get(i));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ellieyee": 68
    }
  },
  {
    "path": "src/main/java/ToDoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "public class ToDoTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private static final String DEFAULT_TODO_ICON \u003d \"[T]\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private static final String TODO_TASK_TYPE \u003d \"Todo\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param taskName - Name of given task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public ToDoTask(String taskName) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        super(taskName, DEFAULT_TODO_ICON,TODO_TASK_TYPE);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ellieyee": 12
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Prints once the program Duke.java is launched"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public static void printWelcomeMessage() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Prints right before the program Duke.java is closed"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public static void printGoodbyeMessage() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Prints out message after successful deletion of task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param task - Task that has been successfully deleted"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param size - Current size of list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public static void printSuccessfulAddMessage(Task task, int size) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        System.out.println(\"  \" + task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        System.out.println(\"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Prints out message after successful marking of task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param task - Task that has been successfully marked done"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public static void printSuccessfulDoneMessage(Task task) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        System.out.println(\"  \" + task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Prints out message after successful deletion of task"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param task - Task that has been successfully deleted"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param size - Current size of list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public static void printSuccessDeleteTaskMessage(Task task, int size) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        System.out.println(\"  \" + task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        System.out.println(\"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Prints out message after exceeding list bounds"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param size - Current size of list"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public static void printExceedListMessage(int size) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        System.out.println(\"There is/are only \" + size + \" item(s) in the list :( \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Prints out message after invalid statement"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param fullCommand - Invalid command"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public static void printInvalidStatementMessage(String fullCommand) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        System.out.println(\"☹ OOPS!!! The statement: \\\"\" + fullCommand + \"\\\" is invalid. \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Prints out message after tasks are found matching the given keyword"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public static void printFoundKeywordMessage() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Prints out message after no tasks are found matching the given keyword"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param keyword - given keyword from user"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public static void printNoKeywordMessage(String keyword) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        System.out.println(\"☹ OOPS!!! There are no matching tasks in the list with the keyword: \\\"\" +"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                keyword + \"\\\".\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ellieyee": 79
    }
  },
  {
    "path": "src/main/java/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "public class UnknownCommandException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param message - unknown command given by user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public UnknownCommandException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        return \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ellieyee": 13
    }
  },
  {
    "path": "src/main/java/WrongDateFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "public class WrongDateFormatException extends UnknownCommandException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     * @param date - Given date format from user"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public WrongDateFormatException(String date) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        super(date);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        return \"The format for \\\"\" + this.date + \"\\\" is wrong. The correct format for dates should be: \" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                \"\\\"dd/MM/yyyy HHmm\\\"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ellieyee": 18
    }
  },
  {
    "path": "src/test/java/DeadlineTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "public class DeadlineTaskTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        assertEquals(\"[D][✗] task (by: 1/1/1991 1234)\","
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                new DeadlineTask(\"task\", \"1/1/1991 1234\").toString());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ellieyee": 10
    }
  },
  {
    "path": "src/test/java/EventTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "public class EventTaskTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        assertEquals(\"[E][✗] sale (at: 1/1/1991 1234)\","
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                new EventTask(\"sale\", \"1/1/1991 1234\").toString());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ellieyee": 10
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public TaskListTest() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        taskList.add(new ToDoTask(\"Say hi\"));"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        taskList.add(new DeadlineTask(\"task\", \"1/1/1991 1234\"));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        taskList.add(new EventTask(\"sale\", \"1/1/1991 1234\"));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public void testTaskListSize() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        assertEquals(3, taskList.size());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public void testGetTaskList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        assertEquals(\"[D][✗] task (by: 1/1/1991 1234)\", taskList.get(1).toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        taskList.print();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        String expectedOutput \u003d \"Here are the tasks in your list:\\n\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                                \"1.[T][✗] Say hi\\n\" +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                                \"2.[D][✗] task (by: 1/1/1991 1234)\\n\" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "                                \"3.[E][✗] sale (at: 1/1/1991 1234)\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        assertEquals(expectedOutput, outContent.toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ellieyee": 35
    }
  },
  {
    "path": "src/test/java/ToDoTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "public class ToDoTaskTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "        assertEquals(\"[T][✗] Say hi\", new ToDoTask(\"Say hi\").toString());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ellieyee": 10
    }
  },
  {
    "path": "test1.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "This is a test"
      }
    ],
    "authorContributionMap": {
      "Ellieyee": 1
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "? OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      }
    ],
    "authorContributionMap": {
      "Ellieyee": 1
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "say hi"
      }
    ],
    "authorContributionMap": {
      "Ellieyee": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ellieyee"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Ellieyee": 21
    }
  }
]
