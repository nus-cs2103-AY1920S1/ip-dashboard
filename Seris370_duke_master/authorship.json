[
  {
    "path": "src/main/java/Add.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class Add extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public String type;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public Add(String type, String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 10
    }
  },
  {
    "path": "src/main/java/Bye.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class Bye extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 3
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 3
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public Deadline(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public Deadline(String description, boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public String repr() throws ParseException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return \"[D][\" + getStatusIcon() + \"] \" + super.formatDescription();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 16
    }
  },
  {
    "path": "src/main/java/Delete.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class Delete extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public int number;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public Delete(int number) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        this.number \u003d number;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Seris370": 9
    }
  },
  {
    "path": "src/main/java/Done.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class Done extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public int number;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public Done(int number) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        this.number \u003d number;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 8
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private void done(int num) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            tasks.done(num);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            storage.write(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            ui.done(tasks, num);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            ui.showDukeException(ex);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            ui.showParseError();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private void delete(int num) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            tasks.delete(num);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            storage.write(tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            ui.delete(tasks, num);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            ui.showDukeException(ex);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            ui.showParseError();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private void add(String type, String description) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            tasks.add(type, description);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            storage.write(tasks);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            ui.add(tasks);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            ui.showDukeException(ex);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                if (command instanceof Bye) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    ui.bye();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                } else if (command instanceof PrintList) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    ui.printList(tasks);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                } else if (command instanceof Done) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    Done done \u003d (Done) command;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    done(done.number);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                } else if (command instanceof Delete) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    Delete delete \u003d (Delete) command;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    delete(delete.number);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                } else if (command instanceof Add) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    Add add \u003d (Add) command;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    add(add.type, add.description);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                ui.showDukeException(ex);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        new Duke(\"tasks.txt\").run();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 84,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public Event(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public Event(String description, boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public String repr() throws ParseException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return \"[E][\" + getStatusIcon() + \"] \" + super.formatDescription();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 16
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        if (input.equals(\"bye\")) { // exit"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            return new Bye();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } else if (input.equals(\"list\")) { // show all tasks"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            return new PrintList();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } else if (input.split(\" \")[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                int num \u003d Integer.parseInt(input.split(\" \")[1]);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                return new Done(num);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                throw new DukeException(\"Task number should be integer.\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } else if (input.split(\" \")[0].equals(\"delete\")) { // delete a specific task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                int num \u003d Integer.parseInt(input.split(\" \")[1]);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                return new Delete(num);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                throw new DukeException(\"Task number should be integer.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } else { // add new task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            if (input.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                String type \u003d input.split(\" \")[0];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            String type \u003d input.substring(0, input.indexOf(\" \"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            String description \u003d input.substring(input.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    return new Add(\"todo\", description);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    return new Add(\"event\", description);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    return new Add(\"deadline\", description);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 50
    }
  },
  {
    "path": "src/main/java/PrintList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class PrintList extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 3
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        // create data file if it doesn\u0027t exist"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            System.out.print(\"\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public void write(TaskList list) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d list.tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        try (FileWriter fileWriter \u003d new FileWriter(filePath, false)) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            StringBuilder content \u003d new StringBuilder();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            for (Task t : tasks) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                String type \u003d t instanceof Deadline ? \"D\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                        : t instanceof Event ? \"E\" : \"T\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                String isDone \u003d t.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                String taskData \u003d type + \"@\" + isDone + \"@\" + t.description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                content.append(taskData).append(\"\\n\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            fileWriter.write(content.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            throw new DukeException(\"Cannot write to file\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        try (BufferedReader br \u003d new BufferedReader(new FileReader(filePath))) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                String[] parts \u003d line.split(\"@\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                Task newTask;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                boolean isDone \u003d parts[1].equals(\"1\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                switch (parts[0]) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                        newTask \u003d new Todo(parts[2], isDone);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                        newTask \u003d new Event(parts[2], isDone);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                        newTask \u003d new Deadline(parts[2], isDone);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                        newTask \u003d new Task(\"\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                list.add(newTask);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            throw new DukeException(\"Cannot load from file\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 65
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private Date parseDate(String input) throws ParseException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        SimpleDateFormat ft \u003d new SimpleDateFormat (\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        Date t \u003d new Date();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        t \u003d ft.parse(input);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    protected String formatDescription() throws ParseException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        String item \u003d description.substring(0, description.indexOf(\"/\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        String tag \u003d description.substring(description.indexOf(\"/\") + 1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        String prep \u003d tag.substring(0, tag.indexOf(\" \"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        String time \u003d tag.substring(tag.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        Date date \u003d parseDate(time);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return item + \"(\" + prep + \": \" + date + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public String repr() throws ParseException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 43
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public void done(int num) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        if (num \u003e\u003d tasks.size() || num \u003c 1) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            throw new DukeException(\"Task number out of range.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        tasks.get(num - 1).isDone \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public void delete(int num) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        if (num \u003e\u003d tasks.size() || num \u003c 1) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            throw new DukeException(\"Task number out of range.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        tasks.remove(num - 1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public void add(String type, String description) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                newTask \u003d new Todo(description);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                newTask \u003d new Event(description);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                newTask \u003d new Deadline(description);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            newTask.repr();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            tasks.add(newTask);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException | StringIndexOutOfBoundsException | ParseException ex) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            throw new DukeException(\"Task description should be of format \\\"context /prep dd/MM/yyyy HHmm\\\"\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 53
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public String repr() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return \"[T][\" + super.getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public String done() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return \"  [T][✓] \" + description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 18
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private String line \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private void formatPrint(String[] lists) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        for (String s : lists) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            System.out.println(\"     \" + s);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private void formatPrint(String s) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        System.out.println(\"     \" + s);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private String format(String s) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return \"     \" + s;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private void echo(String s) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        formatPrint(s);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        formatPrint(new String[]{\"Hello! I\u0027m Duke\", \"What can I do for you?\"});"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public void bye() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        formatPrint(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public void printList(TaskList list) throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d list.tasks;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            throw new DukeException(\"There are no task in your list\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            System.out.println(format(\"Here are the tasks in your list:\"));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                Task t \u003d tasks.get(i);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                System.out.println(\"  \" + format(i + 1 + \".\" + t.repr()));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            throw new DukeException(\"Task description should be of format \\\"context /prep dd/MM/yyyy HHmm\\\"\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public void done(TaskList list, int num) throws ParseException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d list.tasks;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        String[] listToPrint \u003d {\"Nice! I\u0027ve marked this task as done: \", \"  \" + tasks.get(num - 1).repr()};"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        formatPrint(listToPrint);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public void delete(TaskList list, int num) throws ParseException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d list.tasks;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        Task t \u003d tasks.get(num - 1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        System.out.println(format(\"Noted. I\u0027ve removed this task: \"));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        System.out.println(\"  \" + format(t.repr()));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        switch (tasks.size()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            case 0:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                System.out.println(format(\"Now you have no task in the list.\"));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                System.out.println(format(\"Now you have 1 task in the list.\"));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                System.out.println(format(\"Now you have \" + tasks.size() + \" tasks in the list.\"));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public void add(TaskList list) throws DukeException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d list.tasks;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            Task newTask \u003d tasks.get(tasks.size() - 1);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            String str \u003d format(newTask.repr());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            System.out.println(format(\"Got it. I\u0027ve added this task: \"));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            System.out.println(\"  \" + str);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException | StringIndexOutOfBoundsException | ParseException ex) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            throw new DukeException(\"Task description should be of format \\\"context /prep dd/MM/yyyy HHmm\\\"\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        if (tasks.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            System.out.println(format(\"Now you have 1 task in the list.\"));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            System.out.println(format(\"Now you have \" + tasks.size() + \" tasks in the list.\"));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        formatPrint(\"Cannot load files\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public void showDukeException(DukeException ex) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        formatPrint(ex.getMessage());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public void showParseError() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        formatPrint(\"Task description should be of format \\\"context /prep dd/MM/yyyy HHmm\\\"\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 120
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public void reprTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        Event event \u003d new Event(\"project meeting /at 6/8/2019 2015\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            assertEquals(\"[E][✘] project meeting (at: Tue Aug 06 20:15:00 SGT 2019)\", event.repr());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 18
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public void reprTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        Todo todo \u003d new Todo(\"return books\", true);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        assertEquals(\"[T][✓] return books\", todo.repr());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public void doneTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        Todo todo \u003d new Todo(\"return books\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        assertEquals(\"  [T][✓] return books\", todo.done());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 17
    }
  },
  {
    "path": "src/test/java/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public void printTest() throws Exception {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        ui.showLoadingError();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        String expectedOutput  \u003d \"    ____________________________________________________________\\r\\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                \"     Cannot load files\\r\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                \"    ____________________________________________________________\\r\\n\" ;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        // Do the actual assertion."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        assertEquals(expectedOutput, outContent.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 25
    }
  },
  {
    "path": "tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "T@1@read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": "D@1@return book /by 6/6/2019 0000"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "T@0@join sports club"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": "T@0@borrow book"
      }
    ],
    "authorContributionMap": {
      "Seris370": 4
    }
  },
  {
    "path": "text-ui-test/Expected.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "       [T][✘] read book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Now you have 1 task in the list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": "       [D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "       [E][✘] project meeting (at: Aug 6th 2-4 pm)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Seris370"
        },
        "content": "       [D][✓] return book (by: June 6th)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Task number out of range."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Seris370"
        },
        "content": "       [T][✘] join sports club"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Task number out of range."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Seris370"
        },
        "content": "       [T][✘] borrow book"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Seris370"
        },
        "content": "       [T][✓] read book"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Seris370"
        },
        "content": "       1.[T][✓] read book"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Seris370"
        },
        "content": "       2.[D][✓] return book (by: June 6th)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Seris370"
        },
        "content": "       3.[E][✘] project meeting (at: Aug 6th 2-4 pm)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Seris370"
        },
        "content": "       4.[T][✘] join sports club"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Seris370"
        },
        "content": "       5.[T][✘] borrow book"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Noted. I\u0027ve removed this task: "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Seris370"
        },
        "content": "       [E][✘] project meeting (at: Aug 6th 2-4 pm)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "Seris370": 55
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": "deadline return book /by 6/6/2019 0000"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "event project meeting /at 6/8/2019 2015"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Seris370": 12
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Task.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Todo.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Event.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Deadline.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\DukeException.java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Seris370"
        },
        "content": ")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Seris370"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Seris370"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Seris370"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Seris370"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Seris370"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Seris370": 26
    }
  }
]
