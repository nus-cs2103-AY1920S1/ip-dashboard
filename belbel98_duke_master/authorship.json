[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "belbel98"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "belbel98"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * Creates a Deadline object, which is also a Task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * @param desc a description of the Deadline Task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * @param date the date of the Deadline which is to be done by."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    public Deadline(String desc, String date) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "belbel98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * Returns a string representation of a Deadline object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * @return String Returns a string representation of a Deadline object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        String d \u003d String.format(\"[D][%s]%s(by:%s)\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                    this.getStatusIcon(), this.description, this.date);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        return d;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "belbel98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "belbel98": 23
    }
  },
  {
    "path": "src/main/java/DeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "belbel98"
        },
        "content": "public class DeadlineException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    private static String _noDesc \u003d \" OOPS!!! The description of a deadline cannot be empty.\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    private static String _noDate \u003d \" OOPS!!! The date of a deadline cannot be empty.\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    private static String _either \u003d \" OOPS!!! The description or date of an event cannot be empty.\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    private String _error;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    private int _type; // 1 \u003d empty desc, 2 \u003d no date, 3 \u003d either"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "belbel98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * Constructs a EventException object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * @param msg the message linked to the exception."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * @param type the type of error that is to be handled in this class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    public DeadlineException(String msg, int type) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        this._error \u003d msg;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        this._type \u003d type;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "belbel98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * Gets the error message tied to the exception found."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * @return String Returns a string of error message for the exception"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * found in the Deadline object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        if (this._type \u003d\u003d 1) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "belbel98"
        },
        "content": "            return _noDesc;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        } else if (this._type \u003d\u003d 2){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "belbel98"
        },
        "content": "            return _noDate;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "belbel98"
        },
        "content": "            return _either;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "belbel98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "belbel98": 32
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "belbel98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "belbel98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "belbel98"
        },
        "content": "import java.lang.StringBuilder;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "belbel98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "belbel98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "belbel98"
        },
        "content": " * \u003ch1\u003eDuke\u003c/h1\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "belbel98"
        },
        "content": " * The Duke program allows users to manage and organise their to-do, deadlines, and events"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "belbel98"
        },
        "content": " * all in one application. Users can add their tasks, marking them as done, list the tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "belbel98"
        },
        "content": " * they have, and even delete them after they are done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "belbel98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "belbel98"
        },
        "content": "public class Duke { // handles all input and output"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    final static String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "belbel98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    final static String line \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "belbel98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    final static ArrayList\u003cTask\u003e _task \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "belbel98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * Greets the users, and asks users what they want Duke to do."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * @return String Returns a String of Greetings."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    public static String intro() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        String intro \u003d String.format(\"%s%n%s%n Hello! I\u0027m Duke%n What can I do for you?%n%s%n\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                        line, logo, line);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        return intro;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "belbel98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * Lists out all the tasks the user has added, be it ToDo, Deadlines or Events,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * in the order of input."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * @return String Returns a Strings of all Tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    public static String list() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        StringBuilder s \u003d new StringBuilder(line);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        s.append(System.getProperty(\"line.separator\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        s.append(\" Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d _task.size(); i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "belbel98"
        },
        "content": "            s.append(System.getProperty(\"line.separator\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "belbel98"
        },
        "content": "            s.append(\" \").append(i).append(\".\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "belbel98"
        },
        "content": "            Task t \u003d _task.get(i - 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "belbel98"
        },
        "content": "            s.append(t.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        s.append(System.getProperty(\"line.separator\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        s.append(line);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        s.append(System.getProperty(\"line.separator\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        return s.toString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "belbel98"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * Bids the user GoodBye after the user is done using Duke."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * @return String Returns a string of farewell words."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    public static String bye() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        String bye \u003d String.format(\"%s%n GoodBye! Hope to see you again soon!%n%s%n\","
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                        line, line);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        return bye;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "belbel98"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * Adds a new Task to the list of tasks, and informs the user of the task added."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * @param t The Task to be added, which can be a ToDo, Deadline, or Event."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * @return String Returns a String of information notifying the user of the added task."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    public static String newTask(Task t) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        _task.add(t);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        String added \u003d String.format(\"%s%n Got it! I\u0027ve added this task:\" +"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                        \"%n   %s%n Now you have %d task in the list.%n%s%n\","
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                        line, t.toString(), _task.size(), line);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        return added;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "belbel98"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * Marks a Task as done, and notifies the user of the task marked as done."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * @param n The task number, in the order of input."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * @return String Returns a string to inform user of the task marked as done."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    public static String done(int n) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        Task t \u003d _task.get(n - 1);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        t.markAsDone();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        String done \u003d String.format(\"%s%n Nice! I\u0027ve marked this task as done:%n [%s] %s%n\","
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                        line, t.getStatusIcon(), t.getDesc(), line);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        return done;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "belbel98"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * Deletes a given Task from the list of all Tasks, then notifies the user of the"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * Task removed."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * @param n The task number, in the order of input."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * @return String Returns a string to inform user of the task removed from the list."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    public static String delete(int n) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        Task t \u003d _task.get(n - 1);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        _task.remove(n - 1);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        String del \u003d String.format(\"%s%n Noted. I\u0027ve removed this task:%n   %s%n\" +"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                        \"Now you have %d tasks in the list.%n%s%n\","
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                        line, t.toString(), _task.size(), line);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        return del;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "belbel98"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * This main method handles all input and outputs which the Duke program uses."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * @param args Unused."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    public static void main(String[] args) { // handles all input and output"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        System.out.println(intro());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "belbel98"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "belbel98"
        },
        "content": "            String cmdWord \u003d sc.next(); // extract first only"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "belbel98"
        },
        "content": "            String cmdLine \u003d sc.nextLine(); // extract the rest of the line"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "belbel98"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "belbel98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                switch (cmdWord) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                    System.out.println(list());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                    System.out.println(bye());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                    int taskNo \u003d Integer.parseInt(cmdLine.substring(1));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                    System.out.println(done(taskNo));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                    int taskNum \u003d Integer.parseInt(cmdLine.substring(1));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                    System.out.println(delete(taskNum));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                    if (cmdLine.isEmpty()) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                        throw new ToDoException(cmdLine);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                        ToDo td \u003d new ToDo(cmdLine);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                        System.out.println(newTask(td));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                    if (cmdLine.isEmpty()) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                        throw new DeadlineException(cmdLine, 3);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                    } else if (!cmdLine.contains(\"/by\")) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                        throw new DeadlineException(cmdLine, 1);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                        String[] cmdSplit \u003d cmdLine.split(\"/by\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                        if (cmdSplit.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                            throw new DeadlineException(cmdLine, 3);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                        } else if (cmdSplit[0].equals(\" \")) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                            throw new DeadlineException(cmdLine, 2);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                            Deadline dl \u003d new Deadline(cmdSplit[0], cmdSplit[1]);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                            System.out.println(newTask(dl));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                    if (cmdLine.isEmpty()) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                        throw new EventException(cmdLine, 3);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                    } else if (!cmdLine.contains(\"/at\")) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                        throw new EventException(cmdLine, 1);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                        String[] cmdSplitt \u003d cmdLine.split(\"/at\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                        if (cmdSplitt.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                            throw new EventException(cmdLine, 3);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                        } else if (cmdSplitt[0].equals(\" \")) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                            throw new EventException(cmdLine, 2);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                            Event e \u003d new Event(cmdSplitt[0], cmdSplitt[1]);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                            System.out.println(newTask(e));"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                default: // if it is not any of the above commands"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                    throw new DukeException(cmdWord + cmdLine);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "belbel98"
        },
        "content": "            } catch(DukeException e) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "belbel98"
        },
        "content": "            } catch(ToDoException e) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "belbel98"
        },
        "content": "            } catch(DeadlineException e) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "belbel98"
        },
        "content": "            } catch(EventException e) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "belbel98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "belbel98": 190,
      "-": 6
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "belbel98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "belbel98"
        },
        "content": " * Handles any command that is not understandable by Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "belbel98"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "belbel98"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    private static String _message \u003d \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    private String _error;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "belbel98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * Constructs a DukeException object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * @param msg the message linked to the exception."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        this._error \u003d msg;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "belbel98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * Gets the error message tied to the exception found."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * @return String Returns a string of error message for any"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * unrecognisable command for Duke."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        return this._message;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "belbel98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "belbel98": 24
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "belbel98"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "belbel98"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * Creates an Event object, which is also a Task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * @param desc a description of the Event Task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * @param date the date the Event will be held on."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    public Event(String desc, String date) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "belbel98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * Returns a string representation of a Event object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * @return String Returns a string representation of a Event object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        String e \u003d String.format(\"[E][%s]%s(at:%s)\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                this.getStatusIcon(), this.description, this.date);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        return e;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "belbel98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "belbel98": 23
    }
  },
  {
    "path": "src/main/java/EventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "belbel98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "belbel98"
        },
        "content": " * Handles exception found in the Event object."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "belbel98"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "belbel98"
        },
        "content": "public class EventException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    private static String _noDesc \u003d \" OOPS!!! The description of an event cannot be empty.\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    private static String _noDate \u003d \" OOPS!!! The date of an event cannot be empty.\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    private static String _either \u003d \" OOPS!!! The description or date of an event cannot be empty.\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    private String _error;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    private int _type; // 1 \u003d empty desc, 2 \u003d no date, 3 \u003d either"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "belbel98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * Constructs a EventException object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * @param msg the message linked to the exception."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * @param type the type of error that is to be handled in this class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    public EventException(String msg, int type) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        this._error \u003d msg;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        this._type \u003d type;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "belbel98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * Gets the error message tied to the exception found."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * @return String Returns a string of error message for the exception"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * found in the Event object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        if (this._type \u003d\u003d 1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "belbel98"
        },
        "content": "            return _noDesc;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        } else if (this._type \u003d\u003d 2){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "belbel98"
        },
        "content": "            return _noDate;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "belbel98"
        },
        "content": "            return _either;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "belbel98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "belbel98": 35
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "belbel98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "belbel98"
        },
        "content": " * Task is an abstract class that handles its conctrete subclasses,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "belbel98"
        },
        "content": " * ToDo, Deadline, and Event."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "belbel98"
        },
        "content": " *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "belbel98"
        },
        "content": " * A Task can have a status which can be marked as done, a method to"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "belbel98"
        },
        "content": " * get its status icon and description, as well as its String representation."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "belbel98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "belbel98"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "belbel98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * Constructs a Task object (which cannot be initialised on its own)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * @param description a Description of the Task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "belbel98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * Gets the status icon of the Task, of whether it has been marked"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * as done or not."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * @return Returns a \"O\" representing a Task that is marked done,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * and a \"X\" if a Task is not marked as done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    public final String getStatusIcon() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        return (isDone ? \"O\" : \"X\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "belbel98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * Marks the Task as done."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    public final void markAsDone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "belbel98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * Gets the Description of the Task Object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * @return String Returns a description of the current Task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    public final String getDesc() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "belbel98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * Returns a string representation of the Task object"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * @return String Returns a String representation of the Task object."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "belbel98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "belbel98": 52
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "belbel98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "belbel98"
        },
        "content": " * The ToDo class handles all Todo Tasks,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "belbel98"
        },
        "content": " * which usually includes a description of the ToDo task."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "belbel98"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "belbel98"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "belbel98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * Creates a ToDo object which is also a Task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * @param desc Description of the ToDo Task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    public ToDo(String desc) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "belbel98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * Returns a string representation of a ToDo object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * @return String Returns a string representation of a ToDo object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        String t \u003d String.format(\"[T][%s]%s\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "belbel98"
        },
        "content": "                this.getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "belbel98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "belbel98": 24
    }
  },
  {
    "path": "src/main/java/ToDoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "belbel98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "belbel98"
        },
        "content": " * Handles any exception found in the Task class."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "belbel98"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "belbel98"
        },
        "content": "public class ToDoException extends Exception{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    private static String _noDesc \u003d \" OOPS!!! The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    private String _error;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "belbel98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * Constructs a ToDoException object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * @param msg the message linked to the exception."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    public ToDoException(String msg) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        this._error \u003d msg;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "belbel98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * Gets the error message tied to the exception found."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * @return String Returns a string of error message for the exception"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     * found in the ToDo object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "belbel98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "belbel98"
        },
        "content": "        return _noDesc;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "belbel98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "belbel98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "belbel98": 24
    }
  }
]
