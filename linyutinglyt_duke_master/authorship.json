[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "version \u00270.2\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "run {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.2\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "test {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    archiveVersion \u003d \"0.2\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 36,
      "-": 14
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "### Feature 1 "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "Adding a **Task** to your list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "* A todo Task : No date involved"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "* A deadline Task : Which has to be done *by* a certain date"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "* An event Task: : Which has to done *at* a certain date"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "### Feature 2"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "Deleting a **Task** from your list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "### Feature 3"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "Marking a **Task** as done"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "### Feature 4"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "Displaying the list of **all Tasks** you have"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "### Feature 5"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "Postponing a **Task**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "### Feature 6"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "Find a **Task** using *keywords* "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "### `todo` - adding a todo to the list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "adds a todo without any date."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "`todo cycle`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\t[T][✘] cycle"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\tNow you have 1 task in the list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "-----"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "### `deadline` - adding a deadline to the list"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "adds a deadline and the date that it should done by"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "`deadline drop CS /by 30/09/2019 2359`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\t[D][✘] drop CS (by 30/09/2019 2359)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\tNow you have 2 tasks in the list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "-----"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "### `event` - adding an event to the list"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "adds an event and the date that it is at"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "`event McDonald\u0027s interview /at 1/10/2019 1300`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\t[E][✘] McDonald\u0027s interview (at: 1/10/2019 1300)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\tNow you have 3 tasks in the list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "-----"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "### \u0027list\u0027 - list all your tasks"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "show the list of tasks and their status"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\tHere are the tasks in your list:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\t1. [T][✘] cycle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\t2. [D][✘] drop CS (by 30/09/2019 2359)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\t3. [E][✘] McDonald\u0027s interview (at: 1/10/2019 1300)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "-----"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "### \u0027done\u0027 - mark you task as done"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "mark a task as completed on your list, using its index."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "`done 2`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\tNice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\t[D][✔] drop CS (by 30/09/2019 2359)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "-----"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "### \u0027postpone\u0027 - change the date of your task"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "change the date of your deadline or event on the list, using its index."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "`postpone 3 2/10/2019 1000`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\tNoted. I\u0027ve postponed this task:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\t[E][✘] McDonald\u0027s interview (at: 2/10/2019 1000)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "-----"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "### \u0027delete\u0027 - delete a task"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "delete a task from the list, using its index"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\tNoted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\t[T][✘] cycle"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "-----"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "### `find` - find a task"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "find a task using keywords. A list of tasks containing the keywords will be displayed."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "`find CS`"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\tHere are the matching tasks in the list:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\t1. [D][✘] drop CS (by 30/09/2019 2359)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "-----"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "### `bye` - exit the program"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "exit and close the program"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\tBye. Hope to see you again soon!"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "-----"
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 135,
      "-": 23
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "E 0     bla bla bla@23/12/1987 2312"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "D 1     bla bla@12/12/2012 1232"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "E 1    ks@12/12/2012 2312"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "T 0   yoyooyo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "E 0 yoyo@12/12/2012 2312"
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 5
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "abstract class Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * constructor."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param tasks is the list of tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param ui is the UI class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param storage is the Storage class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @throws DukeException when input is different from required."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @throws IOException when input is different from required."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException, ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * whether is it an exit command"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @return true when it is an exit command, false otherwise."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return (this instanceof ExitCommand);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "class AddCommand extends Command {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private Task t;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * constructor."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param t is the task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    AddCommand(Task t) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this.t \u003d t;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * add task and print out information."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param tasks is the list of tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param ui is the UI class."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param storage is the Storage class."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @throws IOException when input is different from required."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        tasks.addTask(t);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        storage.save();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        t + \"\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        + \"Now you have \" + tasks.getSize() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * constructor"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param index to know which position to delete."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    DeleteCommand(int index) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        assert index \u003e 0 : \"index of task cannot be negative\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * delete task and print out information."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param tasks is the list of tasks."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param ui is the UI class."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param storage is the Storage class."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @throws DukeException when input is different from required."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @throws IOException when input is different from required."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        if (index \u003e\u003d tasks.getSize()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            throw new NoTaskException();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        Task t \u003d tasks.getTask(index);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        tasks.deleteTask(index);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        storage.save();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return \"Noted. I\u0027ve removed this task:\\n\" +"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        t + \"\\n\" +"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        \"Now you have \"  + tasks.getSize() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "class ExitCommand extends Command {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * exit the bot and prints good bye message."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param tasks is the list of tasks."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param ui is the UI class."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param storage is the Storage class."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "class ListCommand extends Command {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * print out the list of tasks."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param tasks is the list of tasks."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param ui is the UI class."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param storage is the Storage class."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        String print \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        print \u003d print + tasks.printList();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return print;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "class DoneCommand extends Command {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    DoneCommand(int index) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        assert index \u003e 0 : \"index of task cannot be negative\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * mark a task as done and print out the information."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param tasks is the list of tasks."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param ui is the UI class."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param storage is the Storage class."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @throws DukeException when input is different from required."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @throws IOException when input is different from required."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        if (index \u003e\u003d tasks.getSize()) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            throw new NoTaskException();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        String print \u003d \"\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        Task t \u003d tasks.getTask(index);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        t.markAsDone();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        storage.save();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done: \\n\" + t;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "class FindCommand extends Command {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    FindCommand(String keyword) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * prints out the list of tasks with the keyword"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param tasks is the list of tasks."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param ui is the UI class."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param storage is the Storage class."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return \"Here are the matching tasks in your list:\" +"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        tasks.printListWithKeyword(keyword);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "class PostponeCommand extends Command {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * constructor."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param index for the task to postpone to."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param time for the task to postpone to."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    PostponeCommand(int index, String time) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        assert index \u003e 0 : \"index of task cannot be negative\";"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * postpone the task."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param tasks   is the list of tasks."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param ui      is the UI class."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param storage is the Storage class."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @throws DukeException when input is different from required."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @throws IOException   when input is different from required."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException, ParseException {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        if (index \u003e\u003d tasks.getSize()) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            throw new NoTaskException();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        Task t \u003d tasks.getTask(index);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        t.postpone(time);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        storage.save();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return \"Noted. I\u0027ve postponed this task:\\n\" + t;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 197
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private Date by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * constructor."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param description of deadline."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param by is the date and time of the deadline."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @throws ParseException when format of date and time is different from required."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    Deadline(String description, String by) throws ParseException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this.by \u003d Duke.formatter.parse(by);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * date and time."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @return a string showing the date and time of deadline."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return Duke.formatter.format(by);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    String getStoredForm() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        String name \u003d this.getDescription();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        int status \u003d this.isDone()? 1 : 0;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return \"D \" + status + \" \" + name + \"@\" + Duke.formatter.format(by) + \"\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * postpone time of the event."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param time is when the task is postponed to."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    void postpone(String time) throws ParseException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this.by \u003d Duke.formatter.parse(time);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + Duke.formatter.format(by) + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 49
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 83
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    static SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/user.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/duke.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    // Constructor needed for Application to launch."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public Duke() throws IOException, ParseException, InvalidTaskException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this(\"./duke.txt\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * constructor."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param filePath of the file"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @throws IOException when input is different from required."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @throws ParseException when input is different from required."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private Duke(String filePath) throws IOException, ParseException, InvalidTaskException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        File f \u003d new File(\"duke.txt\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        if(!f.exists()){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            f.createNewFile();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * runs the bot and process inputs from users."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @throws ParseException if format of date is not the same as required."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @throws IOException when input is different from required."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private void run() throws ParseException, IOException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        scene \u003d new Scene(mainLayout); // Setting the scene to be our Label"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        stage.setScene(scene); // Setting the stage to show our screen"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        stage.show(); // Render the stage."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                handleUserInput();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        });"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                handleUserInput();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        });"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private Node getDialogLabel(String text) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public static void main(String[] args) throws IOException, ParseException, InvalidTaskException {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        new Duke(\"./duke.txt\").run();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private void handleUserInput() throws ParseException, DukeException, IOException {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                new DialogBox(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                new DialogBox(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        );"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    String getResponse(String input) throws ParseException, DukeException, IOException {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return Parser.parse(input).execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 181,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return toString();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "class EmptyCommandException extends DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    EmptyCommandException(String type) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        if (this.type.equals(\"event\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            return \" ☹ OOPS!!! The description of an event cannot be empty.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            return \" ☹ OOPS!!! The description of a \" + this.type + \" cannot be empty.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "class InvalidTaskException extends DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return \" ☹ OOPS!!! I\u0027m sorry, there is no such type of task :-(\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "class UnknownCommandExeption extends DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return \" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "class NoDateException extends DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    NoDateException(String type) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return \" ☹ OOPS!!! The \" + this.type + \" must have a date.\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "class NoTaskException extends DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return \" ☹ OOPS!!! The task does not exist.\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "class NoPostponeException extends DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return \" ☹ OOPS!!! The task has no date and cannot be postponed.\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 61
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * An event task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private Date at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * constructor."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param description of task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param at is the date and time of task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @throws ParseException when input format is different from required."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    Event(String description, String at) throws ParseException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this.at \u003d Duke.formatter.parse(at);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * get the date and time of the event."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @return a string describing the date and time."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    String getAt() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return Duke.formatter.format(at);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    String getStoredForm() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        String name \u003d this.getDescription();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        int status \u003d this.isDone()? 1 : 0;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return \"E \" + status + \" \" + name + \"@\" + Duke.formatter.format(at) + \"\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * postpone time of the event."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param time is when the task is postponed to."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    void postpone(String time) throws ParseException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this.at \u003d Duke.formatter.parse(time);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + Duke.formatter.format(at) + \")\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 50
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public Main() throws IOException, ParseException, InvalidTaskException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 33
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/user.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/duke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private void handleUserInput() throws ParseException, IOException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        String response;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            response \u003d e.toString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        );"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 58
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * parse the statement by the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param fullCommand input by user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @return a command"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @throws DukeException when input does not follow required format."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @throws ParseException when input format is different from required."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    static Command parse(String fullCommand) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        Scanner sc \u003d new Scanner(fullCommand);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        String command \u003d sc.next();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        assert sc.hasNext(): \"Command cannot be empty\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        switch(command) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        case \"done\": {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            if (!sc.hasNextInt()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                throw new NoTaskException();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            int index \u003d sc.nextInt() - 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            return new DoneCommand(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        case \"delete\": {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            if (!sc.hasNextInt()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                throw new NoTaskException();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            int index \u003d sc.nextInt() - 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            return new DeleteCommand(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        case \"postpone\": {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            if (!sc.hasNextInt()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                throw new NoTaskException();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            int index \u003d sc.nextInt() - 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            if (!sc.hasNext()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                throw new NoDateException(\"postponement\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            String date \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            return new PostponeCommand(index, date);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            if (!sc.hasNext()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                throw new NoTaskException();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            return new FindCommand(sc.nextLine().trim());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            Task t;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            String words \u003d \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            boolean emptyCommand \u003d !sc.hasNext();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            if (!emptyCommand) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                words \u003d sc.nextLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            case \"todo\": {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                if (emptyCommand) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                    throw new EmptyCommandException(\"todo\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                t \u003d new Todo(words.trim());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            case \"event\": {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                if (emptyCommand) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                    throw new EmptyCommandException(\"event\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                String[] details \u003d words.split(\" /at \");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                    throw new NoDateException(\"event\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                t \u003d new Event(details[0].trim(), details[1].trim());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            case \"deadline\": {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                if (emptyCommand) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                    throw new EmptyCommandException(\"deadline\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                String[] details \u003d words.split(\" /by \");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                    throw new NoDateException(\"deadline\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                t \u003d new Deadline(details[0].trim(), details[1].trim());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                throw new UnknownCommandExeption();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            return new AddCommand(t);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 101
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * handles then loading of hard-disk data and saving of the data when task list is updated."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * constructor, takes in path of the file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param filepath of the file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    Storage(String filepath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * loads the data from hard-disk file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @return an array list of task to be passed into TaskList."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @throws FileNotFoundException when input format is different from required."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @throws ParseException when input format is different from required."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    ArrayList\u003cTask\u003e load() throws FileNotFoundException, ParseException, InvalidTaskException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        File f \u003d new File(filepath); // create a File for the given file path"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        Scanner sc \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            Task t;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            String type \u003d sc.next();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            int done \u003d sc.nextInt();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            String[] nameAndDate \u003d sc.nextLine().split(\"@\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            switch(type) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                    t \u003d new Todo(nameAndDate[0]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                    t \u003d new Deadline(nameAndDate[0], nameAndDate[1]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                    t \u003d new Event(nameAndDate[0], nameAndDate[1]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                    throw new InvalidTaskException();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            if (done \u003d\u003d 1) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                t.markAsDone();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            taskList.add(t);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * update the file when task list is changed."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @throws IOException when input format is different from required."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     void save() throws IOException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filepath);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            fw.write(task.getStoredForm());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 76
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param description of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * get the stored form to store in file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @return the string representation of stored form of task in file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    abstract String getStoredForm();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * postpone time of the event."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param time is when the task is postponed to."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    abstract void postpone(String time) throws ParseException, NoPostponeException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * return a symbol showing when the task is done or not."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @return a tick of X symbol."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    String getStatusIcon() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * mark the task as done."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    void markAsDone() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * how the task is described."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @return description of the task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    String getDescription() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * tells whether task is done or not."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @return true or false of whether the task is done"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    boolean isDone() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 64
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * the list of all tasks."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * constructor."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param taskList that is returned from storage."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * how many tasks in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @return number of tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    int getSize() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * get the task at (index+1)th position."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param index of task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @return the task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    Task getTask(int index) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * add a task to the list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param task to be added."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    void addTask(Task task) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * delete a task from list at (index+1)th position"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param index of task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    void deleteTask(int index) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * print the whole list of tasks"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    String printList() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        String print \u003d \"\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        for (Task t: taskList) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            print \u003d print + counter + \".\" + t + \"\\n\" ;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return print;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    String printListWithKeyword(String keyword) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        String print \u003d \"\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        for (Task t: taskList) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            if (t.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                print \u003d print + counter + \".\" + t + \"\\n\" ;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return print;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 75
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * constructor."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param description of task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    String getStoredForm() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        String name \u003d this.getDescription();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        int status \u003d this.isDone()? 1 : 0;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return \"T \" + status + \" \" + name + \"\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * postpone time of the event."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param time is when the task is postponed to."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    void postpone(String time) throws NoPostponeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        throw new NoPostponeException();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 32
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * interacting with the user. Scanning input from user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * constructor."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    Ui() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * prints welcome message to user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    void showWelcome() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                \"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                \"What can I do for you?\\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * scans the whole line of command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @return the line of command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    String readCommand() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * prints a line."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    void showLine() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * print the error"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     * @param message is the error message."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    void showError(String message) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        System.out.println(\"\" + message);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 48
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" depthTest\u003d\"DISABLE\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            \u003cInsets right\u003d\"10.0\" left\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "         \u003c/padding\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 19
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\"  prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 19
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    void getBy() throws ParseException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        Deadline d \u003d new Deadline(\"yoyo\", \"25/02/1998 1600\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        assertEquals(\"25/02/1998 1600\", d.getBy());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 13
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "class DukeTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    void dummyTest(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 10
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "class TodoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    void getDescription() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        Todo t \u003d new Todo(\"yoyo watermelon\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        assertEquals(\"yoyo watermelon\", t.getDescription());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 11
    }
  }
]
