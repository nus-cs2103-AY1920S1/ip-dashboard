[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "     1. [T] [✘] borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "     2. [T] [✘] return book"
      }
    ],
    "authorContributionMap": {
      "Yoshi275": 2
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "    static String listString \u003d \"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "    static ArrayList\u003cTask\u003e listArr \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "    static String INDENT \u003d \"    \";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        int listSize \u003d 0;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        int listPointer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        printIndentedString(\"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                INDENT + \" \" + \"What can I do for you?\", INDENT);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        String[] inputArr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        while (!inputArr[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "            if (inputArr[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                printIndentedString(\"Here are the tasks in your list:\\n\" + listString, INDENT);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "            } else if (inputArr[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                listPointer \u003d Integer.parseInt(inputArr[1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                listArr.get(listPointer - 1).markAsDone();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                printIndentedString(\"Nice! I\u0027ve marked this task as done: \\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                        + INDENT + \"   \" + listArr.get(listPointer - 1), INDENT);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                updateTodoString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                updateTodoFile(listString);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "            } else if(inputArr[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                listPointer \u003d Integer.parseInt(inputArr[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                Task deletedTask \u003d listArr.get(listPointer - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                listArr.remove(listPointer - 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                printIndentedString(\"Noted. I\u0027ve removed this task: \\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                        + INDENT + \"   \" + deletedTask + \"\\n\" + INDENT +"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                        \"Now you have \" + listArr.size() + \" tasks in the list.\", INDENT);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                updateTodoString();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                updateTodoFile(listString);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "            } else if(inputArr[0].equals(\"todo\") || inputArr[0].equals(\"deadline\") || inputArr[0].equals(\"event\")){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                String befTaskAddMessage \u003d \"Got it. I\u0027ve added this task: \\n\" + INDENT + \"   \";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                String aftTaskAddMessage \u003d \"Now you have \" + (listSize + 1) + \" tasks in the list.\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                if(inputArr.length \u003e 1) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                    if(inputArr[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                            listArr.add(new Task(inputArr[1], \"todo\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                            printIndentedString(befTaskAddMessage + listArr.get(listSize) + \"\\n \" + INDENT + aftTaskAddMessage, INDENT);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                            listSize++;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                            updateTodoString();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                            updateTodoFile(listString);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                    } else if(inputArr[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                            String deadline \u003d input.split(\" /by \")[1];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                            LocalDateTime deadlineByDateTime \u003d LocalDateTime.parse(deadline, formatter);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                            listArr.add(new Task(inputArr[1].split(\" /by \")[0], \"deadline\","
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                                    deadlineByDateTime));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                            printIndentedString(befTaskAddMessage + listArr.get(listSize) + \"\\n \" + INDENT"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                                    + aftTaskAddMessage, INDENT);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                            listSize++;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                            updateTodoString();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                            updateTodoFile(listString);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                        } catch(Exception ex) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                            printIndentedString(\"☹ OOPS!!! Deadlines require a specific datetime after /by, \""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                                            + \"in format \u0027dd/MM/yyyy HHmm\u0027\","
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                                    INDENT);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                    } else if(inputArr[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                            String eventDateTime \u003d input.split(\" /at \")[1];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                            LocalDateTime eventDateTimeByDateTime \u003d LocalDateTime.parse(eventDateTime, formatter);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                            listArr.add(new Task(inputArr[1].split(\" /at \")[0], \"event\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                                    , eventDateTimeByDateTime));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                            printIndentedString(befTaskAddMessage + listArr.get(listSize) + \"\\n \" + INDENT"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                                    + aftTaskAddMessage, INDENT);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                            listSize++;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                            updateTodoString();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                            updateTodoFile(listString);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                        } catch(Exception ex) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                            printIndentedString(\"☹ OOPS!!! Events require a specific datetime after /at, \""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                                            + \"in format \u0027dd/MM/yyyy HHmm\u0027\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                                    , INDENT);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                    printIndentedString(\"☹ OOPS!!! The description of a \" + inputArr[0] + \" cannot be empty.\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                            , INDENT);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                printIndentedString(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", INDENT);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "            inputArr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        printIndentedString(\"Bye. Hope to see you again soon!\", INDENT);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "    public static void printIndentedString(String string, String INDENT) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        System.out.println(INDENT + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        System.out.println(INDENT + \" \" + string);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        System.out.println(INDENT + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "    public static void updateTodoString() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        listString \u003d \"\" + INDENT + \" \";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        for (int i \u003d 0; i \u003c listArr.size(); i++) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "            listString +\u003d (i + 1) + \". \" + listArr.get(i);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "            if (i !\u003d (listArr.size() - 1)) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "                listString +\u003d \u0027\\n\u0027 + INDENT + \u0027 \u0027;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "    public static void updateTodoFile(String todoString) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "            PrintWriter writer \u003d new PrintWriter(\"../../../data/duke.txt\", \"UTF-8\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "            writer.printf(todoString);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "            System.out.println(ex);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yoshi275": 123,
      "-": 5
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "    protected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "    protected DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "    public Task(String description, String taskType) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "    public Task(String description, String taskType, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        if(taskType.equals(\"todo\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "            return \"[T]\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        } else if(taskType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "            return \"[D]\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        } else if(taskType.equals(\"event\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "            return \"[E]\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        return dateTime.format(formatter);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        String stringToPrint \u003d getTaskType() + \" \" + getStatusIcon() + \" \" + getDescription();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        if(taskType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "            return stringToPrint + \" (by: \" + getDateTime() + \")\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        } else if(taskType.equals(\"event\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "            return stringToPrint + \" (at: \" + getDateTime() + \")\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "            return stringToPrint;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yoshi275"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yoshi275": 63
    }
  }
]
