[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    id \"com.github.johnrengelman.shadow\" version \"5.1.0\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    archiveBaseName \u003d \"jermi\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    archiveVersion \u003d \"2.0\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "group \u0027jermi\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    mainClassName \u003d \"Jermi\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "run {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 14,
      "JermyTan": 27
    }
  },
  {
    "path": "src/main/java/Jermi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.Client;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * The Jermi program implements an application that keeps track of the user\u0027s tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * @author Jermy"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * @version v1.0"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * @since 2019-08-25"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class Jermi {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Initialises {@link Client} and runs it."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param args Command-line arguments."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        Client client \u003d Client.initialise();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        client.run(\"data/jermi.txt\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 18,
      "-": 3
    }
  },
  {
    "path": "src/main/java/jermi/Client.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.ExceptionHandler;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.JermiException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * The Client program manages the workflow of the application."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class Client {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** Client object reference. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private static Client client \u003d null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** Ui object reference. */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** Parser object reference. */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** TaskList object reference. */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** Storage object reference. */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** ExceptionHandler object reference. */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private ExceptionHandler exceptionHandler;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Private constructor for class."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Initialises {@link Ui}, {@link Parser}, {@link TaskList} and {@link ExceptionHandler}."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private Client() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.parser \u003d new Parser();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.exceptionHandler \u003d new ExceptionHandler(this.ui);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Initialises {@link Client}."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return New Client object if one has not been initialised before, else existing Client object."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static Client initialise() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        if (client \u003d\u003d null) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            client \u003d new Client();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            client.ui.echo(\"Client has already been initialised.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return client;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Initialises {@link Storage}."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param pathname Pathname of storage file."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return true if Storage has been successfully initialised, else false."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private boolean initialiseStorage(String pathname) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        boolean shouldContinue \u003d false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            this.storage \u003d new Storage(pathname, this.taskList);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            this.ui.greet();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            shouldContinue \u003d true;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        } catch (JermiException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            this.exceptionHandler.handleCheckedExceptions(e);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            this.ui.runFail();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            this.exceptionHandler.handleUncheckedExceptions(e);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            this.ui.runFail();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return shouldContinue;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Runs the client."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param pathname Pathname of storage file."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void run(String pathname) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        boolean shouldContinue \u003d initialiseStorage(pathname);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        while (shouldContinue) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                String inputCommand \u003d this.ui.readCommand();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                String inputDetails \u003d this.ui.readDetails();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                Command command \u003d this.parser.parse(inputCommand, inputDetails);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                command.execute(this.taskList, this.ui, this.storage);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                shouldContinue \u003d !command.shouldExit();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            } catch (JermiException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                this.exceptionHandler.handleCheckedExceptions(e);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                shouldContinue \u003d true;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                this.exceptionHandler.handleUncheckedExceptions(e);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                shouldContinue \u003d false;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 100
    }
  },
  {
    "path": "src/main/java/jermi/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.JermiException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.task.ToDo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.type.TaskType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * A representation of the command for adding task to the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** Task type of the task to be added. */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private TaskType taskType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** Description of the task to be added. */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param taskType Task type of the task to be added."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param description Description of the task to be added."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public AddCommand(TaskType taskType, String description) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Creates the task according to the task type and the description of the task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Created task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private Task createTask() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        switch (this.taskType) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        case TO_DO:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            task \u003d new ToDo(this.description);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            String[] activityAndDateTime \u003d this.description.split(\"/\", 2);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            String activity \u003d activityAndDateTime[0].trim();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            String dateTime \u003d activityAndDateTime[1].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            switch (this.taskType) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                task \u003d new Deadline(activity, dateTime);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                task \u003d new Event(activity, dateTime);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                assert (false);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            assert (false);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param ui UI."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param storage Storage."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @throws JermiException JermiException."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws JermiException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        Task task \u003d this.createTask();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        int numOfTasks \u003d taskList.getSize();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        ui.echo(\"Got it. I\u0027ve added this task:\","
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"  \" + task,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                String.format(\"Now you have %d task%s in the list.\", numOfTasks, numOfTasks \u003d\u003d 1 ? \"\" : \"s\"));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        storage.taskListToFile();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Indicates if the program should exit."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return {@code false}."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public boolean shouldExit() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 96
    }
  },
  {
    "path": "src/main/java/jermi/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.JermiException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * Base class for command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param ui UI."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param storage Storage."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @throws JermiException JermiException."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws JermiException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Indicates if the program should exit."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return {@code true} if should exit, else {@code false}."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public abstract boolean shouldExit();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 29
    }
  },
  {
    "path": "src/main/java/jermi/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.JermiException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * A representation of the command for deleting task from the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** Index of the task to be deleted. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param index Index of the task to be deleted."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @throws JermiException {@link InvalidIndexException}."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public DeleteCommand(String index) throws JermiException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            this.index \u003d Integer.parseInt(index);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param ui UI."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param storage Storage."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @throws JermiException JermiException."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws JermiException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        Task task \u003d taskList.getTask(index);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        int numOfTasks \u003d taskList.getSize();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        ui.echo(\"Noted. I\u0027ve removed this task:\","
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"  \" + task,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                String.format(\"Now you have %d task%s in the list.\", numOfTasks, numOfTasks \u003d\u003d 1 ? \"\" : \"s\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        storage.taskListToFile();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Indicates if the program should exit."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return {@code false}."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public boolean shouldExit() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 61
    }
  },
  {
    "path": "src/main/java/jermi/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.JermiException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * A representation of the command for marking a task as completed in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** Index of the task to be marked as done. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param index Index of the task to be marked as done."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @throws JermiException {@link InvalidIndexException}."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public DoneCommand(String index) throws JermiException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            this.index \u003d Integer.parseInt(index);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param ui UI."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param storage Storage."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @throws JermiException JermiException."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws JermiException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        Task task \u003d taskList.getTask(this.index);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        ui.echo(\"Nice! I\u0027ve marked this task as done:\", \"  \" + task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        storage.taskListToFile();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Indicates if the program should exit."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return {@code false}."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public boolean shouldExit() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 58
    }
  },
  {
    "path": "src/main/java/jermi/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.JermiException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * A representation of the command to exit the program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param ui UI."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param storage Storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @throws JermiException JermiException."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws JermiException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        ui.exit();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Indicates if the program should exit."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return {@code true}."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public boolean shouldExit() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 42
    }
  },
  {
    "path": "src/main/java/jermi/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.JermiException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** Keyword used for finding. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param keyword Keyword used for finding."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param ui UI."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param storage Storage."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @throws JermiException JermiException."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws JermiException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        List\u003cString\u003e tasks \u003d taskList.find(this.keyword);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        for (int index \u003d 1; index \u003c\u003d tasks.size(); index++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            tasks.set(index - 1, index + \".\" + tasks.get(index - 1));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        tasks.add(0, \"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        ui.echo(tasks.toArray(new String[0]));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Indicates if the program should exit."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return {@code false}."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public boolean shouldExit() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 52
    }
  },
  {
    "path": "src/main/java/jermi/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.JermiException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * A representation of the command to list the tasks in the list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param ui UI."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param storage Storage."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @throws JermiException JermiException."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws JermiException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        List\u003cString\u003e tasks \u003d taskList"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                .getList()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                .stream()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                .map(Task::toString)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        for (int index \u003d 1; index \u003c\u003d tasks.size(); index++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            tasks.set(index - 1, index + \".\" + tasks.get(index - 1));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        tasks.add(0, \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        ui.echo(tasks.toArray(new String[0]));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Indicates if the program should exit."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return {@code false}."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public boolean shouldExit() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 56
    }
  },
  {
    "path": "src/main/java/jermi/component/ExceptionHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.component;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.JermiException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * A class that deals with handling exceptions."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class ExceptionHandler {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** UI. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param ui UI."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public ExceptionHandler(Ui ui) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Handles checked exceptions."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param e JermiException."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void handleCheckedExceptions(JermiException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.ui.echo(e.getMessage());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Handles unchecked exceptions."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param e Exception."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void handleUncheckedExceptions(Exception e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 37
    }
  },
  {
    "path": "src/main/java/jermi/component/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.component;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.command.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.JermiException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.type.TaskType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * A class that deals with making sense of the user input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Parses and returns the {@link Command} associated with the user input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param inputCommand User input command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param inputDetails User input details."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Associated command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @throws JermiException All checked exceptions in the Jermi program."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public Command parse(String inputCommand, String inputDetails) throws JermiException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        Command command \u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        switch (inputCommand) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            command \u003d new ListCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            command \u003d new ExitCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            if (inputDetails.isEmpty()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                throw new EmptyDescriptionException(inputCommand);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            switch (inputCommand) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                command \u003d new AddCommand(TaskType.TO_DO, inputDetails);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                command \u003d new AddCommand(TaskType.DEADLINE, inputDetails);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                command \u003d new AddCommand(TaskType.EVENT, inputDetails);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                command \u003d new DoneCommand(inputDetails);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                command \u003d new DeleteCommand(inputDetails);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                command \u003d new FindCommand(inputDetails);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                assert (false);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 79
    }
  },
  {
    "path": "src/main/java/jermi/component/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.component;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.JermiException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.LoadingException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.SavingException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.task.ToDo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * A class that deals with loading tasks from the data file and saving tasks in the data file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** File. */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** Task list. */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Loads tasks from data file upon instantiation."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param pathname Pathname of data file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @throws JermiException {@link LoadingException} or {@link SavingException}."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public Storage(String pathname, TaskList taskList) throws JermiException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.file \u003d new File(pathname);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.fileToTaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Converts saved data in file to {@link Task} objects."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param fileFormat Saved data."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private Task fileFormatToTask(String fileFormat) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        String[] components \u003d fileFormat.split(\"\\\\|\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        switch (components[0]) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            task \u003d new ToDo(components[2], components[1]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            task \u003d new Deadline(components[2], components[3], components[1]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            task \u003d new Event(components[2], components[3], components[1]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            assert (false);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Reads saved data in file and adds it to {@link TaskList}."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @throws JermiException {@link LoadingException}."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private void fileToTaskList() throws JermiException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            List\u003cString\u003e lines \u003d Files.readAllLines(this.file.toPath());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            for (String line : lines) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                this.taskList.add(this.fileFormatToTask(line));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            throw new LoadingException(e.getMessage());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Writes tasks in {@link TaskList} to file."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @throws JermiException {@link SavingException}."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void taskListToFile() throws JermiException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            StringBuilder toWrite \u003d new StringBuilder();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            for (Task task : this.taskList.getList()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                toWrite.append(task.toSaveFormat());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                toWrite.append(\"\\n\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            Files.writeString(this.file.toPath(), toWrite.toString());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            throw new SavingException(e.getMessage());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 97
    }
  },
  {
    "path": "src/main/java/jermi/component/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.component;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * A class to represent a list of tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** List of tasks. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Uses an {@link ArrayList} to store the tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Returns the list containing the tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return List of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Adds task to the list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param task Task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.list.add(task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Returns the number of tasks in the list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Number of tasks in the list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return this.list.size();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Returns the task of the specified index in the list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param index Index (starting from 1) of task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Task of the specified index."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return this.list.get(index - 1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Removes the task of the specified index in the list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param index Index (starting from 1) of task."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void remove(int index) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.list.remove(index - 1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Returns a list of task descriptions containing the keyword."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param keyword Keyword used for finding."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return A list of task descriptions containing the keyword."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public List\u003cString\u003e find(String keyword) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return this.list"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                .stream()"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                .map(Task::toString)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                .filter(task -\u003e task.contains(keyword))"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 82
    }
  },
  {
    "path": "src/main/java/jermi/component/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.component;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * A class that deals with interaction with the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** Keyboard input reader. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Initialises {@link Scanner};"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Formats a message."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param message Message."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Formatted message."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private String formatMessage(String message) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return \"     \" + message + \"\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Reads input command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Command read."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return this.scanner.next();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Reads input details."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Details read."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public String readDetails() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return this.scanner.nextLine().trim();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Prints formatted messages."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param messages Message."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void echo(String... messages) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        String border \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        StringBuilder toEcho \u003d new StringBuilder(border);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        for (String message : messages) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            toEcho.append(formatMessage(message));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        toEcho.append(border);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        System.out.println(toEcho);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Prints welcome message."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        echo(\"Hello! I\u0027m Jermi\", \"What can I do for you?\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Prints exit message."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        echo(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Prints run failure message."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void runFail() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        echo(\"Client has failed to run.\", \"Please resolve the issue above before running again.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 83
    }
  },
  {
    "path": "src/main/java/jermi/exception/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * An exception associated with empty description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class EmptyDescriptionException extends JermiException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param message The cause of the error."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public EmptyDescriptionException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        super(String.format(\"The description of %s cannot be empty.\", message));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 16
    }
  },
  {
    "path": "src/main/java/jermi/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * An exception associated with invalid command given."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class InvalidCommandException extends JermiException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public InvalidCommandException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        super(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 14
    }
  },
  {
    "path": "src/main/java/jermi/exception/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * An exception associated with invalid index given."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class InvalidIndexException extends JermiException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public InvalidIndexException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        super(\"The task index is invalid!\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 14
    }
  },
  {
    "path": "src/main/java/jermi/exception/JermiException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * Base class for the checked exceptions in the Jermi program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public abstract class JermiException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Constructor for class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param message Error message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    JermiException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        super(\"☹ OOPS! \" + message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 16
    }
  },
  {
    "path": "src/main/java/jermi/exception/LoadingException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * An exception associated with error in reading a data file."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class LoadingException extends JermiException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param message The cause of the error."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public LoadingException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        super(\"An error has occurred while loading: \" + message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 16
    }
  },
  {
    "path": "src/main/java/jermi/exception/SavingException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * An exception associated with error in writing contents to a data file."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class SavingException extends JermiException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param message The cause of the error."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public SavingException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        super(\"An error has occurred while saving: \" + message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 16
    }
  },
  {
    "path": "src/main/java/jermi/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * A representation of the deadline task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class Deadline extends TaskWithDateTime {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Creates an uncompleted deadline task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param deadline Deadline of task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this(description, deadline, \"0\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Creates a completed/uncompleted deadline task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param deadline Deadline of task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param isDone \"1\" for completed task, else \"0\"."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public Deadline(String description, String deadline, String isDone) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        super(description, deadline, isDone);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Returns task type code, \"D\"."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return \"D\"."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    String getTypeCode() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Returns a string representation of task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return A string representation of task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return String.format(\"%s (by: %s)\", super.toString(), this.getDateTime());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 51
    }
  },
  {
    "path": "src/main/java/jermi/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * A representation of the event task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class Event extends TaskWithDateTime {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Creates an uncompleted event task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param description Description of event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param dateTime Date and time of event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public Event(String description, String dateTime) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this(description, dateTime, \"0\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Creates a completed/uncompleted event task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param description Description of event."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param dateTime Date and time of event."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param isDone \"1\" for completed event, else \"0\"."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public Event(String description, String dateTime, String isDone) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        super(description, dateTime, isDone);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Returns task type code, \"E\"."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return \"E\"."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    String getTypeCode() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Returns a string representation of task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return A string representation of task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return String.format(\"%s (at: %s)\", super.toString(), this.getDateTime());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 50
    }
  },
  {
    "path": "src/main/java/jermi/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * Base class for task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** Description of the task. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** State of the task: true if completed, else false. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** Constructor for class. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    Task(String description, String isDone) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.isDone \u003d isDone.equals(\"1\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Returns a status icon."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Tick if task is completed, else cross."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return this.isDone ? \"✓\" : \"✘\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Sets status of task to completed."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Returns a task type code."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return \"T\", \"D\" or \"E\" depending on task type."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    abstract String getTypeCode();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Returns a string representation of task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return A string representation of task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return String.format(\"[%s][%s] %s\", this.getTypeCode(), this.getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Converts the task into a string in save format."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return A string in save format."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return String.format(\"%s|%d|%s\", this.getTypeCode(), this.isDone ? 1 : 0, this.description);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 59
    }
  },
  {
    "path": "src/main/java/jermi/task/TaskWithDateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * A representation of task with date and time."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "abstract class TaskWithDateTime extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** Date and time. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private String dateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Constructor for class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param dateTime Date and time of task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param isDone \"1\" for completed task, else \"0\"."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    TaskWithDateTime(String description, String dateTime, String isDone) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            this.dateTime \u003d this.parseStringFormatDateTime(dateTime);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Converts date and time in string format to LocalDateTime format."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param string Date and time in string format."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Date and time in LocalDateTime format."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private LocalDateTime stringToDateTime(String string) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return LocalDateTime.parse(string, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Converts date and time in LocalDateTime format to string format."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param dateTime Date and time in LocalDateTime format."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Date and time in string format."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private String dateTimeToString(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return dateTime.format(DateTimeFormatter.ofPattern(\"d MMMM yyyy, h.mma\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Parses input user\u0027s data and time format."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param stringFormatDateTime Input user\u0027s date and time format."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Parsed date and time format."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private String parseStringFormatDateTime(String stringFormatDateTime) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return this.dateTimeToString(this.stringToDateTime(stringFormatDateTime));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Returns the date and time of the task."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Date and time."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    String getDateTime() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return this.dateTime;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Converts the task into a string in save format."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return A string in save format."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return String.format(\"%s|%s\", super.toSaveFormat(), this.dateTime);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 78
    }
  },
  {
    "path": "src/main/java/jermi/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * A representation of the todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Creates an uncompleted todo task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param description Description of todo."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this(description, \"0\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Creates a completed/uncompleted todo task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param description Description of todo."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param isDone \"1\" for completed task, else \"0\"."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public ToDo(String description, String isDone) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Returns task type code, \"T\"."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return \"T\"."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    String getTypeCode() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 38
    }
  },
  {
    "path": "src/main/java/jermi/type/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.type;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * Available types of task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** todo task. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    TO_DO,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** deadline task. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** event task. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    EVENT;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 13
    }
  },
  {
    "path": "src/test/java/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void instantiation_instantiateUi_uiObject() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertTrue(ui instanceof Ui);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void echo_noString_onlyBorders() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        final PrintStream originalOut \u003d System.out;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        ui.echo();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        String border \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(border + border + \"\\n\", outContent.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        System.setOut(originalOut);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void echo_emptyString_singleBlankLineBetweenBorders() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        final PrintStream originalOut \u003d System.out;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        ui.echo(\"\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        String border \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(border + \"     \\n\" + border + \"\\n\", outContent.toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        System.setOut(originalOut);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 44
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Hello! I\u0027m Jermi"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "       [T][✘] read book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Now you have 1 task in the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "       [D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "       [E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     1.[T][✘] read book"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     2.[D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     3.[E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "       [T][✓] read book"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "       [T][✘] join sports club"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "       [T][✓] join sports club"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "       [T][✘] borrow book"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     1.[T][✓] read book"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     2.[D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     3.[E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     4.[T][✓] join sports club"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     5.[T][✘] borrow book"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "       [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "       [E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Now you have 7 tasks in the list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JermyTan": 77
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 12
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "java -classpath ../bin Jermi \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 34
    }
  }
]
