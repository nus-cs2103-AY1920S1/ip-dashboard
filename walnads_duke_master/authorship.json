[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "walnads"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "walnads"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "walnads"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "walnads"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "walnads"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "walnads"
        },
        "content": "    public Deadline(String description, String by) throws ParseException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "walnads"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "walnads"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "walnads"
        },
        "content": "        this.by \u003d format.parse(by);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "walnads"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "walnads"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "walnads"
        },
        "content": "    public String printString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "walnads"
        },
        "content": "        return String.format(\"D | %d |%s | %s\", isDone ? 1 : 0, description, by);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "walnads"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "walnads"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "walnads"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "walnads"
        },
        "content": "        SimpleDateFormat d \u003d new SimpleDateFormat(\"E, dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "walnads"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + d.format(by) + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "walnads"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "walnads"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "walnads": 25
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "walnads"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "walnads"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "walnads"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "walnads"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "walnads"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "walnads"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "walnads"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "walnads"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "walnads"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "walnads"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "walnads"
        },
        "content": "        ui \u003d new UI();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "walnads"
        },
        "content": "        storage \u003d new Storage(\"C:\\\\Users\\\\User\\\\Documents\\\\duke\\\\data\\\\duke.txt\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "walnads"
        },
        "content": "        taskList \u003d new TaskList(storage);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "walnads"
        },
        "content": "        parser \u003d new Parser(taskList);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "walnads"
        },
        "content": "        ui.show(\"Hello from\\n\" + logo + \"\\n\" + \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "walnads"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "walnads"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "walnads"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "walnads"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "walnads"
        },
        "content": "            String parsedInput \u003d parser.parse(sc.nextLine());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "walnads"
        },
        "content": "            while (!(parsedInput.equals(\"bye\"))) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "walnads"
        },
        "content": "                ui.show(parsedInput);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "walnads"
        },
        "content": "                parsedInput \u003d parser.parse(sc.nextLine());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "walnads"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "walnads"
        },
        "content": "            ui.show(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "walnads"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "walnads"
        },
        "content": "            ui.show(e.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "walnads"
        },
        "content": "            run();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "walnads"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "walnads"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "walnads"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "walnads"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "walnads": 40,
      "-": 8
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "walnads"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "walnads"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "walnads"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "walnads"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "walnads"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "walnads": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "walnads"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "walnads"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "walnads"
        },
        "content": "import java.time.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "walnads"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "walnads"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "walnads"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "walnads"
        },
        "content": "    public Event(String description, String at) throws ParseException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "walnads"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "walnads"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "walnads"
        },
        "content": "        this.at \u003d format.parse(at);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "walnads"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "walnads"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "walnads"
        },
        "content": "    public String printString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "walnads"
        },
        "content": "        return String.format(\"D | %d |%s | %s\", isDone ? 1 : 0, description, at);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "walnads"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "walnads"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "walnads"
        },
        "content": "        SimpleDateFormat d \u003d new SimpleDateFormat(\"E, dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "walnads"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + d.format(at) + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "walnads"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "walnads"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "walnads": 25
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "walnads"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "walnads"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "walnads"
        },
        "content": "    protected TaskList tl;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "walnads"
        },
        "content": "    public Parser(TaskList tl) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "walnads"
        },
        "content": "        this.tl \u003d tl;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "walnads"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "walnads"
        },
        "content": "    public String parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "walnads"
        },
        "content": "        if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "walnads"
        },
        "content": "            return tl.view();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "walnads"
        },
        "content": "        } else if (input.contains(\"done\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "walnads"
        },
        "content": "            int id \u003d Integer.parseInt(input.substring(input.length() - 1));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "walnads"
        },
        "content": "            return tl.markDone(id);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "walnads"
        },
        "content": "        } else if (input.contains(\"todo\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "walnads"
        },
        "content": "            if (input.length() \u003c 6) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "walnads"
        },
        "content": "                throw new DukeException(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "walnads"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "walnads"
        },
        "content": "                Task t \u003d new Todo(input.substring(5));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "walnads"
        },
        "content": "                return tl.add(t);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "walnads"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "walnads"
        },
        "content": "        } else if (input.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "walnads"
        },
        "content": "            if (input.length() \u003c 10) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "walnads"
        },
        "content": "                throw new DukeException(\"\\u2639 OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "walnads"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "walnads"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "walnads"
        },
        "content": "                    String[] temp \u003d input.substring(9).split(\" /by \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "walnads"
        },
        "content": "                    Task t \u003d new Deadline(temp[0], temp[1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "walnads"
        },
        "content": "                    return tl.add(t);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "walnads"
        },
        "content": "                } catch (ParseException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "walnads"
        },
        "content": "                    return \"\\u2639 OOPS!!! Your date is not in dd/MM/yyyy HHmm format (e.g. 2/12/2019 1800)\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "walnads"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "walnads"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "walnads"
        },
        "content": "        } else if (input.contains(\"event\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "walnads"
        },
        "content": "            if (input.length() \u003c 7) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "walnads"
        },
        "content": "                throw new DukeException(\"\\u2639 OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "walnads"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "walnads"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "walnads"
        },
        "content": "                    String[] temp \u003d input.substring(6).split(\" /at \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "walnads"
        },
        "content": "                    Task t \u003d new Event(temp[0], temp[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "walnads"
        },
        "content": "                    return tl.add(t);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "walnads"
        },
        "content": "                } catch (ParseException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "walnads"
        },
        "content": "                    return \"\\u2639 OOPS!!! Your date is not in dd/MM/yyyy HHmm format (e.g. 2/12/2019 1800)\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "walnads"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "walnads"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "walnads"
        },
        "content": "        } else if (input.contains(\"delete\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "walnads"
        },
        "content": "            int id \u003d Integer.parseInt(input.substring(input.length() - 1));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "walnads"
        },
        "content": "            return tl.delete(id -1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "walnads"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "walnads"
        },
        "content": "        return \"bye\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "walnads"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "walnads"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "walnads": 64
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "walnads"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "walnads"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "walnads"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "walnads"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "walnads"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "walnads"
        },
        "content": "    protected FileWriter fw;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "walnads"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "walnads"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "walnads"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "walnads"
        },
        "content": "    public void update(List\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "walnads"
        },
        "content": "        fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "walnads"
        },
        "content": "        String text \u003d \"\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "walnads"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "walnads"
        },
        "content": "            text +\u003d t.printString() + \"\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "walnads"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "walnads"
        },
        "content": "        fw.write(text);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "walnads"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "walnads"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "walnads"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "walnads": 24
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "walnads"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "walnads"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "walnads"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "walnads"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "walnads"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "walnads"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "walnads"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "walnads"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "walnads"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "walnads"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "walnads"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "walnads"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "walnads"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "walnads"
        },
        "content": "    public String printString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "walnads"
        },
        "content": "        return String.format(\"T | %d | %s | %s\", isDone ? 1 : 0, description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "walnads"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "walnads"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "walnads"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "walnads"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "walnads"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "walnads"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "walnads": 26
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "walnads"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "walnads"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "walnads"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "walnads"
        },
        "content": "    protected List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "walnads"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "walnads"
        },
        "content": "    public TaskList(Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "walnads"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "walnads"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "walnads"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "walnads"
        },
        "content": "    private void update() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "walnads"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "walnads"
        },
        "content": "            storage.update(tasks);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "walnads"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "walnads"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "walnads"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "walnads"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "walnads"
        },
        "content": "    public String view() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "walnads"
        },
        "content": "        String str \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "walnads"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "walnads"
        },
        "content": "            str +\u003d (i + 1) + \". \" + tasks.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "walnads"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "walnads"
        },
        "content": "        return str.substring(0, str.length()-1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "walnads"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "walnads"
        },
        "content": "    public String add(Task t) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "walnads"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "walnads"
        },
        "content": "        update();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "walnads"
        },
        "content": "        return String.format(\"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d tasks in the list.\","
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "walnads"
        },
        "content": "                tasks.get(tasks.size() - 1), tasks.size());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "walnads"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "walnads"
        },
        "content": "    public String delete(int i) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "walnads"
        },
        "content": "        String str \u003d tasks.get(i-1).toString();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "walnads"
        },
        "content": "        tasks.remove(i-1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "walnads"
        },
        "content": "        update();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "walnads"
        },
        "content": "        return String.format(\"Noted. I\u0027ve removed this task:\\n  %s\\nNow you have %d tasks in the list\","
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "walnads"
        },
        "content": "                str, tasks.size());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "walnads"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "walnads"
        },
        "content": "    public String markDone(int i) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "walnads"
        },
        "content": "        tasks.get(i-1).markAsDone();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "walnads"
        },
        "content": "        update();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "walnads"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n  \" + tasks.get(i-1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "walnads"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "walnads"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "walnads": 50
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "walnads"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "walnads"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "walnads"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "walnads"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "walnads"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "walnads"
        },
        "content": "    public String printString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "walnads"
        },
        "content": "        return String.format(\"T | %d |%s\", isDone ? 1 : 0, description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "walnads"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "walnads"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "walnads"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "walnads"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "walnads"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "walnads"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "walnads": 15
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "walnads"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "walnads"
        },
        "content": "import java.io.UnsupportedEncodingException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "walnads"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "walnads"
        },
        "content": "    protected PrintStream out;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "walnads"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "walnads"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "walnads"
        },
        "content": "            this.out \u003d new PrintStream(System.out, true, \"UTF-8\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "walnads"
        },
        "content": "        } catch (UnsupportedEncodingException e) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "walnads"
        },
        "content": "            return; // bro will nvr happen"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "walnads"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "walnads"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "walnads"
        },
        "content": "    public void show(String str) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "walnads"
        },
        "content": "        out.println(str);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "walnads"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "walnads"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "walnads": 19
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "walnads"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "walnads"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "walnads"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "walnads"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "walnads"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "walnads"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "walnads"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "walnads"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "walnads"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "walnads"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "walnads"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "walnads"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "walnads"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "walnads"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "walnads"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "walnads"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "walnads"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "walnads": 22
    }
  }
]
