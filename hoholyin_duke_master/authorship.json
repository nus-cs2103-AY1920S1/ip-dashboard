[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "jar {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    manifest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        attributes("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            \u0027Main-Class\u0027: \u0027Duke\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        )"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoholyin": 14,
      "-": 14
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "@rem      http://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "hoholyin": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoholyin"
        },
        "content": " * Duke Class"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoholyin"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "import duke.util.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "import duke.util.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Main method to run Duke"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        new Duke(\"./saved/taskList_history.txt\").run();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public Duke(String path) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        storage \u003d new Storage(path);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            if (!storage.historyExists()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                storage.createFile();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                tasks \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                tasks \u003d new TaskList(storage.retrieveHistory());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Run method for Duke Object"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        ui.welcomeMessage();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        boolean shouldExit \u003d false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        while (!shouldExit) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                String[] inputParts \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                String command \u003d inputParts[0];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                Command c \u003d Parser.parse(inputParts);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                shouldExit \u003d c.execute(storage, ui, tasks);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoholyin": 66,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoholyin"
        },
        "content": " * Deadline class"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoholyin"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Contructor for Deadline object"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param n name of task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param date date of task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public Deadline(String n, String date) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        super(n);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Cosntructor for Deadline object when loading from history"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param n name of task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param date date of task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param completed indicates if task is completed"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public Deadline(String n, String date, boolean completed) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        super(n, completed);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Returns date of task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @return date of task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Returns string representation of Deadline object"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @return String representation of Deadline object"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        String result \u003d \"[D][\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        result \u003d this.completed ? result + \"✓\" + \"]\" : result + \"✘\" + \"]\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        result +\u003d \" \" + this.name;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        result +\u003d \" (by: \" + this.date + \")\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoholyin": 51
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoholyin"
        },
        "content": " * Event class"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoholyin"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Constructor for Event object"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param n name of event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param date date of event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public Event(String n, String date) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        super(n);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Constructor for Event object when loading history"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param n name of event"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param date date of event"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param completed true if event is already completed, false otherwise"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public Event(String n, String date, boolean completed) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        super(n, completed);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Returns date of event"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @return String of date"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Returns string representation of Event object"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @return String representation of Event object"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        String result \u003d \"[E][\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        result \u003d this.completed ? result + \"\\u2713\" + \"]\" : result + \"\\u2718\" + \"]\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        result +\u003d \" \" + this.name;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        result +\u003d \" (at: \" + this.date + \")\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoholyin": 52
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoholyin"
        },
        "content": " * Task class"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoholyin"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    protected boolean completed;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    protected int index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    protected static int count \u003d 0;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "  "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Constructor for Task object"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param n name of task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public Task(String n) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        count++;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        this.name \u003d n;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        this.index \u003d count;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        completed \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "  "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Constructor for Task object when loading from history"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param n name of task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param completed indicates if task is completed"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public Task(String n, boolean completed) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        count++;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        this.name \u003d n;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        this.index \u003d count;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        this.completed \u003d completed;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Checks if a task is completed"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @return true if task is completed, false otherwise"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public boolean isCompleted() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        return this.completed;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Returns name of task"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @return name of task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "  "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Returns the index of the task relative to the tasklist"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @return index of task"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public int getIndex() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        return this.index;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Completes the task"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public void complete() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        this.completed \u003d true;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoholyin": 64
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoholyin"
        },
        "content": " * Todo class"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoholyin"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Constructor for Todo Object"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param name task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public Todo(String name) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Cosntructor for Todo object when loading from history"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param name name of task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param completed indicates if task is completed"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public Todo (String name, boolean completed) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        super(name, completed);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Returns string representation of Todo object"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @return String representation of Todo object"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        String result \u003d \"[T][\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        result \u003d this.completed ? result + \"\\u2713\" + \"]\" : result + \"\\u2718\" + \"]\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        result +\u003d \" \" + this.name;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoholyin": 35
    }
  },
  {
    "path": "src/main/java/duke/util/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    private static final int BYE \u003d 0;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    private static final int LIST \u003d 1;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    private static final int DONE \u003d 2;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    private static final int DELETE \u003d 3;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    private static final int FIND \u003d 4;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    private static final int TASK \u003d 5;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    private String[] inputParts;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    private int command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public Command(String[] inputParts, int command) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        this.inputParts \u003d inputParts;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public boolean execute(Storage storage, Ui ui, TaskList tasks) throws IOException, DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        if (command \u003d\u003d 0) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            storage.saveHistory(tasks.getTaskList());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            ui.byeMessage();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        } else if (command \u003d\u003d 1){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            ui.drawLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            tasks.displayList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            ui.drawLineNewLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        } else if (command \u003d\u003d 2){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            tasks.markItemComplete(Integer.parseInt(inputParts[1]), ui);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        } else if (command \u003d\u003d 3){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            tasks.deleteItem(Integer.parseInt(inputParts[1]), ui);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        } else if (command \u003d\u003d 4){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            tasks.findItem(inputParts[1], ui);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        } else if (command \u003d\u003d 5){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            tasks.registerNewTask(inputParts, ui);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoholyin": 41
    }
  },
  {
    "path": "src/main/java/duke/util/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoholyin"
        },
        "content": " * Custom DukeException to handle exception that arise purely from Duke"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoholyin"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Constructor to create a new DukeException"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param errorMessage description of error"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoholyin": 14
    }
  },
  {
    "path": "src/main/java/duke/util/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public static Command parse(String[] inputParts) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        switch (inputParts[0]) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            return new Command(inputParts, 0);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            return new Command(inputParts, 1);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            return new Command(inputParts, 2);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            return new Command(inputParts, 3);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            return new Command(inputParts, 4);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        return new Command(inputParts, 5);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoholyin": 19
    }
  },
  {
    "path": "src/main/java/duke/util/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoholyin"
        },
        "content": " * Class to handle storage of data"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoholyin"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "import java.nio.file.StandardOpenOption;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    private String path;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Constructor for Storage object"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param path path to save/read history relative to current directory"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public Storage(String path) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Retrieves history of tasklist"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @return History of tasklist if present"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @throws IOException if there are errors reading the file"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public ArrayList\u003cTask\u003e retrieveHistory() throws IOException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        Path filePath \u003d Paths.get(\"./saved/taskList_history.txt\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e(Files.readAllLines(filePath));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        for (String line : lines) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            String[] parts \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            if (parts[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                taskList.add(new Todo(parts[2], parts[1].equals(\"1\")));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            } else if (parts[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                taskList.add(new Deadline(parts[2], parts[3], parts[1].equals(\"1\")));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            } else if (parts[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                taskList.add(new Event(parts[2], parts[3], parts[1].equals(\"1\")));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Saves the history before closing the app"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param taskList tasklist to be saved as a .txt file"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @throws IOException if there are errors writing to the file"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public void saveHistory(ArrayList\u003cTask\u003e taskList) throws IOException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        for (Task t : taskList) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            String type \u003d \"\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            String date \u003d \"\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            if (t instanceof Todo) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                type \u003d \"T\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            } else if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                Deadline d \u003d (Deadline) t;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                type \u003d \"D\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                date \u003d d.getDate();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            } else if (t instanceof Event) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                Event e \u003d (Event) t;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                type \u003d \"E\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                date \u003d e.getDate();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            String completed \u003d t.isCompleted() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            String title \u003d t.getName();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            if (t instanceof Todo) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                String currentTask \u003d type + \"|\" + completed + \"|\" + title + \"\\n\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                result +\u003d currentTask;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                String currentTask \u003d type + \"|\" + completed + \"|\" + title + \"|\" + date + \"\\n\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                result +\u003d currentTask;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        Path filePath \u003d Paths.get(\"./saved/taskList_history.txt\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        Files.write(filePath, result.getBytes(), StandardOpenOption.CREATE);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Checks if tasklist history exists"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @return true if tasklist history exists, false otherwise"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public boolean historyExists() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        Path filePath \u003d Paths.get(\"./saved/taskList_history.txt\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        return Files.exists(filePath);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Creates a new .txt file to write history to"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @throws IOException if there are errors creating the file"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public void createFile() throws IOException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        Path filePath \u003d Paths.get(\"./saved/taskList_history.txt\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        Path folderPath \u003d Paths.get(\"./saved/\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        Files.createDirectory(folderPath);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        Files.createFile(filePath);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoholyin": 106
    }
  },
  {
    "path": "src/main/java/duke/util/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoholyin"
        },
        "content": " * TaskList class to store list of tasks"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoholyin"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    private int count;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Constructor for TaskList object"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param taskList List of tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        count \u003d taskList.size();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Returns the tasklist"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @return list of tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Displays the tasklist"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public void displayList() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        System.out.println(\"    Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        for (Task t : taskList) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            System.out.println(\"    \" + t.getIndex() + \".\" + t);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Marks the task item as complete in the list"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param index Index of task in the list"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param ui Ui Object to draw ui components"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @throws DukeException if invalid task number is passed to this method"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public void markItemComplete(int index, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        if (index \u003c\u003d 0 || index \u003e count) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            throw new DukeException(\"Invalid task number!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        Task t \u003d taskList.get(index - 1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        t.complete();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        ui.drawLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        System.out.println(\"     \" + t);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        ui.drawLineNewLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Deletes a task item from the list"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param index Index of task in the list"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param ui Ui object to draw ui components"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @throws DukeException if invalid task number is passed to this method"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public void deleteItem(int index, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        if (index \u003c\u003d 0 || index \u003e count) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            throw new DukeException(\"Invalid task number!\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        index--;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        Task t \u003d taskList.get(index);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        ui.drawLine();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        System.out.println(\"     Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        System.out.println(\"      \" + t);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        count -\u003d 1;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        String message \u003d"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                count \u003d\u003d 1"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                        ? \"     Now you have 1 task in the list\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                        : \"     Now you have \" + count + \" tasks in the list\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        ui.drawLineNewLine();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Creates a new task from a given input"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param inputParts An array of \u003ccode\u003eString\u003c/code\u003e split into type of task, name of task and date (if required)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param ui Ui Object to draw ui components"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @throws DukeException if command is invalid"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public void registerNewTask(String[] inputParts, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        checkCommandValidity(inputParts[0]);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        Task t \u003d addToList(inputParts[1], inputParts[0]);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        echo(t, ui);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Checks if a given command is valid"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param type Type of command"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @throws DukeException if command is invalid"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    static void checkCommandValidity(String type) throws DukeException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        if (!type.equals(\"todo\") \u0026\u0026 !type.equals(\"deadline\") \u0026\u0026 !type.equals(\"event\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            throw new DukeException(\"I don\u0027t know what that means :(\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Adds a task item to the tasklist"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param s name of task"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param type type of task"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @return Task object to be appended to the tasklist"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @throws DukeException if description of task is empty or if format is incorrect"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public Task addToList(String s, String type) throws DukeException {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        String trimmed \u003d s.replaceAll(\"^\\\\s+\", \"\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        if (trimmed.equals(\"\")) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            throw new DukeException(\"Description cannot be empty!\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            taskList.add(new Todo(s));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        } else if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            String[] parts \u003d s.split(\"\\\\/\" + \"by\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            if (parts.length \u003c 2) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                String message \u003d \"Date required! \";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                message +\u003d \"Format: deadline YOUR_TASK_NAME /by YOUR_DEADLINE\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                throw new DukeException(message);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            } else if (parts.length !\u003d 2) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                String message \u003d \"Format: deadline YOUR_TASK_NAME /by YOUR_DEADLINE\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                throw new DukeException(message);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            taskList.add(new Deadline("
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                    parts[0].substring(0, parts[0].length() - 1),"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                    createDateAndTime(parts[1].substring(1))"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            ));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        } else if (type.equals(\"event\")) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            String[] parts \u003d s.split(\"\\\\/\" + \"at\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            if (parts.length \u003c 2) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                String message \u003d \"Date required! \";"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                message +\u003d \"Format: event YOUR_TASK_NAME /at YOUR_EVENT_DATE\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                throw new DukeException(message);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            } else if (parts.length !\u003d 2) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                String message \u003d \"Format: event YOUR_TASK_NAME /at YOUR_EVENT_DATE\";"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                throw new DukeException(message);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            taskList.add(new Event("
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                    parts[0].substring(0, parts[0].length() - 1),"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                    createDateAndTime(parts[1].substring(1))"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            ));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        count +\u003d 1;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        return taskList.get(count - 1);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Creates fixed date/time format from given string"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param s string to be interpreted as date/time formate"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @return string in the fixed format"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    static String createDateAndTime(String s) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        String[] parts \u003d s.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        for (int i \u003d 0; i \u003c parts.length; i++) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            if (parts[i].contains(\"/\")) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                parts[i] \u003d createDate(parts[i]);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            } else if (is24hrFormat(parts[i])) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                parts[i] \u003d createTime(parts[i]);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        for (String part : parts) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            result +\u003d \" \" + part;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        return result.substring(1);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Checks if the input time is in 24 hour format"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param time input time"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @return true if time is 24 hour format, false otherwise"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    static boolean is24hrFormat(String time) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        return isInteger(time) \u0026\u0026 time.length() \u003d\u003d 4 \u0026\u0026 Integer.parseInt(time) \u003c 2400;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Creates a fixed time format"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param time input time"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @return fixed time format as a \u003ccode\u003eString\u003c/code\u003e"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    static String createTime(String time) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        int hour \u003d Integer.parseInt(time.substring(0, 2));"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        String min \u003d time.substring(2, 4);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        String timeOfDay \u003d hour \u003e 11 ? \"pm\" : \"am\";"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        hour \u003d (hour \u003e 12)"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                ? (hour - 12)"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                : ((hour \u003d\u003d 0) ? 12 : hour);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        return hour + \":\" + min + timeOfDay;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Creates a fixed date format"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param date input time"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @return fixed date format as a \u003ccode\u003eString\u003c/code\u003e"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    static String createDate(String date) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        String[] parts \u003d date.split(\"/\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        String[] month \u003d {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            \"\","
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            \"January\","
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            \"February\","
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            \"March\","
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            \"April\","
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            \"May\","
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            \"June\","
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            \"July\","
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            \"August\","
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            \"September\","
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            \"October\","
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            \"November\","
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            \"December\""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        };"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        boolean validDate \u003d true;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        if (parts.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            for (int i \u003d 0; i \u003c 3; i++) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                if (!isInteger(parts[i])) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                    validDate \u003d false;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                } else if (i \u003d\u003d 1"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                        \u0026\u0026 (Integer.parseInt(parts[i]) \u003c 1 || Integer.parseInt(parts[i]) \u003e 12)) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                    validDate \u003d false;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            validDate \u003d false;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        if (validDate) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            if (parts[2].length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                return parts[0] + \" \" + month[Integer.parseInt(parts[1])] + \" \" + parts[2];"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                return parts[2] + \" \" + month[Integer.parseInt(parts[1])] + \" \" + parts[0];"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            return date;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Checks if a given string is an integer"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param n input string"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @return true if given string is an integer, false otherwise"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    static boolean isInteger(String n) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            Integer.parseInt(n);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Echos the task in a fixed format"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param t Task object"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param ui Ui Object to draw ui components"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public void echo(Task t, Ui ui) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        ui.drawLine();"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        System.out.println(\"      \" + t);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        if (count \u003d\u003d 1) {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            System.out.println(\"     Now you have 1 task in the list.\");"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            String message \u003d \"     Now you have \" + count + \" tasks in the list.\";"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            System.out.println(message);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        ui.drawLineNewLine();"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public void findItem(String name, Ui ui) {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        ArrayList\u003cTask\u003e results \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        for (Task t : taskList) {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            if (t.getName().contains(name)) {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                results.add(t);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        ui.drawLine();"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        System.out.println(\"     Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        for (Task t : results) {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            System.out.println(\"    \" + t.getIndex() + \".\" + t);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        ui.drawLineNewLine();"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoholyin": 298
    }
  },
  {
    "path": "src/main/java/duke/util/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoholyin"
        },
        "content": " * Ui class to print display items"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoholyin"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Print welcome message"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public void welcomeMessage() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        String logo \u003d \"     ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                + \"    |  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                + \"    | | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                + \"    | |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                + \"    |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        drawLine();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        System.out.println(\"    Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        System.out.println(\"    What can I do for you?\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        drawLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        System.out.println(\"\\n\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Prints error messages for DukeException"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * @param error Error message of DukeException"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public void printErrorMessage(String error) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        drawLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        System.out.println(\"     \" + error);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        drawLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        System.out.println(\"\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Prints bye message"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public void byeMessage() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        drawLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        drawLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        System.out.println(\"\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Draws dividing line"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public void drawLine() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        String line \u003d \"    ________________________\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                + \"____________________________________\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     * Draws dividing line with new line"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public void drawLineNewLine() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        String line \u003d \"    ________________________\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                + \"____________________________________\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoholyin": 61
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoholyin": 9
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    Hello from"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     ____        _        "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    What can I do for you?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      [T][✘] buy bread"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     Now you have 1 task in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      [D][✘] submit project (by: 31 August 2019)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      [E][✘] lecture (at: Friday 2pm)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      [T][✘] eat bread"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     I don\u0027t know what that means :("
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     [D][✓] submit project (by: 31 August 2019)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      [E][✘] lecture (at: Friday 2pm)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     Now you have 3 tasks in the list"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    1.[T][✘] buy bread"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    4.[T][✘] eat bread"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "hoholyin": 75
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "todo buy bread"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "deadline submit project /by 31/8/2019"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "event lecture /at Friday 2pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "todo eat bread"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "hurhurhur"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "find bread"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "find hihi"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "hoholyin": 10
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    echo \"Removing ACTUAL.TXT from previous test\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "fi"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "find ../src/main -name \"*.java\" \u003e sources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "if ! javac @sources.txt -d ../bin"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "#if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "# delete source file directories "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "if [ -e \"./sources.TXT\" ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    echo \"Removing sources.txt after compilation\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    rm sources.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "fi"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "# remove history generated from test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "if [ -d \"./saved\" ]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "then"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    echo \"Removing saved folder from previous test\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    rm -r saved"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "fi"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "then"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "else"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "hoholyin": 52
    }
  }
]
