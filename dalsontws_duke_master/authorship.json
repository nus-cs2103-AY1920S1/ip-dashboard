[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalsontws": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    // String Constants used for Duke output"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    private static final String INTRODUCTION \u003d \"     Hello! I\u0027m Duke\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    private static final String USER_PROMPT \u003d \"     What can I do for you?\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    private static final String SEPARATOR \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    private static final String SHOW_LIST \u003d \"     Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    private static final String INVALID_LIST_ENTRY \u003d \"     List entry does not exist!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    private static final String MARK_TASK_COMPLETE \u003d \"     Nice! I\u0027ve marked this task as done: \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    private static final String ADD_TASK \u003d \"     Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    private static final String REMOVE_TASK \u003d \"     Noted. I\u0027ve removed this task: \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    private static final String CLOSING_STATEMENT \u003d \"     Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        // Store command-line input as String"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        String input \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        // Create ArrayList of tasks - dynamic array"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        // Set index of number of task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        int n \u003d 0;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        // Null task for exception"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        Task t \u003d null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        //Read command-line input with Scanner"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        //Initial opening introduction and prompt for user input"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.println(INTRODUCTION);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.println(USER_PROMPT);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.println(\"\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        //Check for last statement"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            // Get entire line of input from command-line"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            input \u003d scanner.nextLine().trim(); //Remove blank space"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            //Store whatever text entered, except \"bye\", exit loop"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            if (input.equals(\"bye\")) break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                System.out.println(SHOW_LIST);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                for (int i \u003d 0; i \u003c n; i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    System.out.print(\"     \" + (i+1) + \".\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    System.out.println(list.get(i));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            else if (input.contains(\"done\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                //Assumption: fixed format - remove first 4 characters to get index. i.e. \"done\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                String value \u003d input.substring(4);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                //Get integer found in user input"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                int index \u003d Integer.parseInt(value.trim()); //Remove any blank space"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "              // Optional error handling - if entry does not exist and is marked \u0027done\u0027"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    //Mark task as done"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    list.get(index-1).isDone \u003d true;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                catch (NullPointerException err){"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    System.out.println(INVALID_LIST_ENTRY);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    System.out.println(\"\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                System.out.println(MARK_TASK_COMPLETE);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                System.out.print(\"       \"); //indentation"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                System.out.println(list.get(index-1));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            } else if (input.contains(\"delete\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                //Assumption: fixed format - remove first 6 characters to get index. i.e. \"delete\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                String value \u003d input.substring(6);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                //Get integer found in user input"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                int index \u003d Integer.parseInt(value.trim()); //Remove any blank space"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                System.out.println(REMOVE_TASK);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                System.out.print(\"       \"); //indentation"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                System.out.println(list.get(index-1)); //index start from 0"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                //Remove task from list"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                list.remove(index-1); //index start from 0"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                n -\u003d 1; //Remove 1 task from total"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                System.out.println(\"     Now you have \" + (n) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            else if (input.contains(\"todo\") || input.contains(\"deadline\") || input.contains(\"event\")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                String[] substrings \u003d input.split(\" \");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                String action \u003d substrings[0];"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    t \u003d new Task(input, substrings.length);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                //If length is 1, it only has the action but no description"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                catch (DukeException err) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    System.out.println(\"\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                switch(action) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                        String subT \u003d input.replace(\"todo\", \"\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                        list.add(new ToDo(subT.trim())); //Remove blank spaces"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                        String subD \u003d input.replace(\"deadline\", \"\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                        //Split task and deadline"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                        String[] partsD \u003d subD.split(\"\\\\/by\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                        String descriptionD \u003d partsD[0].trim(); //Remove blank spaces"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                        String by \u003d partsD[1].trim(); //Remove blank spaces"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                        list.add(new Deadline(descriptionD, by));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                        //Separate description and time for clarity"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                        String sub3 \u003d input.replace(\"event\", \"\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                        //Split task and deadline"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                        String[] partsE \u003d sub3.split(\"\\\\/at\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                        String descriptionE \u003d partsE[0].trim(); //Remove blank spaces"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                        String at \u003d partsE[1].trim(); //Remove blank spaces"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                        list.add(new Event(descriptionE, at));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                System.out.println(ADD_TASK);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                System.out.print(\"       \"); //indentation"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                System.out.println(list.get(n));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                //After storing user input into array, increment index"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                n +\u003d 1;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                System.out.println(\"     Now you have \" + (n) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "               //Do not fit any commands"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    t \u003d new Task(input, 0);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                catch (DukeException err) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    System.out.println(\"\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            System.out.println(\"\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        //Closing statement"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.println(CLOSING_STATEMENT);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "dalsontws": 165,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "//Custom exception class for Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "class DukeException extends Exception {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalsontws": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalsontws": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    //Invalid task throws DukeException"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public Task(String action, int size) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        if (size \u003d\u003d 0) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            throw new DukeException(\"    ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"); //no valid command given"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        } else if (size \u003d\u003d 1) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            throw new DukeException(\"    ☹ OOPS!!! The description of a \"+ action +\" cannot be empty.\"); //empty description"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalsontws": 27
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalsontws": 13
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalsontws"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "       [T][?] borrow book"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "dalsontws": 18
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "todo borrow book"
      }
    ],
    "authorContributionMap": {
      "dalsontws": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "pause"
      }
    ],
    "authorContributionMap": {
      "dalsontws": 25
    }
  }
]
