[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    archiveVersion \u003d \"0.1.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    mainClassName \u003d \u0027duke.Duke\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    run {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        standardInput \u003d System.in"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": " }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    useJUnitPlatform();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "briyanii": 21,
      "-": 14
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "briyanii": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.frontend.UserInterface;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": " * The driver class to run user interface of Duke"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private UserInterface userInterface;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        // initialize user inferface with input source"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        userInterface \u003d new UserInterface();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        // start"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            userInterface.start();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            userInterface.displayError(ex);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        // query UI if it can accept user input"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        while (userInterface.canAcceptInput()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                // try to read input and then try to execute it"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                userInterface.executeCommand(userInterface.readInput());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                // display output if successfully executed"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                userInterface.displayOutput();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            } catch (duke.DukeException ex) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                // display output if any error occurs"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                userInterface.displayError(ex);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 34,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": " * Exception to be thrown when an error occurs in Duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Constructs the exception to be thrown when an error occurs"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param messageLines The message explaining the error which occured for the exception to be thrown"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public DukeException(String... messageLines) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        super(append(messageLines));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private static String append(String... segments) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        StringBuffer message \u003d new StringBuffer();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        for (String segment : segments) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            message.append(segment);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return message.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 24
    }
  },
  {
    "path": "src/main/java/duke/command/AddTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": " * Data structure to wrap the command to add a Deadline, Event, or ToDo task to the task list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class AddTaskCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Constructor to create a command for adding a task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param type       Type for adding a Deadline, Event, or Todo task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param parameters Description of the task, and Time of the task (if applicable)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public AddTaskCommand(Type type, String... parameters) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        super(type, parameters);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 17
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": " * Abstract class for data structures which to wrap a command, and the arguments for it, which can be"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": " * passed to the logic executing these command."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private final Type type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private final String[] parameters;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Constructs the command"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param type       The enumerated type of command"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param parameters The arguments for the command, if any"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public Command(Type type, String... parameters) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        this.parameters \u003d parameters;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Returns the enumerated type of the command"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param command The command of which the enumerated type is needed from"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @return The enumerated Type of the command"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public static Type getTypeOf(Command command) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return command.type;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Returns the arguments provided with the command"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param command The command of which the arguments provided is needed from"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @return The arguments provided to the command"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public static String[] getArgumentsUsed(Command command) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return command.parameters;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "briyanii": 46
    }
  },
  {
    "path": "src/main/java/duke/command/CompleteTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": " * Data structure to wrap the command to mark a task as done in the task list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class CompleteTaskCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Constructs the command to mark a task as done"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param taskNumber The number corresponding position of the task in the task list to be marked as done"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public CompleteTaskCommand(String taskNumber) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        super(Type.COMPLETE, taskNumber);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 16
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": " * Data structure to wrap a command to delete a task in the task list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class DeleteTaskCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Constructs the command to mark a task as done"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param taskNumber The number corresponding position of the task in the task list to be marked deleted"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public DeleteTaskCommand(String taskNumber) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        super(Type.DELETE, taskNumber);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 16
    }
  },
  {
    "path": "src/main/java/duke/command/DukeIncorrectParameterTypeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": " * Exception which can be thrown when the type of the argument provided to a command cannot"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": " * be converted to the required type"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class DukeIncorrectParameterTypeException extends DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Constructs the exception to be thrown when an argument of the wrong type is provided to a command"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param typeExpected The expected type of the argument"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param argument     The argument which is of the wrong type"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public DukeIncorrectParameterTypeException(String typeExpected, String argument) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        super(\"The following cannot be converted to \", typeExpected, \":\\n\", argument);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 20
    }
  },
  {
    "path": "src/main/java/duke/command/DukeMissingCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": " * Exception to be thrown when no command is given when one is expected"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class DukeMissingCommandException extends DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Constructs the exception to be thrown when to command is given"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public DukeMissingCommandException() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        super(\"No command?! I didn\u0027t w-want to do anything anyway!\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 16
    }
  },
  {
    "path": "src/main/java/duke/command/DukeMissingParameterException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": " * Exception to be thrown when the required parameters for a command are not given an argument"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class DukeMissingParameterException extends DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Constructor for the exception to be thrown when the necessary arguments for a command are not provided"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param type      The type of the command which was not supplied the necessary arguments"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param arguments The arguments provided along with the command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public DukeMissingParameterException(Type type, String[] arguments) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        super(missingParameters(type, arguments));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    // helper method to get the parameters which are missing arguments"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private static String missingParameters(Type type, String[] parametersProvided) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        StringBuffer message \u003d new StringBuffer(\"The following field(s) cannot be empty:\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        ArrayList\u003cString\u003e parameters \u003d Type.getParametersFor(type);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        for (int i \u003d 0; i \u003c Type.getNumberOfParametersExpectedFor(type); i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            if (parametersProvided[i] \u003d\u003d null) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                message.append(\"\\n\u003e\u003e\u003e\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                message.append(parameters.get(i));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return message.toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 34
    }
  },
  {
    "path": "src/main/java/duke/command/DukeUnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": " * Exception to be thrown when the command provided is not a supported command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class DukeUnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Constructs the exception to be thrown when the command provided is not supported."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public DukeUnknownCommandException() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        super(\"I\u0027m sorry. I don\u0027t know what that means :c\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 16
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": " * Data structure to wrap the command to tell Duke to close"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Constructs the command which tells Duke to close"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        super(Type.EXIT);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 14
    }
  },
  {
    "path": "src/main/java/duke/command/SearchCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": " * Data structure to wrap the command to search for a task in the task list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class SearchCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public SearchCommand(String keyword) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        super(Type.SEARCH, keyword);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 10
    }
  },
  {
    "path": "src/main/java/duke/command/ShowListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": " * Data structure to wrap the command to list out the tasks in the task list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class ShowListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Constructs the command which displays the list of tasks in the task list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public ShowListCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        super(Type.LIST);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 14
    }
  },
  {
    "path": "src/main/java/duke/command/Type.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": " * Enumeration of the type of commands which can be entered into the user interface to manipulate the task list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public enum Type {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    EXIT(0),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    LIST(0),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    DELETE(1, \"task number\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    COMPLETE(1, \"task number\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    SEARCH(1, \"keyword\"),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ADD_TODO(1, \"description\"),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ADD_DEADLINE(2, \"description\", \"time\", \"/by\"),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ADD_EVENT(2, \"description\", \"time\", \"/at\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    Type(int parametersExpected, String... parameterNamesAndDelimiters) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        this.parametersExpected \u003d parametersExpected;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        parameters \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        delimiters \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        for (int i \u003d 0; i \u003c parameterNamesAndDelimiters.length; i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            if (i \u003c parametersExpected) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                parameters.add(parameterNamesAndDelimiters[i]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                delimiters.add(parameterNamesAndDelimiters[i]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private int parametersExpected;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private ArrayList\u003cString\u003e parameters;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private ArrayList\u003cString\u003e delimiters;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Returns the number of parameters expected for the command of the Type provided"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param type The type of the command for which the number of parameters expected is needed"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @return The number of parameters expected"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public static int getNumberOfParametersExpectedFor(Type type) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return type.parametersExpected;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Returns an ArrayList of the names of the parameters of the for the Type of command"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param type The Type of command which the names of the parameters is required from"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @return An ArrayList of the parameter names"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public static ArrayList\u003cString\u003e getParametersFor(Type type) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return new ArrayList\u003cString\u003e(type.parameters);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Returns the delimiters used to separate multiple arguments for commands of the Type provided"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param type The Type of command"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @return An ArrayList of the delimiters"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public static ArrayList\u003cString\u003e getDelimitersFor(Type type) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return new ArrayList\u003cString\u003e(type.delimiters);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 64
    }
  },
  {
    "path": "src/main/java/duke/frontend/UserInterface.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.frontend;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.io.Input;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.io.Output;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.io.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.tasklist.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.tasklist.ToDo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.tasklist.Deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.tasklist.Event;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": " * The user interface which the user uses to interacts with duke, and manipulate the task list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class UserInterface {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private boolean isAcceptingInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private Input input;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private Output standardOutput;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private Output errorOutput;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Constructs the user interface for Duke"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public UserInterface() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        // setup input and output"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        input \u003d new Input(System.in);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        String lineBreak1 \u003d \"___________________________________________________________\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        String lineBreak2 \u003d \"‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        errorOutput \u003d new Output(System.out);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        errorOutput.setHeader(lineBreak1, \" ☹ OOPS!!!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        errorOutput.setFooter(lineBreak2);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        errorOutput.setLeftBorder(\"ERROR \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        errorOutput.setLeftIndent(1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        errorOutput.setWrapOn();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        standardOutput \u003d new Output(System.out);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        standardOutput.setHeader(lineBreak1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        standardOutput.setFooter(lineBreak2);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        standardOutput.setLeftBorder(\"      \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        standardOutput.setLeftIndent(1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        standardOutput.setWrapOn();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        storage \u003d new Storage(\"DukeSave01.txt\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        // load default exisiting task list if any"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        isAcceptingInput \u003d true;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    // helper method for determining width threshold for text wrapping in output"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private static int getWidth(int number) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return Integer.toString(number).length();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Returns the boolean representing whether or not the user interface is accepting user input"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @return True is the user interface can accept user input, false otherwise"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public boolean canAcceptInput() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return isAcceptingInput;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Intructs the output to display the logo, and welcome message of duke, and to load the previously saved task list."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @throws DukeException Exception thrown when error occurs while setting up duke"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void start() throws DukeException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        Output logo \u003d new Output(System.out);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        logo.addLine(\" ____        _        \")"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .addLine(\"|  _ \\\\ _   _| | _____ \")"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .addLine(\"| | | | | | | |/ / _ \\\\\")"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .addLine(\"| |_| | |_| |   \u003c  __/\")"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .addLine(\"|____/ \\\\__,_|_|\\\\_\\\\___|\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        logo.print();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        standardOutput.addLine(\"Hi! I\u0027m Duke :)\")"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .addLine(\"What can I do for you?\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        displayOutput();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        taskList \u003d storage.loadTaskList();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Displays the content in the standard output buffer"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void displayOutput() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        standardOutput.print();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Displays the error message when an exception in the user interface occurs and an exception is thrown"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param ex The exception which was thrown when an error occurred"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void displayError(DukeException ex) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        //flushes standard output otherwise future output may be wrong"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        standardOutput.clear();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        // displays dukeexception error messages"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        errorOutput.addLine(ex.getMessage());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        errorOutput.print();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Reads the input from console and return the command it is parsed as."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @return The command the input is parsed as if it can be parsed"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @throws DukeException The exception thrown when the input cannot be properly parsed as a command"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public Command readInput() throws DukeException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return Parser.parseAsCommand(input.get());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Executes the command in the environment of the user interface"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param command The command to be executed"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @throws DukeException The exception thrown when a command cannot be executed"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void executeCommand(Command command) throws DukeException {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        // all commands passed to this method have all required parameter non-empty"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        switch (command.getClass().getSimpleName()) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        case \"AddTaskCommand\":"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            executeCommand((AddTaskCommand) command);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        case \"CompleteTaskCommand\":"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            executeCommand((CompleteTaskCommand) command);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        case \"DeleteTaskCommand\":"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            executeCommand((DeleteTaskCommand) command);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        case \"ShowListCommand\":"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            executeCommand((ShowListCommand) command);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        case \"ExitCommand\":"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            executeCommand((ExitCommand) command);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        case \"SearchCommand\":"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            executeCommand((SearchCommand) command);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            throw new DukeUnknownCommandException();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private void executeCommand(AddTaskCommand command) throws DukeException {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        String[] parameters \u003d Command.getArgumentsUsed(command);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        switch (Command.getTypeOf(command)) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        case ADD_TODO:"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            task \u003d new ToDo(parameters[0]);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        case ADD_DEADLINE:"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                task \u003d new Deadline(parameters[0], Parser.parseDateTime(parameters[1]));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                task \u003d new Deadline(parameters[0], parameters[1]);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        case ADD_EVENT:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                task \u003d new Event(parameters[0], Parser.parseDateTime(parameters[1]));"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                task \u003d new Event(parameters[0], parameters[1]);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            throw new DukeException(\"This task type is not supported yet\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        standardOutput.addLine(\"Got it! I\u0027ve added this task to the list:\")"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .addLine(task.toString())"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .addLine(\"Now you have \","
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                        Integer.toString(taskList.size()),"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                        \" task(s) in your list.\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        storage.save(taskList);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private void executeCommand(CompleteTaskCommand command) throws DukeException {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        String[] parameters \u003d Command.getArgumentsUsed(command);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        Task task \u003d taskList.complete(parameters[0]);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        standardOutput.addLine(\"Got it! I\u0027ve marked this task as done:\")"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .addLine(task.toString());"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        storage.save(taskList);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private void executeCommand(DeleteTaskCommand command) throws DukeException {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        String[] parameters \u003d Command.getArgumentsUsed(command);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        Task task \u003d taskList.delete(parameters[0]);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        standardOutput.addLine(\"Got it! I\u0027ve removed this task from the list:\")"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .addLine(task.toString())"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .addLine(\"Now you have \","
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                        Integer.toString(taskList.size()),"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                        \" task(s) in your list.\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        storage.save(taskList);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private void executeCommand(SearchCommand command) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        String[] parameters \u003d Command.getArgumentsUsed(command);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        ArrayList\u003cTask\u003e results \u003d taskList.search(parameters[0]);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        if (results.size() \u003e 0) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            int count \u003d 0;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            standardOutput.addLine(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            for (Task task : taskList.search(parameters[0])) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                standardOutput.addLine(Integer.toString(count), \". \", task.toString());"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            standardOutput.addLine(\"There are no matching tasks in your list\");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private void executeCommand(ShowListCommand command) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            standardOutput.addLine(\"Your list is empty!\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            int count \u003d 0;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            standardOutput.addLine(\"Here are the task(s) in your list:\");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            for (Task task : taskList.list()) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                standardOutput.addLine("
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                        String.format(\"%0\" + getWidth(taskList.size()) + \"d\", count), \". \", task.toString());"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private void executeCommand(ExitCommand command) throws DukeException {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        isAcceptingInput \u003d false;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        storage.save(taskList);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        standardOutput.addLine(\"Goodbye! Hope to see you again!\");"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 258
    }
  },
  {
    "path": "src/main/java/duke/io/DukeCorruptFileException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": " * Exception to be thrown when a the file at the given file path is not formatted in the way the method reading the"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": " * file expects it to be formatted."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class DukeCorruptFileException extends DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Constructs the exception thrown when a file is not formatted in the way the method reading the file expects"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param filePath The file path of the badly formatted file"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public DukeCorruptFileException(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        super(new StringBuffer(\"The file at \").append(filePath)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .append(\" is formatted incorrectly.\")"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 21
    }
  },
  {
    "path": "src/main/java/duke/io/DukeInvalidFilePathException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": " * The exception to be thrown when the file at some file path is missing, or a directory"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class DukeInvalidFilePathException extends DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Constructs the exception"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param path The file path of the file which is missing, or is a directory"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public DukeInvalidFilePathException(String path) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        super(\"Your task list cannot be saved/loaded because the following is not a valid file path:\\n\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                path);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 19
    }
  },
  {
    "path": "src/main/java/duke/io/Input.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": " * Handler for user input"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class Input {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private BufferedReader bufferedReader;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Constructs the user input handler"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param inputStream The input stream where the which needs to be read from"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public Input(InputStream inputStream) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        bufferedReader \u003d new BufferedReader(new InputStreamReader(inputStream));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Returns the next line in the buffer where the user input is stored into"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @return The string representation of the next line in the buffer"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @throws DukeException Exception to be thrown when the an error occurs when trying to read from the buffer"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public String get() throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            return bufferedReader.readLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            throw new DukeException(\"Input error\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 38
    }
  },
  {
    "path": "src/main/java/duke/io/Output.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": " * Class which acts as the buffer where output is stored before it needs to be displayed, and responsible for"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": " * formatting the output to be displayed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class Output {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    // formatting fields"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private String[] headerLines;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private String[] footerLines;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private String leftBorder;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private int leftIndentWidth;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    // formatting settings"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private boolean printHeaderOn;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private boolean printFooterOn;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private boolean printLeftBorderOn;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private boolean printIndentOn;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private boolean wrapOn;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    // output buffer"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private ArrayList\u003cString\u003e outputLines;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    //output destination"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private PrintStream printStream;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Constructs the output formatter and buffer"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param printStream The print stream which prints the output"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public Output(PrintStream printStream) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        this.printStream \u003d printStream;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        // no header, footer, or leftborder by default"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        headerLines \u003d new String[]{};"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        footerLines \u003d new String[]{};"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        leftBorder \u003d \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        // indent width 0 by default"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        leftIndentWidth \u003d 0;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        // all true by default, no need to toggle boolean when the header footer etc are set"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        printHeaderOn \u003d true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        printFooterOn \u003d true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        printLeftBorderOn \u003d true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        printIndentOn \u003d true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        // text wrapping off by default"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        wrapOn \u003d false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        // empty buffer"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        outputLines \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Sets the headers for the output"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param headerLines The headers for the output, from top to bottom, if any"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void setHeader(String... headerLines) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        this.headerLines \u003d headerLines;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Sets the footers for the output"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param footerLines The footers for the output, from top to bottom, if any"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void setFooter(String... footerLines) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        this.footerLines \u003d footerLines;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Sets the left border of the output"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param leftBorder The string be be appended to each line of the output message, if any"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void setLeftBorder(String leftBorder) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        this.leftBorder \u003d leftBorder;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Sets the number of spaces to indent the message of each line of output"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param count The number of spaces to indent the message by"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void setLeftIndent(int count) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        this.leftIndentWidth \u003d count;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Adds a line to the output message"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param lineSegments The segments of the string meant to be displayed on the same line, if not wrapped"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @return The output handler which the line was added to"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public Output addLine(String... lineSegments) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        // string concatenation behind the scenes"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        StringBuffer line \u003d new StringBuffer();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        for (String segment : lineSegments) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            line.append(segment);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        outputLines.add(line.toString());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Enables displaying of the headers set for the output handler, if any"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void setHeaderOn() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        printHeaderOn \u003d true;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Disables displaying of the headers set for the output handler, if any"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void setHeaderOff() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        printFooterOn \u003d false;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Enables displaying of the footers set for the output handler, if any"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void setFooterOn() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        printFooterOn \u003d true;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Disables displaying of the footers set for the output handler, if any"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void setFooterOff() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        printFooterOn \u003d false;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Enables displaying of the left border set for the output handler, if any"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void setLeftBorderOn() {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        printLeftBorderOn \u003d true;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Disables displaying of the left border set for the output handler, if any"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void setLeftBorderOff() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        printLeftBorderOn \u003d false;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Enables displaying of the indentation set for the output handler, if any"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void setIndentOn() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        printIndentOn \u003d true;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Disables displaying of the indentation set for the output handler, if any"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void setIndentOff() {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        printIndentOn \u003d false;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Enables wrapping of the output message if it would go past the header/footer for the output handler, if any"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void setWrapOn() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        wrapOn \u003d true;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Disables wrapping of the output message if it would go past the header/footer for the output handler, if any"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void setWrapOff() {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        wrapOn \u003d false;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Clears the messages stored in the output handler without displaying it"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void clear() {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        outputLines \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Instructs the print stream of the output handler to print the messages stored in the buffer"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void print() {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        // prints header if enabled"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        if (printHeaderOn) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            for (String header : headerLines) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                if (printLeftBorderOn) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    printStream.print(leftBorder);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                printStream.println(header);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        // split all the output into separate lines if there are still \\n or \\r left"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        outputLines \u003d resolveNewLines(outputLines);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        // appends each line to the left indent and left border if any and enabled"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        for (String output : outputLines) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            if (wrapOn) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                // chops strings that are too long for the header/footer and appends the next line to the remaining"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                for (String wrapped : wrap(outputWidth() - leftIndentWidth, output)) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    if (printLeftBorderOn) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                        printStream.print(leftBorder);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    if (printIndentOn) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                        printStream.print(\" \".repeat(leftIndentWidth));"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    printStream.println(wrapped);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                if (printLeftBorderOn) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    printStream.print(leftBorder);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                if (printIndentOn) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    printStream.print(\" \".repeat(leftIndentWidth));"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                printStream.println(output);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        //clears the buffer so other output can be added without wrong output"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        clear();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        // prints footer appended to leftborder if enabled"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        if (printFooterOn) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            for (String footer : footerLines) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                if (printLeftBorderOn) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    printStream.print(leftBorder);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                printStream.println(footer);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        printStream.println();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    // helper method to calculate the max width of output. minimum output width 1 otherwise infinite loops"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private int outputWidth() {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        int width \u003d 1;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        for (String line : headerLines) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            width \u003d Math.max(width, line.length());"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        for (String line : footerLines) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            width \u003d Math.max(width, line.length());"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return width;"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    // helper method to wrap overlength strings"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private static ArrayList\u003cString\u003e wrap(int width, String unwrapped) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        ArrayList\u003cString\u003e wrapped \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        String remaining \u003d unwrapped;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        while (remaining.length() \u003e width) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            wrapped.add(remaining.substring(0, width));"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            remaining \u003d remaining.substring(width);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        wrapped.add(remaining);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return wrapped;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    // helper method to list of strings which may include new line characters with list of single line strings"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private static ArrayList\u003cString\u003e resolveNewLines(ArrayList\u003cString\u003e lines) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        ArrayList\u003cString\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        for (String line : lines) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            for (String lineSplit : line.split(\"[\\\\n\\\\r]\")) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                result.add(lineSplit);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 287
    }
  },
  {
    "path": "src/main/java/duke/io/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.command.AddTaskCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.command.DeleteTaskCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.command.CompleteTaskCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.command.ShowListCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.command.SearchCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.command.Type;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.command.DukeMissingCommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.command.DukeUnknownCommandException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.command.DukeMissingParameterException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": " * Static methods for parsing user input into usable information for other methods"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Tries to parse input string as Date and Time in dd/MM/yyyy HHmm, and format into a format that cannot be misread:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * dd/MM/yyyy HHmm(e.g. 12/12/1212 1212 -\u003e 12th of DECEMBER 1212, 12:12pm)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param dateTimeString The input string to be parsed, and formatted, if possible"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @return The formatted date and time, if it can be formatted"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @throws DukeException The exception thrown when the input cannot be formatted"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public static String parseDateTime(String dateTimeString) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            LocalDateTime dateAndTime \u003d LocalDateTime.parse(dateTimeString, formatter);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            int day \u003d dateAndTime.getDayOfMonth();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            String month \u003d dateAndTime.getMonth().toString();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            int year \u003d dateAndTime.getYear();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            int hour \u003d dateAndTime.getHour();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            int minute \u003d dateAndTime.getMinute();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            StringBuffer dateTime \u003d new StringBuffer();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            dateTime.append(getIntegerOrdinal(day));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            dateTime.append(\" of \");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            dateTime.append(month);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            dateTime.append(\" \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            dateTime.append(year);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            dateTime.append(\", \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            dateTime.append((hour \u003e 12 ? hour - 12 : hour \u003d\u003d 0 ? 12 : hour));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            if (minute !\u003d 0) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                dateTime.append(\":\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                dateTime.append(minute);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            if (hour \u003c 12) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                dateTime.append(\"am\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                dateTime.append(\"pm\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            return dateTime.toString();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } catch (DateTimeParseException exception) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            throw new DukeException(dateTimeString + \" is not in dd/MM/yyyy HHmm format.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    // helper method to format a number into it\u0027s ordinal form"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private static String getIntegerOrdinal(int integer) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        int remainderHundred \u003d integer % 100;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        if (remainderHundred \u003e 9 \u0026\u0026 remainderHundred \u003c 21) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            return integer + \"th\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            int remainderTen \u003d integer % 10;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            switch (remainderTen) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                return integer + \"st\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            case 2:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                return integer + \"nd\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            case 3:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                return integer + \"rd\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                return integer + \"th\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Tries to parse user input as a command, with arguments if any, and formats it in a way that it can be used by"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * other methods using the commands"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param input The input string to be parsed as a command"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @return A data structure containing the type of command, and the arguments provided with it, if any"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @throws DukeException The exception thrown when there is an error when attempting to format the input as command"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public static Command parseAsCommand(String input) throws DukeException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        input \u003d input.trim();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        String[] split \u003d input.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        // was a command provided"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        if (split[0].length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            throw new DukeMissingCommandException();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        // is the command valid"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        Type commandType;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        switch (split[0]) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            return new ShowListCommand();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            commandType \u003d Type.ADD_TODO;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            commandType \u003d Type.ADD_EVENT;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            commandType \u003d Type.ADD_DEADLINE;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            commandType \u003d Type.DELETE;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            commandType \u003d Type.COMPLETE;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            commandType \u003d Type.SEARCH;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            throw new DukeUnknownCommandException();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        // if the command requires further parameters"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        String[] parametersProvided \u003d new String[Type.getNumberOfParametersExpectedFor(commandType)];"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        Iterator\u003cString\u003e delimiterIterator \u003d Type.getDelimitersFor(commandType).iterator();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        String nextDelimiter;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        int parameterCount \u003d 0;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        if (delimiterIterator.hasNext()) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            nextDelimiter \u003d delimiterIterator.next();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            nextDelimiter \u003d \" \";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            // since split by whitespaces there will not be a word that is \" \""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        StringBuffer currentParameter \u003d new StringBuffer();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d split.length; i++) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            if (i \u003d\u003d split.length || split[i].equals(nextDelimiter)) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                String parameter \u003d currentParameter.toString().trim();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                if (parameter.length() \u003e 0) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    parametersProvided[parameterCount] \u003d parameter;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    parametersProvided[parameterCount] \u003d null;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                if (i \u003c split.length \u0026\u0026 split[i].equals(nextDelimiter)) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    if (delimiterIterator.hasNext()) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                        nextDelimiter \u003d delimiterIterator.next();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                        nextDelimiter \u003d \" \";"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                currentParameter \u003d new StringBuffer();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                parameterCount++;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                currentParameter.append(split[i]);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                currentParameter.append(\" \");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        for (String parameter : parametersProvided) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            if (parameter \u003d\u003d null) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                throw new DukeMissingParameterException(commandType, parametersProvided);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            return new DeleteTaskCommand(parametersProvided[0]);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        case COMPLETE:"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            return new CompleteTaskCommand(parametersProvided[0]);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        case SEARCH:"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            return new SearchCommand(parametersProvided[0]);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        case ADD_TODO:"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        case ADD_DEADLINE:"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        case ADD_EVENT:"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            return new AddTaskCommand(commandType, parametersProvided);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            return null; //unreachable"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 205
    }
  },
  {
    "path": "src/main/java/duke/io/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.tasklist.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.tasklist.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.tasklist.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.tasklist.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": " * File handler responsible for reading/writing from/to files in order to load/save the task list in between sessions."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Constructs an instance of the file handler"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param path The path to the file in the src/main/resource/SaveFiles/ directory"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public Storage(String path) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        filePath \u003d \"src/main/resources/SaveFiles/\".concat(path);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private static void writeFromDeadline(Deadline task, FileWriter file) throws IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(\"D\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(System.lineSeparator());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(task.isComplete() ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(System.lineSeparator());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(task.getDescription());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(System.lineSeparator());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(task.time);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(System.lineSeparator());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private static void writeFromEvent(Event task, FileWriter file) throws IOException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(\"E\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(System.lineSeparator());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(task.isComplete() ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(System.lineSeparator());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(task.getDescription());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(System.lineSeparator());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(task.time);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(System.lineSeparator());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private static void writeFromToDo(ToDo task, FileWriter file) throws IOException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(\"T\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(System.lineSeparator());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(task.isComplete() ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(System.lineSeparator());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(task.getDescription());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(System.lineSeparator());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Returns the task list from the data stored in the file at the file path provided during initialization"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @return The task list from data stored in the file"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @throws DukeException Exception thrown when error occurs when trying to recreate the task list"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public TaskList loadTaskList() throws DukeException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        // read file path"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        BufferedReader file;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            file \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            // populate tasklist"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            int tasksExpected \u003d Integer.parseInt(file.readLine());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            while (tasksExpected \u003e 0) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                tasksExpected--;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                switch (file.readLine()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    taskList.add(readAsDeadline(file));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    taskList.add(readAsEvent(file));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    taskList.add(readAsToDo(file));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    throw new DukeException(\"The save file at \", filePath, \" is corrupt.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    //throw DukeCorruptSaveFileException(filePath);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            throw new DukeInvalidFilePathException(filePath);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } catch (IOException | NumberFormatException ex) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            throw new DukeException(\"The save file at ,\", filePath, \" is corrupt.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private Deadline readAsDeadline(BufferedReader file) throws IOException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        boolean isComplete \u003d !file.readLine().equals(\"0\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return new Deadline(isComplete, file.readLine(), file.readLine());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private ToDo readAsToDo(BufferedReader file) throws IOException {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        boolean isComplete \u003d !file.readLine().equals(\"0\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return new ToDo(isComplete, file.readLine());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private Event readAsEvent(BufferedReader file) throws IOException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        boolean isComplete \u003d !file.readLine().equals(\"0\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return new Event(isComplete, file.readLine(), file.readLine());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Writes/Saves the task list into the file path provided during initialization"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param taskList The task list to be saved at the file path"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @throws DukeException Exception thrown when error occurs when trying to save the task list"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void save(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        FileWriter file;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            file \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            // list size"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            file.append(Integer.toString(taskList.size()));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            file.append(System.lineSeparator());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            // per task in list"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            for (Task task : taskList.list()) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                switch (task.getClass().getSimpleName()) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                case \"ToDo\":"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    writeFromToDo((ToDo) task, file);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                case \"Event\":"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    writeFromEvent((Event) task, file);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                case \"Deadline\":"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    writeFromDeadline((Deadline) task, file);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            file.close();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } catch (FileNotFoundException exception) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            throw new DukeInvalidFilePathException(filePath);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            // FileNotFoundException should the only exception, if it is not then:"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            System.err.println(exception.getMessage());"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "briyanii"
        },
        "content": "//saved file format"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "briyanii"
        },
        "content": "/*"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    total_#_of_tasks"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    task_type"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    task_completion_status"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    task_description"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    task_time(depends on type if needed);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    task_type..."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ..."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ..."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ..."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "briyanii"
        },
        "content": " */"
      }
    ],
    "authorContributionMap": {
      "briyanii": 176
    }
  },
  {
    "path": "src/main/java/duke/tasklist/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.io.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": " * Class representing a deadline task in the task list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public String time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Constructs the deadline task (incomplete by default)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param description The description of the deadline task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param time        The time the deadline task needs to be completed"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public Deadline(String description, String time) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            this.time \u003d Parser.parseDateTime(time);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            this.time \u003d time;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Constructs the deadline task along with the completion status of the class"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param isComplete  The completion status of the task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param description The description of the task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param time        The time the task needs to be completed by"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public Deadline(boolean isComplete, String description, String time) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            this.time \u003d Parser.parseDateTime(time);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            this.time \u003d time;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        taskCompletionStatus \u003d isComplete;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Returns the string representation of the class"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @return The string representation of the class"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return new StringBuilder(\"[D]\").append(super.toString())"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .append(\" (by: \")"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .append(time)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .append(\")\")"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .toString();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 57
    }
  },
  {
    "path": "src/main/java/duke/tasklist/DukeEmptyListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": " * Exception to be thrown when an error occurs because the task list is empty"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class DukeEmptyListException extends DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Constructs the exception to be thrown"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public DukeEmptyListException() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        super(\"Your list is empty!\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 16
    }
  },
  {
    "path": "src/main/java/duke/tasklist/DukeNoCorrespondingTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": " * Exception to be thrown when an error occurs because a command to modify a task, which is not in the task list,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": " * is executed."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class DukeNoCorrespondingTaskException extends DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Constructs the exception to be thrown"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param number The number that does not match a task number in the task list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public DukeNoCorrespondingTaskException(int number) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        super(\"The following number does not correspond to a task in the list: \", Integer.toString(number));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 18
    }
  },
  {
    "path": "src/main/java/duke/tasklist/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.io.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": " * Class representing an Event task in the task list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public String time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Constructs an Event task which is incomplete initially"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param description The description of the event"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param time        The time the event occurs at"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            this.time \u003d Parser.parseDateTime(time);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            this.time \u003d time;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Constructs an Event task with the completion status provided"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param isComplete  The completion status of the Event"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param description The description of the event"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param time        The time the event occurs"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public Event(boolean isComplete, String description, String time) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            this.time \u003d Parser.parseDateTime(time);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            this.time \u003d time;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        taskCompletionStatus \u003d isComplete;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Returns the string representation of the task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @return The string representation of the task"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return new StringBuilder(\"[E]\").append(super.toString())"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .append(\" (at: \")"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .append(time)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .append(\")\")"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .toString();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 58
    }
  },
  {
    "path": "src/main/java/duke/tasklist/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": " * Abstract class representing a task which can be added to a task list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    boolean taskCompletionStatus;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Default constructor for classes which extend from Task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param description The description of the task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        taskCompletionStatus \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        taskDescription \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Sets the completion status of the task to completed"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @return This task which has been marked as completed"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public Task complete() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        taskCompletionStatus \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Returns if the task has been completed or not"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @return True if the task is complete, false otherwise"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public boolean isComplete() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return taskCompletionStatus;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Returns the description of the task"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @return The description of the task"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return new String(taskDescription);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Returns the string representation of the task"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @return The string representation of the task"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return new StringBuilder(\"[\").append((taskCompletionStatus ? \"✓\" : \"✗\"))"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .append(\"] \")"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .append(taskDescription)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .toString();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 60
    }
  },
  {
    "path": "src/main/java/duke/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.command.DukeIncorrectParameterTypeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": " * Class to represent a list of tasks"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Constructs an empty task list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Adds a task to the task list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param t The task to be added to the list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @return The task which was added to the list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public Task addTask(Task t) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        taskList.add(t);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Returns a copy of the array list used to store the tasks in the list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @return An array list which contains the tasks in the task list"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public ArrayList\u003cTask\u003e list() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return new ArrayList\u003cTask\u003e(taskList);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Returns the number of tasks in the task list"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @return The number of tasks in the task list"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Deletes the task with the number corresponding to the number provided, if it exists"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param id The number corresponding to the task in the task list"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @return The task which was deleted from the list, if it exists"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @throws DukeException The exception thrown when an error occurs when trying to delete the task from the list"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public Task delete(int id) throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            return taskList.remove(id - 1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            // task id does not correspond to task in list"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            throw new DukeNoCorrespondingTaskException(id);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Adds the tasks to the task list"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param task The task to be added to the list"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @return The task which was added to the list"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public Task add(Task task) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Deletes the task with the number corresponding to the number provided, if it exists"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param id The number corresponding to the task in the task list, in string form"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @return The task which was deleted from the list, if it exists"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @throws DukeException The exception thrown when an error occurs when trying to delete the task from the list"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public Task delete(String id) throws DukeException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            return delete(Integer.parseInt(id));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            throw new DukeIncorrectParameterTypeException(\"Integer\", id);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Marks the task with the number corresponding to the number provided, if it exists, as done"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param id The number corresponding to the task in the task list"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @return The Task which was marked as done"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @throws DukeException The exception thrown when an error occurs when trying to mark the task as done"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public Task complete(int id) throws DukeException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            return taskList.get(id - 1).complete();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            throw new DukeNoCorrespondingTaskException(id);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Marks the task with the number corresponding to the number provided, if it exists, as done"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param id The number corresponding to the task in the task list, in string form"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @return The Task which was marked as done"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @throws DukeException The exception thrown when an error occurs when trying to mark the task as done"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public Task complete(String id) throws DukeException {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            return complete(Integer.parseInt(id));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            throw new DukeIncorrectParameterTypeException(\"Integer\", id);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Returns the Tasks which contain the keyword provided"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param keyword The keyword to search for in the task list"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @return An ArrayList containing the tasks which contain the keyword"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public ArrayList\u003cTask\u003e search(String keyword) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        //searches the string representation of the class"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        ArrayList\u003cTask\u003e results \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        for (Task t : this.taskList) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            if (t.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                results.add(t);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return results;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 138
    }
  },
  {
    "path": "src/main/java/duke/tasklist/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": " * Class representing a to do task which can be added to the task list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Constructs the todo task, initially incomplete"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param description The description of the task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Constructs the todo task, with the completion status provided"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param isComplete  The completion status of the task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @param description The description of the task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public ToDo(boolean isComplete, String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        taskCompletionStatus \u003d isComplete;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Returns the string representation of the todo task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * @return The string representation of the todo task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return \"[T]\".concat(super.toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 37
    }
  },
  {
    "path": "src/main/resources/SaveFiles/DukeSave01.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "7"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": "D"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "somethin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "something"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "E"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "0"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "somewhere"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "12th of DECEMBER 1212, 12:12pm"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "T"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "a"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "T"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "0"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "a"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "D"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "b"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "a"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "E"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "0"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "c"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "d"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": "D"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "0"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": "a"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": "12th of DECEMBER 1212, 12:12pm"
      }
    ],
    "authorContributionMap": {
      "briyanii": 27
    }
  },
  {
    "path": "src/test/java/duke/frontend/UserInterfaceTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.io.Parser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.command.DukeMissingCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.command.DeleteTaskCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.command.CompleteTaskCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.command.DukeIncorrectParameterTypeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.frontend.UserInterface;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": " * Class to test functionality of certain methods in the UserInterface class"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class UserInterfaceTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    UserInterface ui \u003d new UserInterface();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Test whether an exception is thrown when the wrong type of arguement is used for the commands to delete a task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * or mark a task as done"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void executeCommand_incorrectArgumentType_exceptionThrown() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeIncorrectParameterTypeException.class,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                () -\u003e ui.executeCommand(new DeleteTaskCommand(\"a\")));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeIncorrectParameterTypeException.class,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                () -\u003e ui.executeCommand(new CompleteTaskCommand(\"a\")));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Test whether an exception is thrown when an empty command is given"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void executeCommand_noInput_exceptionThrown() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeMissingCommandException.class,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                () -\u003e ui.executeCommand(Parser.parseAsCommand(\"\")));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 39
    }
  },
  {
    "path": "src/test/java/duke/io/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.io.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.command.AddTaskCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.command.ShowListCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.command.DukeMissingParameterException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": " * Class to test certain functionality of the Parser class"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Test that the parseDateTime method can output the properly formatted date and time when a valid input is given"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void parseDateTime_validInput_success() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            assertEquals(\"12th of DECEMBER 1212, 12:12pm\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    Parser.parseDateTime(\"12/12/1212 1212\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            assertEquals(\"12th of DECEMBER 1212, 12:12am\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    Parser.parseDateTime(\"12/12/1212 0012\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            assertEquals(\"23rd of JANUARY 2019, 11pm\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    Parser.parseDateTime(\"23/01/2019 2300\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            fail(\"Should not have thrown exception\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Test that the parseDateTime method throws an exception when it tries to parse and format an invalid input"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void parseDateTime_invalidInput_exceptionThrown() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parseDateTime(\"1212\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parseDateTime(\"12/12/1212\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parseDateTime(\"12pm\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parseDateTime(\"never\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Test that the parseDateTime method throws an exception when the input looks valid but cannot be formatted to the"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * expected format"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void parseDateTime_validLookingInvaliButdInput_exceptionThrown() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parseDateTime(\"12/00/1212 1212\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parseDateTime(\"12/13/1212 1212\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parseDateTime(\"99/12/1212 1212\"));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parseDateTime(\"00/12/1212 1212\"));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parseDateTime(\"12/12/0000 1212\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Test that the parseAsCommand method throws a DukeMissingParameterException when the it tries to parse a input"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * as a command, but the required arguments are not provided"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void parseAsCommand_missingParameter_exceptionThrown() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        //task commands"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeMissingParameterException.class, () -\u003e Parser.parseAsCommand(\"todo \"));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeMissingParameterException.class, () -\u003e Parser.parseAsCommand(\"deadline \"));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeMissingParameterException.class, () -\u003e Parser.parseAsCommand(\"deadline task\"));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeMissingParameterException.class, () -\u003e Parser.parseAsCommand(\"deadline /by time\"));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeMissingParameterException.class, () -\u003e Parser.parseAsCommand(\"event \"));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeMissingParameterException.class, () -\u003e Parser.parseAsCommand(\"event task \"));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeMissingParameterException.class, () -\u003e Parser.parseAsCommand(\"event /at time\"));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        //other commands"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeMissingParameterException.class, () -\u003e Parser.parseAsCommand(\"done \"));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeMissingParameterException.class, () -\u003e Parser.parseAsCommand(\"delete \"));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Test that the parseAsCommand method properly ignores redundant input when attempting to parse commands"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * which require 0 arguments."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void parseAsCommand_redundantArgumentForNoArgumentCommands_success() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            assertTrue(Parser.parseAsCommand(\"list 1\") instanceof ShowListCommand);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            assertTrue(Parser.parseAsCommand(\"bye 1\") instanceof ExitCommand);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            assertTrue(Parser.parseAsCommand(\"list a\") instanceof ShowListCommand);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            assertTrue(Parser.parseAsCommand(\"bye a\") instanceof ExitCommand);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            fail(\"Should return a command ignoring the redundant arguments\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     * Test that the parseAsCommand method properly returns an AddTaskCommand when the input is valid"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void parseAsCommand_nonParseableTimeForDeadlineOrEvent_success() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            assertTrue(Parser.parseAsCommand(\"deadline task /by time\") instanceof AddTaskCommand);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            assertTrue(Parser.parseAsCommand(\"event task /at time\") instanceof AddTaskCommand);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            fail(\"Should return without formatting the time argument into dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 113
    }
  },
  {
    "path": "text-ui-test/actual1.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Hello! I\u0027m Duke :)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Got it! I\u0027ve added this task to the list:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [T][✗] task_1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Got it! I\u0027ve added this task to the list:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [D][✗] task_2 (by: 2pm)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Got it! I\u0027ve added this task to the list:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [E][✗] task_3 (at: 3pm)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     1.[T][✗] task_1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     2.[D][✗] task_2 (by: 2pm)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     3.[E][✗] task_3 (at: 3pm)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [T][✓] task_1"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [D][✓] task_2 (by: 2pm)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     1.[T][✓] task_1"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     2.[D][✓] task_2 (by: 2pm)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     3.[E][✗] task_3 (at: 3pm)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Alright. I\u0027ve removed this task from your list:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [T][✓] task_1"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Alright. I\u0027ve removed this task from your list:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [D][✓] task_2 (by: 2pm)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     1.[E][✗] task_3 (at: 3pm)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "briyanii": 75
    }
  },
  {
    "path": "text-ui-test/actual2.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Hello! I\u0027m Duke :)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! Your list is empty!"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! The number 0 does not correspond to a task in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! The number -1 does not correspond to a task in the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! \"1.5\" cannot be converted to an integer. Please enter a valid integer as a parameter."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! \"one\" cannot be converted to an integer. Please enter a valid integer as a parameter."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Got it! I\u0027ve added this task to the list:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [T][✗] todo_task_1"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Got it! I\u0027ve added this task to the list:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [T][✗] todo_task_2"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! A TODO requires the following field(s) to be non-empty: (1)description "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Got it! I\u0027ve added this task to the list:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [D][✗] deadline_task_1 (by: 12pm)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! A DEADLINE requires the following field(s) to be non-empty: (1)description (2)time "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! A DEADLINE requires the following field(s) to be non-empty: (1)description (2)time "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! A DEADLINE requires the following field(s) to be non-empty: (1)description (2)time "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Got it! I\u0027ve added this task to the list:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [E][✗] event_task_1 (at: 3pm)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! A EVENT requires the following field(s) to be non-empty: (1)description (2)time "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! A EVENT requires the following field(s) to be non-empty: (1)description (2)time "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! A EVENT requires the following field(s) to be non-empty: (1)description (2)time "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     1.[T][✗] todo_task_1"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     2.[T][✗] todo_task_2"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     3.[D][✗] deadline_task_1 (by: 12pm)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     4.[E][✗] event_task_1 (at: 3pm)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [T][✓] todo_task_1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [D][✓] deadline_task_1 (by: 12pm)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     1.[T][✓] todo_task_1"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     2.[T][✗] todo_task_2"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     3.[D][✓] deadline_task_1 (by: 12pm)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     4.[E][✗] event_task_1 (at: 3pm)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Alright. I\u0027ve removed this task from your list:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [T][✗] todo_task_2"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     1.[T][✓] todo_task_1"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     2.[D][✓] deadline_task_1 (by: 12pm)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     3.[E][✗] event_task_1 (at: 3pm)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "briyanii": 127
    }
  },
  {
    "path": "text-ui-test/input1.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "todo task_1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": "deadline task_2 /by 2pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "event task_3 /at 3pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "briyanii": 11
    }
  },
  {
    "path": "text-ui-test/input2.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "done -1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "done 1.5"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "done one"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "todo todo_task_1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "todo todo_task_2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "todo"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "deadline deadline_task_1 /by 12pm"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "deadline deadline_task_2 /at 3pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "deadline deadline_task_3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "event event_task_1 /at 3pm"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "event event_task_2 /by 4pm"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "event /at 3pm"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "event"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "briyanii": 23
    }
  },
  {
    "path": "text-ui-test/output1.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Hello! I\u0027m Duke :)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Got it! I\u0027ve added this task to the list:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [T][✗] task_1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Got it! I\u0027ve added this task to the list:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [D][✗] task_2 (by: 2pm)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Got it! I\u0027ve added this task to the list:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [E][✗] task_3 (at: 3pm)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     1.[T][✗] task_1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     2.[D][✗] task_2 (by: 2pm)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     3.[E][✗] task_3 (at: 3pm)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [T][✓] task_1"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [D][✓] task_2 (by: 2pm)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     1.[T][✓] task_1"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     2.[D][✓] task_2 (by: 2pm)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     3.[E][✗] task_3 (at: 3pm)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Alright. I\u0027ve removed this task from your list:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [T][✓] task_1"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Alright. I\u0027ve removed this task from your list:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [D][✓] task_2 (by: 2pm)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     1.[E][✗] task_3 (at: 3pm)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "briyanii": 75
    }
  },
  {
    "path": "text-ui-test/output2.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Hello! I\u0027m Duke :)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! Your list is empty!"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! The number 0 does not correspond to a task in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! The number -1 does not correspond to a task in the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! \"1.5\" cannot be converted to an integer. Please enter a valid integer as a parameter."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! \"one\" cannot be converted to an integer. Please enter a valid integer as a parameter."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Got it! I\u0027ve added this task to the list:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [T][✗] todo_task_1"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Got it! I\u0027ve added this task to the list:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [T][✗] todo_task_2"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! A TODO requires the following field(s) to be non-empty: (1)description "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Got it! I\u0027ve added this task to the list:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [D][✗] deadline_task_1 (by: 12pm)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! A DEADLINE requires the following field(s) to be non-empty: (1)description (2)time "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! A DEADLINE requires the following field(s) to be non-empty: (1)description (2)time "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! A DEADLINE requires the following field(s) to be non-empty: (1)description (2)time "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Got it! I\u0027ve added this task to the list:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [E][✗] event_task_1 (at: 3pm)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! A EVENT requires the following field(s) to be non-empty: (1)description (2)time "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! A EVENT requires the following field(s) to be non-empty: (1)description (2)time "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! A EVENT requires the following field(s) to be non-empty: (1)description (2)time "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     1.[T][✗] todo_task_1"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     2.[T][✗] todo_task_2"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     3.[D][✗] deadline_task_1 (by: 12pm)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     4.[E][✗] event_task_1 (at: 3pm)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [T][✓] todo_task_1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [D][✓] deadline_task_1 (by: 12pm)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     1.[T][✓] todo_task_1"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     2.[T][✗] todo_task_2"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     3.[D][✓] deadline_task_1 (by: 12pm)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     4.[E][✗] event_task_1 (at: 3pm)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Alright. I\u0027ve removed this task from your list:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [T][✗] todo_task_2"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     1.[T][✓] todo_task_1"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     2.[D][✓] deadline_task_1 (by: 12pm)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     3.[E][✗] event_task_1 (at: 3pm)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "briyanii": 127
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "if [ -e \"./actual$1.txt\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    rm actual$1.txt"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "if ! javac -classpath ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "java -classpath ../bin Duke \u003c input$1.txt \u003e actual$1.txt"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": "diff actual$1.txt output$1.txt"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    echo \"Test $1 result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    echo \"Test $1 result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "briyanii"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "briyanii": 34
    }
  }
]
