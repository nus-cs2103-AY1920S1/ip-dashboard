[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "run {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanjunren": 5,
      "-": 15
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    protected String deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    public Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + deadline + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanjunren": 18
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "import java.nio.file.FileSystems;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d initializeTaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                String[] splitString \u003d input.split(\" \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                String taskType \u003d splitString[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                        System.out.println(i + 1 + \".\" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                } else if (splitString[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    int taskNum \u003d Integer.valueOf(splitString[1]) - 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    tasks.get(taskNum).markAsDone();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    System.out.println(\"    [\" + tasks.get(taskNum).getStatusIcon() + \"] \" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                            tasks.get(taskNum).getDescription());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                } else if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    System.out.println(\"Bye! Hope to see you again!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                } else if (taskType.equals(\"todo\") || taskType.equals(\"deadline\") || taskType.equals(\"event\")){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    addNewTask(taskType, input, tasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                } else if (taskType.equals(\"delete\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    int index \u003d Integer.valueOf(splitString[1]) - 1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    deleteTask(index, tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    throw new InvalidCommandException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    static ArrayList\u003cTask\u003e initializeTaskList() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "            String content \u003d Files.readString(FileSystems.getDefault().getPath(\"data\", \"duke.txt\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "            String[] storedTasks \u003d content.split(\"\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "            // Adding tasks stored in the text file"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "            for (String s: storedTasks) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                if (s.charAt(0) \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    Todo todo \u003d new Todo(s.substring(8));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    if (s.charAt(4) !\u003d \u00270\u0027) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                        todo.markAsDone();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    tasks.add(todo);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                } else if (s.charAt(0) \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    String[] tempSplit \u003d s.substring(8).split(\"\\\\u007C \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    Event event \u003d new Event(tempSplit[0].trim(), tempSplit[1].trim());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    if (s.charAt(4) !\u003d \u00270\u0027) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                        event.markAsDone();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    tasks.add(event);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                } else if (s.charAt(0) \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    String[] tempSplit \u003d s.substring(8).split(\"\\\\u007C \");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    Deadline deadline \u003d new Deadline(tempSplit[0].trim(), tempSplit[1].trim());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    if (s.charAt(4) !\u003d \u00270\u0027) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                        deadline.markAsDone();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    tasks.add(deadline);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    static Task addNewTask(String taskType, String input, ArrayList\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                String[] todoSplit \u003d input.split(\"todo \");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                if (todoSplit.length \u003d\u003d 1 || todoSplit[1].isEmpty()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    throw new InvalidDescriptionException(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                Todo todo \u003d new Todo(todoSplit[1].trim());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                tasks.add(todo);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + todo);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                t \u003d todo;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "            case \"deadline\": {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                String[] deadlineSplit \u003d input.split(\"/by \");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                String[] temp \u003d deadlineSplit[0].split(\"deadline \");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                if (temp.length \u003d\u003d 1 || temp[1].isEmpty()) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    throw new InvalidDescriptionException(\"\\u2639 OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                Deadline deadline \u003d new Deadline(temp[1].trim(), deadlineSplit[1].trim());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                tasks.add(deadline);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task:\\n \" + deadline);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                t \u003d deadline;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "            case \"event\": {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                String[] deadlineSplit \u003d input.split(\"/at \");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                String[] temp \u003d deadlineSplit[0].split(\"event \");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                if (temp.length \u003d\u003d 1 || temp[1].isEmpty()) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    throw new InvalidDescriptionException(\"\\u2639 OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                Event event \u003d new Event(temp[1].trim(), deadlineSplit[1].trim());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                tasks.add(event);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task:\\n \" + event);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                t \u003d event;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "            default: {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                t \u003d null;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                System.out.println(\"If you see this something is wrong \u003e:D\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        if (tasks.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "            System.out.println(\"Now you have \" + tasks.size() + \" task in the list.\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        updateFile(tasks);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    static void deleteTask(int index, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        Task removed \u003d tasks.remove(index);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\\n  \" + removed);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        if (tasks.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "            System.out.println(\"Now you have \" + tasks.size() + \" task in the list.\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        updateFile(tasks);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    static void updateFile(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "            FileWriter fw \u003d new FileWriter(new File(\"data/duke.txt\"));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                String type \u003d tasks.get(i) instanceof Event ? \"E\""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                        : tasks.get(i) instanceof Todo ? \"T\""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                        : tasks.get(i) instanceof Deadline ? \"D\""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                        : \"INVALID CLASS\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                String isDone \u003d tasks.get(i).isDone() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                if (tasks.get(i) instanceof Todo) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    fw.append(type + \" | \" + isDone + \" | \" + tasks.get(i).getDescription());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                } else if (tasks.get(i) instanceof Event) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    fw.append(type + \" | \" + isDone + \" | \" + tasks.get(i).getDescription() + \" | \""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                            + ((Event) tasks.get(i)).getTimeFrame());"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                } else if (tasks.get(i) instanceof  Deadline) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    fw.append(type + \" | \" + isDone + \" | \" + tasks.get(i).getDescription() + \" | \""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                            + ((Deadline) tasks.get(i)).getDeadline());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                if (i !\u003d tasks.size() - 1) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    fw.append(\"\\n\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "            }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanjunren": 167,
      "-": 11
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanjunren": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    protected String timeFrame;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    public Event(String description, String timeFrame) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        this.timeFrame \u003d timeFrame;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    public String getTimeFrame() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        return timeFrame;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + timeFrame + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanjunren": 17
    }
  },
  {
    "path": "src/main/java/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanjunren": 5
    }
  },
  {
    "path": "src/main/java/InvalidDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "public class InvalidDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    public InvalidDescriptionException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanjunren": 5
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanjunren": 32
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanjunren": 10
    }
  }
]
