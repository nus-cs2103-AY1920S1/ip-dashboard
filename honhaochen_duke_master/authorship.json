[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    public Deadline(String description, String date) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "honhaochen": 14
    }
  },
  {
    "path": "src/main/java/DeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "public class DeadlineException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    public DeadlineException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        super(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    public DeadlineException(String msg) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "honhaochen": 11
    }
  },
  {
    "path": "src/main/java/DeleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "public class DeleteException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    public DeleteException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        super(\"OOPS!!! The description of a delete cannot be empty.\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    public DeleteException(String msg) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "honhaochen": 11
    }
  },
  {
    "path": "src/main/java/DoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "public class DoneException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    public DoneException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        super(\"OOPS!!! The description of a done cannot be empty, please indicate which task is done :)\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    public DoneException(String msg) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "honhaochen": 11
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        String horizontalLine \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        //Greetings message"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        System.out.println(\"     Hello from! I\u0027m Duke\\n\" + \"     What can I do for you?\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        System.out.println(horizontalLine + \"\\n\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        //Setup Scanner and List"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        List\u003cTask\u003e store \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        //Scanner reading"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        String userInput \u003d sc.next();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        while (!userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "            if (userInput.equals(\"list\")) { //list out"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                int i \u003d 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                for (Task task : store) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    System.out.println(\"     \" + i + \". \" + task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    i++;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                System.out.println(horizontalLine + \"\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "            } else if (userInput.equals(\"done\")) { //done"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                String argument \u003d sc.nextLine().strip();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                if (argument.isEmpty()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    System.err.println(\"     \" + new DoneException());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    System.out.println(horizontalLine + \"\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    int taskToBeDone \u003d Integer.parseInt(argument);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    if (store.size() \u003c taskToBeDone) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        System.err.println(\"     \" + new DoneException(\"OOPS!!! There is no such task in your list!\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        System.out.println(\"     \" + \"Current number of tasks \u003d \" + store.size());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        System.out.println(horizontalLine + \"\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        Task task \u003d store.get(taskToBeDone - 1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        if (task.isDone) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                            System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                            System.out.println(\"     Hey! I\u0027ve already marked this task as done :)\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                            System.out.println(\"       \" + task);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                            System.out.println(horizontalLine + \"\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                            task.markAsDone();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                            System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                            System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                            System.out.println(\"       \" + task);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                            System.out.println(horizontalLine + \"\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "            } else if (userInput.equals(\"todo\")) { //todo task"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                String argument \u003d sc.nextLine().strip();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                if (argument.isEmpty()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    System.err.println(\"      \" + new ToDoException());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    System.out.println(horizontalLine + \"\\n\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    Task newToDoTask \u003d new ToDo(argument);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    store.add(newToDoTask);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    System.out.println(\"       \" + newToDoTask);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    if (store.size() \u003e 1) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        System.out.println(\"     Now you have \" + store.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        System.out.println(\"     Now you have \" + store.size() + \" task in the list.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    System.out.println(horizontalLine + \"\\n\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "            } else if (userInput.equals(\"deadline\")) { //deadline task"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                String argument \u003d sc.nextLine().strip();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                if (argument.isEmpty()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    System.err.println(\"     \" + new DeadlineException());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    System.out.println(horizontalLine + \"\\n\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    String[] splitResult \u003d argument.split(\"/\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    if (splitResult.length !\u003d 2) { //there might be a typo"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        System.err.println(\"     \" + new DeadlineException(\"OOPS!!! Did you type anything wrongly?\"));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        System.out.println(\"     \" + \"Make sure to use \u0027/\u0027 to indicate timing!\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        System.out.println(horizontalLine + \"\\n\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        Task newDeadlineTask \u003d new Deadline(splitResult[0].strip(), splitResult[1].strip());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        store.add(newDeadlineTask);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        System.out.println(\"       \" + newDeadlineTask);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        if (store.size() \u003e 1) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                            System.out.println(\"     Now you have \" + store.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                            System.out.println(\"     Now you have \" + store.size() + \" task in the list.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        System.out.println(horizontalLine + \"\\n\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "            } else if (userInput.equals(\"event\")) { //event task"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                String argument \u003d sc.nextLine().strip();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                if (argument.isEmpty()) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    System.err.println(\"     \" + new EventException());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    System.out.println(horizontalLine + \"\\n\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    String[] splitResult \u003d argument.split(\"/\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    if (splitResult.length !\u003d 2) { //there might be a typo"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        System.err.println(\"     \" + new EventException(\"OOPS!!! Did you type anything wrongly?\"));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        System.out.println(\"     \" + \"Make sure to use \u0027/\u0027 to indicate timing!\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        System.out.println(horizontalLine + \"\\n\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        Task newEventTask \u003d new Event(splitResult[0].strip(), splitResult[1].strip());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        store.add(newEventTask);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        System.out.println(\"       \" + newEventTask);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        if (store.size() \u003e 1) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                            System.out.println(\"     Now you have \" + store.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                            System.out.println(\"     Now you have \" + store.size() + \" task in the list.\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        System.out.println(horizontalLine + \"\\n\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "            } else if (userInput.equals(\"delete\")) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                String argument \u003d sc.nextLine().strip();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                if (argument.isEmpty()) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    System.err.println(\"     \" + new DeleteException());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    System.out.println(horizontalLine + \"\\n\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    int taskToDelete \u003d Integer.parseInt(argument);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    if (store.size() \u003c taskToDelete) { //check if it\u0027s a valid delete"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        System.err.println(\"     \" + new DeleteException(\"OOPS!!! There is no such task in your list!\"));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        System.out.println(\"     \" + \"Current number of tasks \u003d \" + store.size());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        System.out.println(horizontalLine + \"\\n\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        Task task \u003d store.get(taskToDelete - 1);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        store.remove(taskToDelete - 1);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        System.out.println(\"     Noted I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        System.out.println(\"       \" + task);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        if (store.size() \u003e 1) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                            System.out.println(\"     Now you have \" + store.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                            System.out.println(\"     Now you have \" + store.size() + \" task in the list.\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                        System.out.println(horizontalLine + \"\\n\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                System.err.println(\"     \" + new InvalidInstructionException());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "                System.out.println(horizontalLine + \"\\n\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "            userInput \u003d sc.next();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        //Bye message"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "honhaochen": 170,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "honhaochen": 7
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    public Event(String description, String date) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "honhaochen": 14
    }
  },
  {
    "path": "src/main/java/EventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "public class EventException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    public EventException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        super(\"OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    public EventException(String msg) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "honhaochen": 11
    }
  },
  {
    "path": "src/main/java/InvalidInstructionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "public class InvalidInstructionException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    public InvalidInstructionException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "honhaochen": 7
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "honhaochen": 23
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "honhaochen": 13
    }
  },
  {
    "path": "src/main/java/ToDoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "public class ToDoException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    public ToDoException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "        super(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "honhaochen": 7
    }
  }
]
