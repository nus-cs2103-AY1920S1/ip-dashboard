[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        return \"[D]\" + this.getStatusIcon() + this.getDescription() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yen-Peng": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    private static Task[] Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String greet \u003d \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                + \"Hello! My name is Smart Baby~\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                + \"(๑★ᴗ★๑) What can I do for you?\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                + \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        System.out.println(greet);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        while(true) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                BufferedReader bufferRead \u003d new BufferedReader(new InputStreamReader(System.in));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                String userInput \u003d bufferRead.readLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                switch (userInput) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                            assert tasks.get(i) !\u003d null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                            System.out.println((i + 1) + \".\" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    case \"bye\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                + \"Zzz...sleeping time! ~u~\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        System.exit(0);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                            String[] segments \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                            checkErrors(segments);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                            String word \u003d segments[0];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                            String rest \u003d segments[1];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                            String second \u003d userInput.split(\" \")[1];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                            switch (word) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                case \"done\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                    int selectedToBeDone \u003d Integer.parseInt(second);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                    tasks.get(selectedToBeDone - 1).markAsDone(tasks.get(selectedToBeDone - 1));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                    System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                            + \"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                            + tasks.get(selectedToBeDone - 1) + \"\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                            + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                    break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                case \"todo\": {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                    Todo t \u003d new Todo(rest);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                    tasks.add(t);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                    System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                            + \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                            + tasks.get(tasks.size() - 1) + \"\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                            + \"Now you have \" + tasks.size() + \" tasks in the list.\\n\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                            + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                    break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                case \"deadline\": {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                    String[] parts \u003d rest.split(\"/by\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                    String part1 \u003d parts[0];"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                    String part2 \u003d parts[1];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                    Deadline d \u003d new Deadline(parts[0], parts[1]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                    tasks.add(d);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                    System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                            + \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                            + tasks.get(tasks.size() - 1) + \"\\n\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                            + \"Now you have \" + tasks.size() + \" tasks in the list.\\n\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                            + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                    break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                case \"event\": {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                    String[] parts \u003d rest.split(\"/at\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                    String part1 \u003d parts[0];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                    String part2 \u003d parts[1];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                    Event e \u003d new Event(parts[0], parts[1]);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                    tasks.add(e);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                    System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                            + \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                            + tasks.get(tasks.size() - 1) + \"\\n\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                            + \"Now you have \" + tasks.size() + \" tasks in the list.\\n\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                            + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                    break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                default:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                    throw new DukeException(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                            + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                                            + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                            System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public static void checkErrors(String[] segments) throws DukeException {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        if (segments.length \u003d\u003d 1 \u0026\u0026 segments[0].equals(\"\")) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            throw new DukeException(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    + \"( ͡° ͜ʖ ͡°) Ahh I can\u0027t read your mind yet, say something.\\n\""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        } else if (segments.length \u003d\u003d 1 \u0026\u0026 segments[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            throw new DukeException(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    + \"I\u0027ve done nothing productive all day...you too? (⊃◜⌓◝⊂)\\n\""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        } else if (segments.length \u003d\u003d 1 \u0026\u0026 segments[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            throw new DukeException(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    + \"One does not simply delete nothing. (￣ ︶ ￣;)\\n\""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        } else if (segments.length \u003d\u003d 2 \u0026\u0026 segments[1].equals(\"\")) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            throw new DukeException(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    + \"☹ OOPS!!! The description of a \" + segments[0] + \" cannot be empty.\\n\""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        } else if (segments.length \u003d\u003d 1 \u0026\u0026 Stream.of(\"delete\", \"done\", \"todo\", \"deadline\", \"event\").anyMatch(s -\u003e segments[0].equals(s))) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            throw new DukeException(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    \"☹ OOPS!!! The description of a \" + segments[0] + \" cannot be empty.\\n\" +"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        } else if (segments.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            throw new DukeException(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" +"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        } else {}"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "Yen-Peng": 139
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yen-Peng": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        return \"[E]\" + this.getStatusIcon() + this.getDescription() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yen-Peng": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        return (isDone ? \"[\\u2713] \" : \"[\\u2718] \"); // returns check mark if done, cross symbol if undone"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        return (description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public void markAsDone(Task t) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        t.isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yen-Peng": 23
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        return \"[T]\" + this.getStatusIcon() + this.getDescription();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yen-Peng": 13
    }
  }
]
