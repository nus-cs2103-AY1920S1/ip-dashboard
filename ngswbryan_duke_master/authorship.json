[
  {
    "path": "src/main/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "D | 0 | 12100  | tmr"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "E | 1 | adpsapsd | 2pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "T | 1 | 123"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "T | 0 | 123131"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "D | 1 | 0000 | 0000"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 5
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        String completion;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            completion \u003d \"1\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            completion \u003d \"0\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return \"D | \" + completion + \" | \" + this.description + \" | \" + this.by;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 26
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public Duke() throws FileNotFoundException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        this.storage \u003d new Storage(\"../duke.txt\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        this.tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public static void main(String[] args) throws DukeException, FileNotFoundException{"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        Duke test \u003d new Duke();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        ArrayList\u003cTask\u003e store \u003d test.tasks.list;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            while(true) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                String next \u003d sc.next();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                if (next.equals(\"list\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    if (store.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                        throw new DukeException(\"â˜¹ OOPS!!! Your list is still empty!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    for (int i \u003d 0; i \u003c store.size(); i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                        int taskNumber \u003d i + 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                        String taskString \u003d Integer.toString(taskNumber);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                        System.out.println(taskString + \".[\" + store.get(i).getStatusIcon() + \"] \" + store.get(i).toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                } else if (next.equals(\"done\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    int taskNo \u003d sc.nextInt();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    if (taskNo \u003e store.size()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                        throw new DukeException(\"â˜¹ OOPS!!! No such item in the list!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    store.get(taskNo-1).markAsDone();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    test.storage.write(test.tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    System.out.println(\"  \" + store.get(taskNo-1).toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                } else if (next.equals(\"bye\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                } else if (next.equals(\"todo\") || next.equals(\"deadline\") || next.equals(\"event\")){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    Task newTask;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    String remainder \u003d sc.nextLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    if (next.equals(\"todo\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                        if (remainder.trim().isEmpty()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                            throw new DukeException(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                        newTask \u003d new Todo(remainder.trim());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    } else if (next.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                        int position \u003d remainder.indexOf(\"/\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                        if (position \u003d\u003d -1) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                            throw new DukeException(\"â˜¹ OOPS!!! Not a valid deadline command\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                        String formattedDate \u003d Parser.getFormattedDate(remainder.substring(position+3));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                        newTask \u003d new Deadline(remainder.substring(0,position), formattedDate);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                        newTask \u003d new Deadline(remainder.substring(0,position).trim(), remainder.substring(position+3).trim());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-Level-7"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                        int position \u003d remainder.indexOf(\"/\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                        if (position \u003d\u003d -1) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                            throw new DukeException(\"â˜¹ OOPS!!! Not a valid event command\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                        String formattedDate \u003d Parser.getFormattedDate(remainder.substring(position+3));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                        newTask \u003d new Event(remainder.substring(0,position), formattedDate);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                        newTask \u003d new Event(remainder.substring(0,position).trim(), remainder.substring(position+3).trim());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-Level-7"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    store.add(newTask);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    test.storage.write(test.tasks);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    System.out.println(\"  \" + newTask.toString());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    String size \u003d Integer.toString(store.size());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    System.out.println(\"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                } else if (next.equals(\"delete\")){"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    int taskNo \u003d sc.nextInt();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    if (taskNo \u003e store.size()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                        throw new DukeException(\"â˜¹ OOPS!!! No such item in the list!\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    System.out.println(\"  \" + store.get(taskNo-1).toString());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    store.remove(taskNo-1);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    test.storage.write(test.tasks);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    String size \u003d Integer.toString(store.size());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    System.out.println(\"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    throw new DukeException(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        } catch(DukeException err) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 101,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        String completion;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            completion \u003d \"1\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            completion \u003d \"0\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return \"E | \" + completion + \" | \" + this.description + \" | \" + this.at;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 26
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public static String getFormattedDate(String dateAndTime) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        String date \u003d dateAndTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            Date date \u003d new SimpleDateFormat(\"dd/MM/yyyy hhmm\").parse(dateAndTime);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            String day \u003d new SimpleDateFormat(\"dd\").format(date);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            String month \u003d new SimpleDateFormat(\"MMMMMMMMMMMMMMM\").format(date);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            String year \u003d new SimpleDateFormat(\"yyyy\").format(date);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            String time \u003d new SimpleDateFormat(\"h:mm a\").format(date).toLowerCase();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            String postfix;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            int int_day \u003d Integer.parseInt(day);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            if (int_day \u003e\u003d 11 \u0026\u0026 int_day \u003c\u003d 13) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                postfix \u003d \"th\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            } else if (int_day % 10 \u003d\u003d 1) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                postfix \u003d \"st\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            } else if (int_day % 10 \u003d\u003d 2) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                postfix \u003d \"nd\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            } else if (int_day % 10 \u003d\u003d 3) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                postfix \u003d \"rd\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                postfix \u003d \"th\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            date \u003d int_day + postfix + \" of \" + month + \" \" + year + \", \" + time;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 42
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import java.nio.file.FileAlreadyExistsException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public String filePath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    //load file contents into arraylist"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        File currentFile \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        Scanner sc \u003d new Scanner(currentFile);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        while(sc.hasNext()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            String current \u003d sc.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            char type \u003d current.charAt(0);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            int isDone \u003d Character.getNumericValue(current.charAt(4));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            String description \u003d current.substring(8).trim();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            switch(type) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                case \u0027T\u0027:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    Todo newTask \u003d new Todo(description);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    if (isDone \u003d\u003d 1) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                        newTask.markAsDone();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    list.add(newTask);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                case \u0027D\u0027:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    int index \u003d description.indexOf(\u0027|\u0027);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    String deadlineName \u003d description.substring(0, index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    String by \u003d description.substring(index + 1).trim();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    Deadline newDeadline \u003d new Deadline(deadlineName, by);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    if (isDone \u003d\u003d 1) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                        newDeadline.markAsDone();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    list.add(newDeadline);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                case \u0027E\u0027:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    int index1 \u003d description.indexOf(\u0027|\u0027);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    String eventName \u003d description.substring(0, index1).trim();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    String at \u003d description.substring(index1 + 1).trim();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    Event newEvent \u003d new Event(eventName, at.trim());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    if (isDone \u003d\u003d 1) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                        newEvent.markAsDone();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    list.add(newEvent);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "       "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        } catch (FileNotFoundException err) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    //write arraylist contents to file"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public void write(TaskList taskList) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            BufferedWriter bWrite \u003d new BufferedWriter(new FileWriter(this.filePath));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            for (Task task: taskList.list) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                String taskData \u003d task.getStatus();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                bWrite.write(taskData);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                bWrite.newLine();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            bWrite.close();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 86
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public abstract String getStatus();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 25
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        this.list \u003d tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        this.list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public void input(Task task) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        this.list.add(task);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        this.list.remove(index);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public int count() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return this.list.size();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public Task fetch(int index) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return this.list.get(index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    //crud operations"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 32
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        String completion;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            completion \u003d \"1\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            completion \u003d \"0\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return \"T | \" + completion + \" | \" + this.description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 24
    }
  }
]
