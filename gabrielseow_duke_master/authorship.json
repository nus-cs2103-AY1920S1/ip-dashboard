[
  {
    "path": "src/main/java/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private final int day;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private final int month;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private final int year;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private final int time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private final String dateTimeString;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private String dateTimePrintFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public DateTime(int day, int month, int year, int time, String dateTimeString) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        this.day \u003d day;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        this.month \u003d month;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        this.dateTimeString \u003d dateTimeString;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return dateTimeString;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        if (dateTimePrintFormat !\u003d null) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            return dateTimePrintFormat;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String formattedDay \u003d \"\" + day;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String formattedMonth \u003d \" of \";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String formattedYear \u003d \" \" + 20 + year + \", \";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String formattedTime \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            int rem \u003d day % 10;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            switch (rem) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedDay +\u003d \"st\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case 2:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedDay +\u003d \"nd\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case 3:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedDay +\u003d \"rd\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedDay +\u003d \"th\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            switch (month) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedMonth +\u003d \"January\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case 2:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedMonth +\u003d \"February\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case 3:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedMonth +\u003d \"March\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case 4:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedMonth +\u003d \"April\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case 5:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedMonth +\u003d \"May\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case 6:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedMonth +\u003d \"June\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case 7:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedMonth +\u003d \"July\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case 8:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedMonth +\u003d \"August\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case 9:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedMonth +\u003d \"September\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case 10:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedMonth +\u003d \"October\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case 11:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedMonth +\u003d \"November\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case 12:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedMonth +\u003d \"December\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                //Add error handling"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            int minutes \u003d time % 100;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            boolean isMorning \u003d time \u003e\u003d 1200"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    ? true"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    : false;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            int hours \u003d ((time - minutes) / 100) % 12;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            formattedTime +\u003d hours;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            if (minutes !\u003d 0) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedTime +\u003d \".\" + minutes;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            if (isMorning) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedTime +\u003d \"am\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedTime +\u003d \"pm\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            dateTimePrintFormat \u003d formattedDay + formattedMonth + formattedYear + formattedTime;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            return dateTimePrintFormat;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 107
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private DateTime deadlineTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private static final String ABBREV_TASK \u003d \"D\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public Deadline(String description, DateTime deadlineTime) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        this.deadlineTime \u003d deadlineTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return ABBREV_TASK + \" | \" + taskIsDoneState + \" | \" + description + \" | \" + deadlineTime.toSaveFormat();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + deadlineTime + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private static final String INDENT_SPACING \u003d \"    \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private static final String ROOT_DIRECTORY \u003d \"C:/Users/gbrls/OneDrive/Desktop/duke-master/src/main/java\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private static final String SAVE_DIRECTORY \u003d \"/data\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private static final String SAVE_FILE_NAME \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public static void main(String[] args) throws DukeException{"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        printGreetingMessage();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        loadTasksList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        while(sc.hasNextLine()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String newTaskLine \u003d sc.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String[] newTaskSplit \u003d newTaskLine.split(\" \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String taskType \u003d newTaskSplit[0];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            switch(taskType) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                printList();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                printExitMessage();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                saveTasks();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                printAndEvaluateTaskDone(newTaskSplit);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                parseAndEvaluateEvent(newTaskSplit);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                parseAndEvaluateDeadline(newTaskSplit);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                parseAndEvaluateToDo(newTaskSplit);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                parseAndEvaluateDelete(newTaskSplit);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                printException(new DukeIllegalArgumentException());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    static DateTime convertDateTime(String dateTimeString) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        String[] dateTimeStringSplit \u003d dateTimeString.split(\" \");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        String[] dateStringSplit \u003d dateTimeStringSplit[0].split(\"/\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        int day \u003d Integer.parseInt(dateStringSplit[0]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        int month \u003d Integer.parseInt(dateStringSplit[1]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        int year \u003d Integer.parseInt(dateStringSplit[2]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        int time \u003d Integer.parseInt(dateTimeStringSplit[1]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return new DateTime(day, month, year, time, dateTimeString);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    static void saveTasks() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String saveDirectory \u003d ROOT_DIRECTORY + SAVE_DIRECTORY + \"/\" + SAVE_FILE_NAME;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            new File(saveDirectory).delete();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            createNewSaveFile();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(saveDirectory));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                writer.write(task.toSaveFormat() + \"\\n\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    static void createNewSaveFile() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            File newSaveFile \u003d new File(ROOT_DIRECTORY + SAVE_DIRECTORY + \"/\" + SAVE_FILE_NAME);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            newSaveFile.createNewFile();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    static void loadTasksList() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        File directory \u003d new File(ROOT_DIRECTORY + SAVE_DIRECTORY);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        if (!directory.exists()) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            directory.mkdir();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            FileReader tasksFileReader \u003d new FileReader(new File(ROOT_DIRECTORY +"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                                                                SAVE_DIRECTORY +"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                                                                \"/\" + SAVE_FILE_NAME));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            BufferedReader bTasksFileReader \u003d new BufferedReader(tasksFileReader);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            readTasksFile(bTasksFileReader);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                bTasksFileReader.close();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            createNewSaveFile();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        } catch (DukeSaveFileCorruptedError e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            createNewSaveFile();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    static void readTasksFile(BufferedReader bTasksFileReader) throws DukeSaveFileCorruptedError {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        String newTaskString \u003d null;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                newTaskString \u003d bTasksFileReader.readLine();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            if (newTaskString \u003d\u003d null) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String[] newTaskSplit \u003d newTaskString.split(\" \\\\| \");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String taskType \u003d newTaskSplit[0];"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            boolean taskIsDone \u003d Integer.parseInt(newTaskSplit[1]) \u003d\u003d 1"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    ? true"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    : false;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String description \u003d newTaskSplit[2];"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            Task newTask;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            switch(taskType) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                newTask \u003d new ToDo(description);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                DateTime deadlineTime \u003d convertDateTime(newTaskSplit[3]);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                newTask \u003d new Deadline(description, deadlineTime);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                DateTime eventTime \u003d convertDateTime(newTaskSplit[3]);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                newTask \u003d new Event(description, eventTime);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    bTasksFileReader.close();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                throw new DukeSaveFileCorruptedError();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            if (newTask !\u003d null) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                if (taskIsDone) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    newTask.taskComplete();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                tasks.add(newTask);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            } else  {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                throw new DukeSaveFileCorruptedError();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    static void addBorder(String input) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        String border \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        System.out.print(border + \"\\n\" + input + \"\\n\" + border + \"\\n\\n\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    static void printGreetingMessage() {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        addBorder(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    static void printAndEvaluateTaskDone(String[] newTaskSplit) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        int completedTaskNum \u003d Integer.parseInt(newTaskSplit[1]) - 1;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        Task completedTask \u003d tasks.get(completedTaskNum);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        completedTask.taskComplete();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        addBorder(\"Nice! I\u0027ve marked this task as done: \\n\" + completedTask.toString());"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    static void printExitMessage() {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        addBorder(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    static void printException(DukeException exception) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        addBorder(exception.getMessage());"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    static void addTask(Task newTask) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    static void printAddTaskMessage(Task newTask) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        String output \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                + newTask.toString()"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        addBorder(output);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    static void parseAndEvaluateDelete(String[] newTaskSplit) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            int newTaskLen \u003d newTaskSplit.length;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            if (newTaskLen \u003c 2) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                throw new DukeDeleteIllegalArgumentException(\"You have not entered a number for deletion\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            } else if (newTaskLen \u003e 2) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                throw new DukeDeleteIllegalArgumentException(\"You have entered too many arguments for deletion\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    int deletionNum \u003d Integer.parseInt(newTaskSplit[1]) - 1;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    deleteTask(deletionNum);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    throw new DukeDeleteIllegalArgumentException(\"Please enter a valid number for deletion\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    throw new DukeDeleteIllegalArgumentException(\"Please enter a valid number within the range\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        } catch (DukeDeleteIllegalArgumentException e) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            printException(e);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    static void deleteTask(int deletionNum) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        Task deletedTask \u003d tasks.remove(deletionNum);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        String output \u003d \"Noted. I\u0027ve removed this task: \\n\""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                + deletedTask.toString()"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        addBorder(output);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    static void parseAndEvaluateToDo(String[] newTaskSplit) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            int newTaskLen \u003d newTaskSplit.length;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String description \u003d newTaskSplit[1];"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            for (int i \u003d 2; i \u003c newTaskLen; i++) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                description +\u003d \" \" + newTaskSplit[i];"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            ToDo newToDo \u003d new ToDo(description);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            addTask(newToDo);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            printAddTaskMessage(newToDo);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            printException(new DukeToDoIllegalArgumentException());"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    static void parseAndEvaluateDeadline(String[] newTaskSplit) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            int newTaskLen \u003d newTaskSplit.length;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            boolean foundDeadline \u003d false;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String description \u003d newTaskSplit[1];"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String deadlineTimeString \u003d \"\";"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            for (int i \u003d 2; i \u003c newTaskLen; i++) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                if (foundDeadline) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    if (i \u003d\u003d newTaskLen - 1) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                        deadlineTimeString +\u003d newTaskSplit[i];"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                        deadlineTimeString +\u003d newTaskSplit[i] + \" \";"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    if (newTaskSplit[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                        foundDeadline \u003d true;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                        description +\u003d \" \" + newTaskSplit[i];"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            if (foundDeadline) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                DateTime deadlineTime \u003d convertDateTime(deadlineTimeString);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                Deadline newDeadline \u003d new Deadline(description, deadlineTime);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                addTask(newDeadline);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                printAddTaskMessage(newDeadline);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                printException(new DukeDeadlineIllegalArgumentException(\"deadline\"));"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            printException(new DukeDeadlineIllegalArgumentException(\"description\"));"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    static void parseAndEvaluateEvent(String[] newTaskSplit) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        int newTaskLen \u003d newTaskSplit.length;"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            boolean foundEvent \u003d false;"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String description \u003d newTaskSplit[1];"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String eventTimeString \u003d \"\";"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            for (int i \u003d 2; i \u003c newTaskLen; i++) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                if (foundEvent) {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    if (i \u003d\u003d newTaskLen - 1) {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                        eventTimeString +\u003d newTaskSplit[i];"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                        eventTimeString +\u003d newTaskSplit[i] + \" \";"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    if (newTaskSplit[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                        foundEvent \u003d true;"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                        description +\u003d \" \" + newTaskSplit[i];"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            if (foundEvent) {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                DateTime eventTime \u003d convertDateTime(eventTimeString);"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                Event newEvent \u003d new Event(description, eventTime);"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                addTask(newEvent);"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                printAddTaskMessage(newEvent);"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                printException(new DukeEventIllegalArgumentException(\"event timing\"));"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            printException(new DukeEventIllegalArgumentException(\"description\"));"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    static void printList() {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        String str \u003d \"\";"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        int numTasks \u003d tasks.size();"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        for (int i \u003d 0; i \u003c numTasks; i++) {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String newTask \u003d tasks.get(i).toString();"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            if (i \u003d\u003d numTasks - 1) {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                str +\u003d (i + 1) + \". \" + newTask;"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                str +\u003d (i + 1) + \". \" + newTask + \"\\n\";"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        addBorder(str);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 10,
      "gabrielseow": 327
    }
  },
  {
    "path": "src/main/java/DukeDeadlineIllegalArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class DukeDeadlineIllegalArgumentException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public DukeDeadlineIllegalArgumentException(String fieldName) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        super(\"☹ OOPS!!! The \" + fieldName + \" of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 5
    }
  },
  {
    "path": "src/main/java/DukeDeleteIllegalArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class DukeDeleteIllegalArgumentException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public DukeDeleteIllegalArgumentException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 5
    }
  },
  {
    "path": "src/main/java/DukeEventIllegalArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class DukeEventIllegalArgumentException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public DukeEventIllegalArgumentException(String fieldName) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        super(\"☹ OOPS!!! The \" + fieldName + \" of an event cannot be empty.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return this.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 10
    }
  },
  {
    "path": "src/main/java/DukeIllegalArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class DukeIllegalArgumentException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public DukeIllegalArgumentException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 5
    }
  },
  {
    "path": "src/main/java/DukeSaveFileCorruptedError.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class DukeSaveFileCorruptedError extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public DukeSaveFileCorruptedError() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        super(\"The save file is corrupted. Creating new save file...\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 5
    }
  },
  {
    "path": "src/main/java/DukeToDoIllegalArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class DukeToDoIllegalArgumentException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public DukeToDoIllegalArgumentException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        super(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private DateTime eventTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private static final String ABBREV_TASK \u003d \"E\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public Event(String description, DateTime eventTime) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return ABBREV_TASK + \" | \" + taskIsDoneState + \" | \" + description + \" | \" + eventTime.toSaveFormat();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + eventTime + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 19
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    protected boolean taskIsDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    protected int taskIsDoneState;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        this.taskIsDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        this.taskIsDoneState \u003d 0;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public void taskComplete() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        taskIsDone \u003d true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        taskIsDoneState \u003d 1;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public abstract String toSaveFormat();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        if (taskIsDone \u003d\u003d true) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            output \u003d \"[✓]\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            output \u003d \"[✗]\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        output +\u003d \" \" + description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 31
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private static final String ABBREV_TASK \u003d \"T\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return ABBREV_TASK + \" | \" + taskIsDoneState + \" | \" + description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 18
    }
  },
  {
    "path": "src/main/java/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "T | 0 | something cool"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 1
    }
  }
]
