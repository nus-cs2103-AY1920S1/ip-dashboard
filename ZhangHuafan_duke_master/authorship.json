[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "E|true|dkdjf|1999-02-02T18:00|19:00"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "T|false|Sleep early"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "D|false|Sleep|2020-05-31T11:00"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "E|false|Sleep|2020-05-31T11:00|23:00"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "T|false|Sleep early"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "D|false|Sleep|2020-05-31T11:00"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "E|false|Sleep|2020-05-31T11:00|23:00"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "T|false|Sleep early"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "D|false|Sleep|2020-05-31T11:00"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "E|false|Sleep|2020-05-31T11:00|23:00"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "T|false|Sleep early"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "D|false|Sleep|2020-05-31T11:00"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "E|false|Sleep|2020-05-31T11:00|23:00"
      }
    ],
    "authorContributionMap": {
      "ZhangHuafan": 13
    }
  },
  {
    "path": "src/main/duck/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "package duck.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.util.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.util.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.util.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private LocalDateTime dateTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private LocalTime time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public AddCommand(String taskType, String description) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public AddCommand(String taskType, String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        this(taskType, description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public AddCommand(String taskType, String description, LocalDateTime dateTime, LocalTime time) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        this(taskType, description, dateTime);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            newTask \u003d new Todo(description);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            newTask \u003d new Deadline(description, dateTime);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            newTask \u003d new Event(description, dateTime, time);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        taskList.add(newTask);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        ui.showTaskAdded(taskList.getTotalTask(), newTask);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        if (obj instanceof AddCommand) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            AddCommand another \u003d (AddCommand) obj;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            if (taskType.equals(another.taskType)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                return description.equals(another.description)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                        \u0026\u0026 (dateTime \u003d\u003d null || dateTime.equals(another.dateTime))"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                        \u0026\u0026 (time \u003d\u003d null || time.equals(another.time));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangHuafan": 71
    }
  },
  {
    "path": "src/main/duck/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "package duck.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.util.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    abstract public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        return obj.getClass().equals(this.getClass());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangHuafan": 26
    }
  },
  {
    "path": "src/main/duck/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "package duck.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.util.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.util.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.util.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private int target;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public DeleteCommand(int target) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        this.target \u003d target;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException{"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        if (target \u003c 0 || target \u003e\u003d taskList.getTotalTask()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            throw new DukeException(\"The task number is invalid!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        Task removedTask \u003d taskList.removeTaskAt(target);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        ui.showTaskDeleted(taskList.getTotalTask(), removedTask);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        if (obj instanceof DeleteCommand) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            DeleteCommand another \u003d (DeleteCommand) obj;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            return this.target \u003d\u003d another.target;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangHuafan": 35
    }
  },
  {
    "path": "src/main/duck/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "package duck.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.util.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.util.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.util.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private int target;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public DoneCommand(int target) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        this.target \u003d target;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException{"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        if (target \u003c 0 || target \u003e\u003d taskList.getTotalTask()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            throw new DukeException(\"The task number is invalid!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        Task doneTask \u003d taskList.getTaskAt(target);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        doneTask.markDone();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        ui.showTaskDone(doneTask);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        if (obj instanceof DoneCommand) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            DoneCommand another \u003d (DoneCommand) obj;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            return this.target \u003d\u003d another.target;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangHuafan": 36
    }
  },
  {
    "path": "src/main/duck/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "package duck.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            storage.recordTasks(taskList);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            ui.showSavingError();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangHuafan": 25
    }
  },
  {
    "path": "src/main/duck/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "package duck.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        ui.showFullList(taskList);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangHuafan": 13
    }
  },
  {
    "path": "src/main/duck/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "package duck.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private LocalDateTime dueDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public Deadline(String description, LocalDateTime dueDateTime) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        this.dueDateTime \u003d dueDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public Deadline(String description, LocalDateTime dueDateTime, boolean isDone) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        this.dueDateTime \u003d dueDateTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public LocalDateTime getDueDateTime() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        return dueDateTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + formatter.format(dueDateTime) + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        if (obj instanceof Deadline) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            Deadline another \u003d (Deadline) obj;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            return this.description.equals(another.description) \u0026\u0026 this.dueDateTime.equals(another.dueDateTime)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    \u0026\u0026 this.isDone \u003d\u003d another.isDone;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangHuafan": 38
    }
  },
  {
    "path": "src/main/duck/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "package duck.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private LocalDateTime startDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private LocalTime endTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public Event(String description, LocalDateTime startdateTime, LocalTime endTime) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        this.startDateTime \u003d startdateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        this.endTime \u003d endTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public Event(String description, LocalDateTime startDateTime, LocalTime endTime, boolean isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        this.startDateTime \u003d startDateTime;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        this.endTime \u003d endTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public LocalDateTime getStartDateTime() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        return startDateTime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public LocalTime getEndTime() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        return endTime;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + formatter.format(startDateTime) + \" - \" + endTime + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        if (obj instanceof Event) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            Event another \u003d (Event) obj;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            return this.description.equals(another.description) \u0026\u0026 this.startDateTime.equals(another.startDateTime)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    \u0026\u0026 this.endTime.equals(another.endTime) \u0026\u0026 this.isDone \u003d\u003d another.isDone;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangHuafan": 46
    }
  },
  {
    "path": "src/main/duck/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "package duck.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    static protected DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy, HH:mm\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    static public Task from(String taskInfo) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        String[] taskInfos \u003d taskInfo.split(\"\\\\|\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        switch (taskInfos[0]) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            return new Todo(taskInfos[2], Boolean.parseBoolean(taskInfos[1]));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            return new Deadline(taskInfos[2], LocalDateTime.parse(taskInfos[3]), Boolean.parseBoolean(taskInfos[1]));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            return new Event(taskInfos[2], LocalDateTime.parse(taskInfos[3]), LocalTime.parse(taskInfos[4]),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    Boolean.parseBoolean(taskInfos[1]));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        return new Task(taskInfos[2]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public boolean getStatus () {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangHuafan": 59
    }
  },
  {
    "path": "src/main/duck/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "package duck.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        if (obj instanceof Todo) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            Todo another \u003d (Todo) obj;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            return this.description.equals(another.description) \u0026\u0026 this.isDone \u003d\u003d another.isDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangHuafan": 27
    }
  },
  {
    "path": "src/main/duck/util/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "package duck.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public DukeException (String errorMessage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangHuafan": 11
    }
  },
  {
    "path": "src/main/duck/util/ObjectsForTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "package duck.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "public class ObjectsForTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public static final String todoTaskInfo \u003d \"T|false|Sleep early\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public static final String deadlineTaskInfo \u003d \"D|false|Sleep|2020-05-31T11:00\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public static final String eventTaskInfo \u003d \"E|false|Sleep|2020-05-31T11:00|23:00\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public static final String todoCommand \u003d \"todo Sleep early\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public static final String deadlineCommand \u003d \"deadline Sleep /by 31/5/2020 11:00\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public static final String eventCommand \u003d \"event Sleep /at 31/5/2020 11:00-23:00\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public static final String timeDateStr \u003d \"31/5/2020 11:00\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public static final String timeSTr \u003d \"23:00\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public static final Todo todo \u003d new Todo(\"Sleep early\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public static final Deadline deadline \u003d new Deadline(\"Sleep\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            Parser.parseDateTime(\"31/5/2020 11:00\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public static final Event event \u003d new Event(\"Sleep\", Parser.parseDateTime(\"31/5/2020 11:00\"),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            LocalTime.parse(\"23:00\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public static final Task[] tasks \u003d {todo, deadline, event};"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangHuafan": 30
    }
  },
  {
    "path": "src/main/duck/util/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "package duck.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HH:mm\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public static Command parseCommand(String info) throws DukeException{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        String[] infos \u003d info.trim().split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        if(infos[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        } else if (infos[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            //the rest requires at least two arguments"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            if (infos.length \u003c2) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! No enough information entered\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            switch (infos[0]) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    int order \u003d Integer.valueOf(infos[1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    return new DoneCommand(order - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The task number is not a number!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    int order \u003d Integer.valueOf(infos[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    return new DeleteCommand(order - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The task number is not a number!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                return new AddCommand(\"todo\", infos[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                if (!infos[1].contains(\" /by \")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    throw new DukeException (\"☹ OOPS!!! The description of a deadline is not enough.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    String[] details \u003d infos[1].split(\" /by \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    LocalDateTime due \u003d Parser.parseDateTime(details[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    return new AddCommand(\"deadline\", details[0], due);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    throw new DukeException(\"The deadline is in invalid format\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                if (!infos[1].contains(\" /at \")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    throw new DukeException (\"☹ OOPS!!! The description of a event is not enough.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    String[] details \u003d infos[1].split(\" /at \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    String[] times \u003d details[1].split(\"-\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    LocalDateTime startDateTime \u003d Parser.parseDateTime(times[0]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    LocalTime time \u003d LocalTime.parse(times[1]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    return new AddCommand(\"event\", details[0], startDateTime, time);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    throw new DukeException(\"The duration is in invalid format\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public static LocalDateTime parseDateTime(String info) throws DateTimeParseException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        return LocalDateTime.parse(info,formatter);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangHuafan": 75
    }
  },
  {
    "path": "src/main/duck/util/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "package duck.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        file \u003d new File(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public List\u003cTask\u003e loadTasks() throws FileNotFoundException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            taskList.add(Task.from(scanner.nextLine()));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public void recordTasks(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        String content \u003d \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getTotalTask(); i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            Task task \u003d taskList.getTaskAt(i);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            if (task instanceof Todo) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                content \u003d \"T|\" + task.getStatus() +  \"|\" + task.getDescription();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                Deadline dl \u003d (Deadline) task;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                content \u003d \"D|\" + task.getStatus() +  \"|\" + dl.getDescription() + \"|\" + dl.getDueDateTime();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                Event e \u003d (Event) task;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                content \u003d \"E|\" + e.getStatus() + \"|\" + e.getDescription() + \"|\" + e.getStartDateTime() + \"|\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                        + e.getEndTime();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            writer.append(content + \"\\n\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangHuafan": 58
    }
  },
  {
    "path": "src/main/duck/util/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "package duck.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public int getTotalTask() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public Task getTaskAt(int index) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public void addAll(TaskList another) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        for (int i \u003d 0; i \u003c another.getTotalTask(); i++) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            tasks.add(another.getTaskAt(i));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public Task removeTaskAt(int index) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        return tasks.remove(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        if (obj instanceof TaskList) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            TaskList another \u003d (TaskList) obj;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            if (another.getTotalTask() !\u003d this.getTotalTask()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                for (int i \u003d 0; i \u003c this.getTotalTask(); i++) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    if (!this.getTaskAt(i).equals(another.getTaskAt(i))) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                        return false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangHuafan": 60
    }
  },
  {
    "path": "src/main/duck/util/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "package duck.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private static final String indentation \u003d \"     \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private static final String separator \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private static final String welcomeSentence \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private static final String endingSentence \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private String showFormattedStr(String str) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        return separator + indentation + str.replace(\"\\n\", \"\\n\" + indentation)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                + \"\\n\" + separator;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public String showFormattedList(TaskList taskList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        String formattedList \u003d separator;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        formattedList \u003d formattedList + indentation + \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        if (taskList.getTotalTask() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            return showFormattedStr(\"Currently there is no task~\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d taskList.getTotalTask(); i++) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            formattedList \u003d formattedList + indentation + i + \". \" + taskList.getTaskAt(i - 1) + \"\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        formattedList \u003d formattedList + separator;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        return formattedList;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        System.out.println(showFormattedStr(welcomeSentence));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public void showGoodbye() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        System.out.println(showFormattedStr(endingSentence));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public void showSavingError() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        System.out.println(showFormattedStr(\"☹ OOPS!!! We cannot save your data!\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        System.out.println(showFormattedStr(\"☹ OOPS!!! We cannot load your data!\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public void showError(String errorMsg) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        System.out.println(showFormattedStr(errorMsg));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public void showNoTask() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        System.out.println(showFormattedStr(\"kkk ~ There is no task in your todo list now!\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public void showTaskAdded(int total, Task newTask) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        System.out.println(showFormattedStr(\"Got it. I\u0027ve added this task:\\n\" + \"  \" + newTask"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                + \"\\nNow you have \" + total + \" tasks in the list.\"));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public void showTaskDeleted(int total, Task removedTask) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        System.out.println(showFormattedStr(\"Noted. I\u0027ve removed this task: \\n\" + \"  \" + removedTask"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                + \"\\nNow you have \" + total + \" tasks in the list.\"));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public void showTaskDone(Task doneTask) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        System.out.println(showFormattedStr(\"Nice! I\u0027ve marked this task as done:\\n\" + \"  \" + doneTask));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public void showFullList(TaskList taskList) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        System.out.println(showFormattedList(taskList));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangHuafan": 83
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.util.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public TaskList getTaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private void setUp() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            taskList \u003d new TaskList(storage.loadTasks());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        if (taskList.getTotalTask() \u003e 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            ui.showFullList(taskList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            ui.showNoTask();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        setUp();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        boolean isExist \u003d false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        while (!isExist) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                Command c \u003d Parser.parseCommand(fullCommand);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                c.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                isExist \u003d c.isExit();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        ui.showGoodbye();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        new Duke(\"/Users/xiaoyu/duke/data/duke.txt\").run();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangHuafan": 55,
      "-": 5
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.util.Storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.util.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.util.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import org.junit.jupiter.api.AfterAll;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import org.junit.jupiter.api.BeforeAll;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.io.ByteArrayInputStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import static duck.util.ObjectsForTest.*;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private static final String input \u003d \"todo Sleep early\\ndeadline Sleep /by 31/5/2020 11:00\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            + \"event Sleep /at 31/5/2020 11:00-23:00\\n\" + \"list\\ndone 1\\ndelete 2\\nlist\\nbye\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private static final InputStream in \u003d new ByteArrayInputStream(input.getBytes());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private static final String filePath \u003d \"/Users/xiaoyu/duke/data/duke.txt\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private static TaskList list;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @BeforeAll"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public static void setUp() throws Exception{"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        System.setIn(in);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        list \u003d new TaskList(new Storage(filePath).loadTasks());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        list.add(todo);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        list.add(deadline);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        list.add(event);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        list.getTaskAt(0).markDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        list.removeTaskAt(1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @AfterAll"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public static void restoreStream() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        System.setIn(System.in);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        System.setOut(System.out);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public void run_addNormalInput(){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        Duke duke \u003d new Duke(filePath);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        assertEquals(list, duke.getTaskList());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangHuafan": 53
    }
  },
  {
    "path": "test/duck/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "package duck.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import static duck.util.ObjectsForTest.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "class TaskTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    void from_todoTaskStr() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        assertEquals(todo, Task.from(todoTaskInfo));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    void from_deadlineTaskStr() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        assertEquals(deadline, Task.from(deadlineTaskInfo));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    void from_eventTaskStr() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        assertEquals(event, Task.from(eventTaskInfo));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangHuafan": 24
    }
  },
  {
    "path": "test/duck/util/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "package duck.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import duck.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import org.junit.jupiter.params.ParameterizedTest;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import org.junit.jupiter.params.provider.ValueSource;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import static duck.util.ObjectsForTest.*;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    void parseDateTime_normal() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        assertEquals(LocalDateTime.parse(\"2019-05-31T12:22\"), Parser.parseDateTime(\"31/05/2019 12:22\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        assertEquals(LocalDateTime.parse(\"2019-05-31T12:22\"), Parser.parseDateTime(\"31/5/2019 12:22\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    void parseCommand_list() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            assertEquals(new ListCommand().getClass(), Parser.parseCommand(\"list\").getClass());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            assertEquals(new ListCommand().getClass(), Parser.parseCommand(\"   list   \").getClass());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    void parseCommand_bye() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            assertEquals(new ExitCommand().getClass(), Parser.parseCommand(\"bye\").getClass());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            assertEquals(new ExitCommand().getClass(), Parser.parseCommand(\"   bye   \").getClass());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    void parseCommand_done() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            assertEquals(new DoneCommand(0), Parser.parseCommand(\"done 1\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            assertEquals(new DoneCommand(0), Parser.parseCommand(\"   done   1\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    void parseCommand_delete() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            assertEquals(new DeleteCommand(0), Parser.parseCommand(\"delete 1\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            assertEquals(new DeleteCommand(0), Parser.parseCommand(\"   delete   1\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    void parseCommand_add() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            assertEquals(new AddCommand(\"todo\", \"Sleep early\"), Parser.parseCommand(todoCommand));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            assertEquals(new AddCommand(\"deadline\", \"Sleep\", Parser.parseDateTime(timeDateStr)),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    Parser.parseCommand(deadlineCommand));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            assertEquals(new AddCommand(\"event\", \"Sleep\", Parser.parseDateTime(timeDateStr),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    LocalTime.parse(timeSTr)), Parser.parseCommand(eventCommand));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @ParameterizedTest"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @ValueSource(strings \u003d {\"hehe\", \"todo  \", \"deadline hehe\", \"deadline /by\", \"deadline /by 02/21/1999\","
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            \"event /by 02/21/1999\", \"event /at\", \"event /at 02/21/1999 18:00\"})"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    void parseCommand_invalidCommand_throwDuckException(String invalidCommand) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parseCommand(invalidCommand));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangHuafan": 81
    }
  },
  {
    "path": "test/duck/util/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "package duck.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import org.junit.jupiter.api.BeforeAll;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import static duck.util.ObjectsForTest.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private TaskList list1;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private TaskList list2;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    void testEquals_sameContent_equals() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        list1 \u003d new TaskList(Arrays.asList(tasks));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        list2 \u003d new TaskList(Arrays.asList(tasks));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        assertEquals(list1, list2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    void testEquals_differentLength_notEquals() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        list1 \u003d new TaskList(Arrays.asList(tasks));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        list2 \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        list2.add(todo);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        list2.add(deadline);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        assertNotEquals(list1, list2);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    void testEquals_differentContent_notEquals() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        list1 \u003d new TaskList(Arrays.asList(tasks));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        list2 \u003d new TaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        list2.add(todo);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        list2.add(event);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        list2.add(deadline);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangHuafan": 40
    }
  }
]
