[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    //id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.1.0\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "/*"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "*/"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "test {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "tasks.withType(JavaCompile) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "test {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    systemProperty \"file.encoding\", \"utf-8\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 18,
      "SQwQ": 36
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    Task task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param t Task to be added"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public AddCommand(Task t) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.task \u003d t;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Adds task to TaskList and displays confirmation"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param tasks Class dealing with manipulating global LinkedList storing tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param ui User Interface"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param storage Class dealing with local storage of tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assert tasks !\u003d null : \"Tasklist instance is null!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assert ui !\u003d null : \"Ui instance is null!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (!tasks.isDuplicate(this.task)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            tasks.addTask(this.task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return ui.showAddedTask(this.task, tasks.getListSize());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"Task is a duplicate!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 31
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Abstract method to manipulate"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * TaskList/UI/Storage"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param tasks Class dealing with manipulating global LinkedList storing tasks"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param ui User Interface"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param storage Class dealing with local storage of tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * To check if \"bye\" command is issued"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return false except for child ExitCommand"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 30
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param s Input String specifying task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Deadline(String s) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * returns Task as formatted String"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return formatted String"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        String unprocessed \u003d super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        StringBuilder temp \u003d new StringBuilder();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        boolean isFirst \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (unprocessed.contains(\"/\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            for (int i \u003d 0; i \u003c unprocessed.length(); i++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                char c \u003d unprocessed.charAt(i);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                if (c \u003d\u003d \u0027/\u0027 \u0026\u0026 isFirst) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    temp.append(\"(by:\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    i +\u003d 2;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    isFirst \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    temp.append(c);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                //Process char"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return \"[D]\" + temp.append(\u0027)\u0027).toString();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return \"[D]\" + unprocessed;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 44
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    int id;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param i Index of task to be deleted"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public DeleteCommand(int i) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.id \u003d i;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Deletes task from TaskList and displays confirmation"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param tasks Class dealing with manipulating global LinkedList storing tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param ui User Interface"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param storage Class dealing with local storage of tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws DukeException If task does not exist"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assert tasks !\u003d null : \"Tasklist instance is null!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assert ui !\u003d null : \"Ui instance is null!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Task t \u003d tasks.getTask(id);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        tasks.deleteTask(this.id);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return ui.showDelete(t, tasks.getListSize());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 29
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.layout.*;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private Text dialog;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private VBox vbox;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Circle clip \u003d new Circle(20, 20, 20);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        displayPicture.setClip(clip);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 70
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    int id;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param i Index of task to be done"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public DoneCommand(int i) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.id \u003d i;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Marks task in Tasklist as complete and displays confirmation"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param tasks Class dealing with manipulating global LinkedList storing tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param ui User Interface"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param storage Class dealing with local storage of tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws DukeException If task does not exist"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assert tasks !\u003d null : \"Tasklist instance is null!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assert ui !\u003d null : \"Ui instance is null!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        tasks.completeTask(this.id);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return ui.showComplete(tasks.getTask(this.id));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 28
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String welcome() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return ui.showWelcome();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            response \u003d c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Main loop which takes in command and execute"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * until isExit \u003d true"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Main driver"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        new Duke(\"C:/Users/User/Documents/GitHub/duke/src/main/tasks.txt\").run();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        });"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        });"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 173,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * DukeException to handle all kinds of exceptions"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param message text to be displayed when thrown"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param s Input String specifying task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Event(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * returns Task as formatted String"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return formatted String"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        String unprocessed \u003d super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        StringBuilder temp \u003d new StringBuilder();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        boolean isFirst \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (unprocessed.contains(\"/\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            for (int i \u003d 0; i \u003c unprocessed.length(); i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                char c \u003d unprocessed.charAt(i);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                if (c \u003d\u003d \u0027/\u0027 \u0026\u0026 isFirst) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    temp.append(\"(at:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    i +\u003d 2;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    isFirst \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    temp.append(c);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                //Process char"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return \"[D]\" + temp.append(\u0027)\u0027).toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return \"[D]\" + unprocessed;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 41
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Update save file with all changes and display confirmation"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param tasks Class dealing with manipulating global LinkedList storing tasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param ui User Interface"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param storage Class dealing with local storage of tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws DukeException If fails to save file"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assert tasks !\u003d null : \"Tasklist instance is null!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assert ui !\u003d null : \"Ui instance is null!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assert  storage !\u003d null : \"Storage instance is null!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        storage.updateSaveFile(tasks.getAllTasks());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return ui.showGoodbye();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 35
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    String keywords \u003d \"\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public FindCommand(String str) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.keywords \u003d str;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assert tasks !\u003d null : \"Tasklist instance is null!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assert ui !\u003d null : \"Ui instance is null!\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return ui.showMatch(tasks.findTasks(this.keywords));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 14
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 10
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Display all tasks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param tasks Class dealing with manipulating global LinkedList storing tasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param ui User Interface"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param storage Class dealing with local storage of tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assert tasks !\u003d null : \"Tasklist instance is null!\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assert ui !\u003d null : \"Ui instance is null!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return ui.showList(tasks.getAllTasks());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 22
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private Duke duke \u003d new Duke(\"C:/Users/User/Documents/GitHub/duke/src/main/tasks.txt\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            assert fxmlLoader !\u003d null : \"fxmlLoader is null!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().initialize();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 33
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private boolean isExit \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assert duke !\u003d null : \"duke is null!\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        String response \u003d duke.welcome();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        );"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        );"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 67
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    static String EXIT_COMMAND \u003d \"bye\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    static String LIST_COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    static String DONE_COMMAND \u003d \"done \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    static String FIND_COMMAND \u003d \"find \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    static String DELETE_COMMAND \u003d \"delete \";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    static String ADD_TODO_COMMAND \u003d \"todo \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    static String ADD_DEADLINE_COMMAND \u003d \"deadline \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    static String ADD_EVENT_COMMAND \u003d \"event \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * To parse all user inputs"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param command user input"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return command to be executed"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws DukeException If invalid command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static Command parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (isEditTaskCommand(command)) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return getEditTaskCommand(command);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else if (isAddTaskCommand(command)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return getAddTaskCommand(command);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else if (isFunctionalCommand(command)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return getFunctionalCommand(command);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static boolean isAddTaskCommand(String command) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (command.startsWith(ADD_TODO_COMMAND) ||"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                command.startsWith(ADD_DEADLINE_COMMAND) ||"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                command.startsWith(ADD_EVENT_COMMAND)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static boolean isEditTaskCommand(String command) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (command.startsWith(DELETE_COMMAND) ||"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                command.startsWith(DONE_COMMAND)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static boolean isFunctionalCommand(String command) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (command.equals(EXIT_COMMAND) ||"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                command.equals(LIST_COMMAND) ||"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                command.startsWith(FIND_COMMAND)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static Command getAddTaskCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (command.startsWith(ADD_TODO_COMMAND)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return new AddCommand(new Todo(command));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else if (command.startsWith(ADD_DEADLINE_COMMAND)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            if (!command.contains(\"/by \")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Wrong format ! Please follow :\\n deadline return book /by 15/09/19\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                return new AddCommand(new Deadline(formatTime(command)));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else if (command.startsWith(ADD_EVENT_COMMAND)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            if (!command.contains(\"/at \")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Wrong format ! Please follow :\\n event project meeting /at 15/09/19\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                return new AddCommand(new Event(formatTime(command)));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static Command getEditTaskCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (command.startsWith(DONE_COMMAND)) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                int id \u003d Integer.parseInt(command.substring(5));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                return new DoneCommand(id);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! There is no such Task !\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else if (command.startsWith(DELETE_COMMAND)) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                int id \u003d Integer.parseInt(command.substring(7));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                return new DeleteCommand(id);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            } catch  (NumberFormatException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! There is no such Task !\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static Command getFunctionalCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (command.equals(EXIT_COMMAND)) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else if (command.equals(LIST_COMMAND)) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else  if (command.startsWith(FIND_COMMAND)) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return new FindCommand(command.substring(5));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * To format time of user input"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param input user input"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return formatted time string"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws DukeException if invalid time format"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static String formatTime(String input) throws DukeException {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        List\u003cString\u003e formatStrings \u003d Arrays.asList(\"d/M/y HHmm\", \"d/M/y\", \"d/M\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        List\u003cString\u003e outputFormats \u003d Arrays.asList(\"MMMMM dd, yyyy, h:mm a\", \"MMMMM dd, yyyy\", \"MMMMM dd\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        String[] temp \u003d input.split(\"/\",2);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assert temp.length \u003d\u003d 2;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        StringBuilder fullCommand \u003d new StringBuilder(temp[0]);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        StringBuilder rawDate \u003d new StringBuilder(temp[1]);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Date date \u003d null;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        for (int i \u003d 0; i \u003c formatStrings.size(); i++) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                DateFormat df \u003d new SimpleDateFormat(formatStrings.get(i));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                df.setLenient(false);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                date \u003d df.parse(rawDate.toString().substring(3));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                DateFormat formatter \u003d new SimpleDateFormat(outputFormats.get(i));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                fullCommand.append(\"   \").append(formatter.format(date));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                //System.out.println(\"!\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"Time format not acceptable! Please use dd/mm/yy format\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return fullCommand.toString();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 162
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private String TODO \u003d \"[T]\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private String DEADLINE \u003d \"[D]\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private String EVENT \u003d \"[E]\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private String COMPLETE \u003d \"[✓]\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param s location of file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Storage(String s) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.filePath \u003d s;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Loads tasks to task list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return LinkedList containing tasks"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws DukeException if file does not exist"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public LinkedList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        LinkedList\u003cTask\u003e result \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"File not found!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            List\u003cString\u003e temp \u003d Files.lines(file.toPath())"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    .collect(Collectors.toList());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            for (String s : temp) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                Task curr \u003d null;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                if (s.contains(TODO)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    curr \u003d new Todo(s.substring(7));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                } else if (s.contains(DEADLINE)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    curr \u003d new Deadline(s.substring(7));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                } else if (s.contains(EVENT)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    curr \u003d new Event(s.substring(7));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                if (s.contains(COMPLETE)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    curr.setDone();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                result.add(curr);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"File not found!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Updates Save file with any changes"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param tasks Class dealing with manipulating global LinkedList storing tasks"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws DukeException if save file fails"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void updateSaveFile(LinkedList\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            File saveFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            FileWriter fw \u003d new FileWriter(saveFile, false);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            int i \u003d 1;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            //StringBuilder result \u003d new StringBuilder();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            for (Task t : tasks) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                fw.write(i + \". \" + t + \"\\n\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"Save failed\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 86
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param description user input describing task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Set symbol for completion status"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return tick or X symbols"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Mark task as completed"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * returns Task as formatted String"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return formatted String"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(getDescription());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public boolean equals(Task t) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(t.getDescription());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(this.getDescription());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return t.getDescription().equals(this.getDescription());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 56
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    LinkedList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor for case with no existing save file"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.tasks \u003d new LinkedList\u003cTask\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor for case with existing save file"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param lst LinkedList storing existing tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public TaskList(LinkedList\u003cTask\u003e lst) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.tasks \u003d lst;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * returns task at given id in linkedlist"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param id index in linkedlist"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Task getTask(int id) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return this.tasks.get(id - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! No such task exist !\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Gets all tasks"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return linkedlist containing all tasks"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public LinkedList\u003cTask\u003e getAllTasks() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Delete task"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param i index in linkedlist"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws DukeException if index out of bounds"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void deleteTask(int i) throws DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            this.tasks.remove(i - 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! No such task exist!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Mark task at index as complete"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param i index in linkedlist"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws DukeException if index out of bounds"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void completeTask(int i) throws DukeException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            this.tasks.get(i - 1).setDone();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! No such task exist!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Adds task to linkedlist"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param t task to be added"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.tasks.add(t);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * returns total number of tasks"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return size of linkedlist"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public int getListSize() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public LinkedList\u003cTask\u003e findTasks(String keywords) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        LinkedList\u003cTask\u003e results \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        for (Task t : this.tasks) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            if (t.toString().contains(keywords)) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                results.add(t);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return results;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public boolean isDuplicate(Task t) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            if (task.equals(t)) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 110
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param s description of task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Todo(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * returns Task as formatted String"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return formatted String"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 20
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    //Scanner sc;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Displays welcome message"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return \"Hello I\u0027m Duke. What can I do for you?\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Gets command"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return user input"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Displays error message"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param message text of error"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String showError(String message) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Displays goodbye message"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String showGoodbye() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Displays all tasks in given linkedlist"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param tasks linkedlist containing tasks"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String showList(LinkedList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return \"Here are the tasks in your list:\\n\" + showGivenList(tasks);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String showMatch(LinkedList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return \"Here are the matching tasks in your list:\\n\" + showGivenList(tasks);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private String showGivenList(LinkedList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        StringBuilder result \u003d new StringBuilder();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (!tasks.isEmpty()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            for (Task t : tasks) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                result.append(i + \". \" + t + \"\\n\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return result.toString();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Displays confirmation for deleting task"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param t task deleted"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param i total number of tasks"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String showDelete(Task t, int i) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return \"Noted. I\u0027ve removed this task:\\n\" + t + \"\\n\" + \"Now you have \" + i + \" tasks in the list.\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Displays confirmation for completing task"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param t completed task"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String showComplete(Task t) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n\" + t;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Displays confirmation for adding task"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param t task added"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param i total number of tasks"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String showAddedTask(Task t, int i) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n\" + t + \"\\n\" +  \"Now you have \" + i + \" tasks in the list.\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Displays line"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(\"-----------------------------------------------------------------------------------\\n\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 109
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.text.Text?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    \u003cVBox fx:id\u003d\"vbox\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #808080; -fx-background-radius: 5;\" \u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        \u003cpadding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        \u003c/padding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        \u003cText fx:id\u003d\"dialog\" fill\u003d\"#FFFFFF\" style\u003d\"-fx-font-color: #000000;\" wrappingWidth\u003d\"300\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        \u003c/Text\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"45.0\" fitWidth\u003d\"45.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 29
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "               AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\"  hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 21
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void dateInputTest1() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            Parser.parse(\"deadline return book /by 29/02/2019 1800\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        });"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void dateInputTest2() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            Parser.parse(\"deadline return book /by 31/4/2019 1800\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        });"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void dateInputTest3() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            Parser.parse(\"deadline return book /by 31/13/2019 1800\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        });"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void dateInputTest4() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            Parser.parse(\"deadline return book /by when the cow jumps over the moon\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        });"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void dateInputTest5() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            Parser.parse(\"event return book /at when the cow jumps over the moon\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        });"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void outtest() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(\"\\u2713\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(\"\\u2718\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(\"☹ OOPS!!!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 51
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void getTaskTest() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        TaskList t \u003d new TaskList();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Assertions.assertThrows(IndexOutOfBoundsException.class, () -\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            t.getTask(1);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        });"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void completeTaskTest() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        TaskList t \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            t.completeTask(1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        });"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void deleteTaskTest() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        TaskList t \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            t.deleteTask(1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        });"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 32
    }
  }
]
