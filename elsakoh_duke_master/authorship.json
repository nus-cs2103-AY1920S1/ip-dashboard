[
  {
    "path": "src/main/java/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "elsakoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "public class DateTime{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "elsakoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    public DateTime(String input) throws ParseException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        String dateFormat \u003d \"dd-MM-yyyy HH:mm\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(dateFormat);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        this.date \u003d formatter.parse(input);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "elsakoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        String dateFormat \u003d \"dd-MM-yyyy HH:mm\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(dateFormat);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        return formatter.format(this.date);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "elsakoh": 22
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    protected DateTime by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    public Deadline(String taskName, DateTime by) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    public String getStorageString(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        return \"D | \" + super.isDone + \" | \" + taskName + \" | \" + by.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "elsakoh": 15
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "import java.util.ArrayList; "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "elsakoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    void logo(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    static void greeting(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        String output \u003d \"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        \"     Hello! I\u0027m Duke\\n\" + "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        \"     What can I do for you?\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    static String addDoubleLine(String str){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        String line \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        return line + \"\\n\" + str + \"\\n\" + line;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    static void handleList(ArrayList\u003cTask\u003e ls){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        String output \u003d \"\"; "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        for(int i \u003d 0; i \u003c ls.size(); i++){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "            output \u003d output + \"     \" +  (i+1) + \": \" + ls.get(i).toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "            if(i \u003c ls.size() - 1){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                output \u003d output + \"\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        System.out.println(addDoubleLine(output));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    static void printMsg(Task t, int size){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        System.out.println(addDoubleLine(\"     Got it. I\u0027ve added this task: \\n\" + \"      \" + t.toString() + \"\\n     Now you have \" + size + \" tasks in the list.\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    static void handleInput(){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        ArrayList \u003cTask\u003e list \u003d storage.recoverTasks();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        while (sc.hasNextLine()){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                String line \u003d sc.nextLine().toLowerCase();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                String[] splited \u003d line.split(\" \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                String check \u003d splited[0];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                //bye"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                if (check.equals(\"bye\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    System.out.println(addDoubleLine(\"     Bye. Hope to see you again soon!\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    storage.saveFile(list);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    System.exit(0);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                //list"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                }else if(check.equals(\"list\")){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    handleList(list);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                //done"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                }else if(check.equals(\"done\")){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    String taskNum \u003d splited[1];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    Task current \u003d list.get(Integer.parseInt(taskNum) - 1);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    current.markAsDone();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    System.out.println(addDoubleLine(\"     Nice! I\u0027ve marked this task as done:\\n\" + \"    \" + current.toString()));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    storage.saveFile(list);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "elsakoh"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                }else if(check.equals(\"delete\")){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    String taskNum \u003d splited[1];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    Task current \u003d list.get(Integer.parseInt(taskNum) - 1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    list.remove(Integer.parseInt(taskNum) - 1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    System.out.println(addDoubleLine(\"     Noted. I\u0027ve removed this task: \\n\" + \"    \" + current.toString() + \"\\n     Now you have \" + list.size() + \" tasks in the list.\"));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    storage.saveFile(list);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "elsakoh"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                }else if(check.equals(\"todo\")){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    String description \u003d line.replace(\"todo\", \"\").trim();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    //error handling"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    if(description.equals(\"\")){"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                        System.out.println(addDoubleLine(\"    ☹ OOPS!!! The description of a todo cannot be empty.\"));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    }else{ //successful addition "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                        list.add(new Todo(description));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                        Task current \u003d list.get(list.size()-1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                        printMsg(current, list.size());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                        storage.saveFile(list);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "elsakoh"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                //make an event task"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                }else if(check.equals(\"event\")){"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    //removes the command and splits it into 2"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    String [] splitDate \u003d line.replace(\"event\", \"\").split(\"/at\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    if(splitDate.length \u003c 2){"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                        System.out.println(addDoubleLine(\"    ☹ OOPS!!! Events require both a description and a date \\n    (e.g. event go to concert /at 13 Feb)\"));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    }else{"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                        //if it reaches here it is successful"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                        list.add(new Event(splitDate[0].trim(), new DateTime(splitDate[1].trim())));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                        Task current \u003d list.get(list.size()-1);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                        printMsg(current, list.size());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                        storage.saveFile(list);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                //make deadline task"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                }else if(check.equals(\"deadline\")){"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    String [] splitDate \u003d line.replace(\"deadline\", \"\").split(\"/by\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    if(splitDate.length \u003c 2){"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                        System.out.println(addDoubleLine(\"    ☹ OOPS!!! Deadlines require both a description and a date by \\n    (e.g. deadline homework3 /by tomorrow)\"));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    }else{"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                        list.add(new Deadline(splitDate[0].trim(), new DateTime(splitDate[1].trim())));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                        Task current \u003d list.get(list.size()-1);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                        printMsg(current, list.size());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                //error handling"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                }else{"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    System.out.println(addDoubleLine(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "            "
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "            }catch(ArrayIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                System.out.println(addDoubleLine(\"Input cannot be empty!\"));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "            }catch (ParseException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                System.out.println(addDoubleLine(\"     ☹ OOPS!!! I\u0027m sorry,Please enter the date in the format dd-MM-yyyy HH:mm\"));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "            }             "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "           "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        greeting();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        handleInput();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "elsakoh": 116,
      "-": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    protected DateTime at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    public Event(String taskName, DateTime at) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    public String getStorageString(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        return \"E | \" + super.isDone + \" | \" + taskName + \" | \" + at.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "elsakoh": 15
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "elsakoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    private String fileLocation \u003d  \"data/duke.txt\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    private File file \u003d new File(fileLocation);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "elsakoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    //reading from saved state"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    public ArrayList\u003cTask\u003e recoverTasks(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "            assert sc !\u003d null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                String[] splited \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                for (int i \u003d 0; i \u003c splited.length; i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    splited[i] \u003d splited[i].trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                switch(splited[0]) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                        Task todo \u003d new Todo(splited[2]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                        if(splited[1].equals(\"true\")){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                            todo.markAsDone();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                        tasks.add(todo);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "elsakoh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                        Task deadline \u003d new Deadline(splited[2], new DateTime(splited[3]));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                        if(splited[1].equals(\"true\")){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                            deadline.markAsDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                        tasks.add(deadline);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "elsakoh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                        Task event \u003d new Event(splited[2], new DateTime(splited[3]));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                        if(splited[1].equals(\"true\")){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                            event.markAsDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                        tasks.add(event);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "elsakoh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                sc.close();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        }catch(FileNotFoundException e){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        }catch (ParseException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "            System.out.println(\"     ☹ OOPS!!! I\u0027m sorry,Please enter the date in the format dd-MMM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        }\t\t     "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    public void saveFile(ArrayList\u003cTask\u003e tasks){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "            FileWriter fw \u003d new FileWriter(\"data/duke.txt\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "            String total \u003d \"\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i ++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                String current \u003d tasks.get(i).getStorageString();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    total \u003d current;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                    total \u003d total + \"\\n\" + current;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "elsakoh"
        },
        "content": " \t\t\tfw.write(total);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "elsakoh"
        },
        "content": " \t\t\tfw.close();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "elsakoh"
        },
        "content": " \t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "elsakoh"
        },
        "content": " \t\t\tSystem.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "elsakoh"
        },
        "content": " \t\t}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "elsakoh"
        },
        "content": " \t}"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "elsakoh": 81
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "public class Task { "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    protected String taskName;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "elsakoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    //make the Task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    public Task(String taskName){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "elsakoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    //mark the task as done"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    //returns the tick or cross"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    public String getStatusIcon(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        return \"[\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"]\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    @Override "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        return getStatusIcon() + \" \" + this.taskName;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    public String getStorageString(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "elsakoh": 26
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    public Todo(String taskName) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    public String getStorageString(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "        return \"T | \" + super.isDone + \" | \" + taskName;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "elsakoh": 14
    }
  },
  {
    "path": "src/main/java/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elsakoh"
        },
        "content": "E | false | 1 | 17-05-1999 18:10"
      }
    ],
    "authorContributionMap": {
      "elsakoh": 1
    }
  }
]
