[
  {
    "path": "duke/src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "class AddCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tprivate static SimpleDateFormat formatterIn \u003d new SimpleDateFormat(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tprivate static SimpleDateFormat formatterOut \u003d new SimpleDateFormat(\"d MMM yyyy ha\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tpublic AddCommand(String command, String remainingCommand) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tsuper(command, remainingCommand);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t * Adds new task to list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t * @param tasks to add"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t * @param ui to print"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tpublic void execute(TaskList tasks, Ui ui) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\ttasks.addTask(createTask(command, false, remainingCommand));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tui.print(\"Got it. I\u0027ve added this task:\\n  \" + task.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tui.print(\"Now you have \" + tasks.getList().size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tpublic Task getTask() throws DukeException, ParseException { // only called when loading"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tif (this.task \u003d\u003d null) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t// remainingCommand contains [1/0] [description]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tString[] parts \u003d remainingCommand.split(\" \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tint binary \u003d Integer.valueOf(parts[0]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tString description \u003d parts[1];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tboolean isDone \u003d (binary \u003d\u003d 1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tthis.task \u003d createTask(command, isDone, description);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\treturn this.task;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t * Parses command to create task by type with its details, reused by loading"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t * @param type of task"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t * @param isDone"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t * @param description of task, deadline, details, etc"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t * @return"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tpublic Task createTask(String type, boolean isDone, String description) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t// depending on type"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tswitch (type) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tcase \"todo\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tif (description.isEmpty()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\tthrow new DukeException(\"☹ OOPS!!! The description of a \" + type + \" cannot be empty.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tthis.task \u003d loadTodo(isDone, description);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tbreak;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tcase \"deadline\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tif (description.isEmpty()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\tthrow new DukeException(\"☹ OOPS!!! The description of a \" + type + \" cannot be empty.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tthis.task \u003d loadDeadline(isDone, description);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tbreak;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tcase \"event\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tif (description.isEmpty()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\tthrow new DukeException(\"☹ OOPS!!! The description of a \" + type + \" cannot be empty.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tthis.task \u003d loadEvent(isDone, description);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tbreak;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tdefault:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tthrow new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tif (this.task \u003d\u003d null) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tthrow new DukeException(\"There is no new task!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\treturn this.task;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tprivate Todo loadTodo(boolean isDone, String description) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tTodo todo \u003d new Todo(isDone, description);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\treturn todo;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tprivate Deadline loadDeadline (boolean isDone, String description) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tint indexBy \u003d description.indexOf(\"/\"); // potential source of error"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tif (indexBy \u003d\u003d -1) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tthrow new DukeException(\"Put / before by!\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tString taskDesc \u003d description.substring(0, indexBy - 1); // start after space, end before space before /"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tString dateInString \u003d description.substring(indexBy + 4);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tDate date \u003d formatterIn.parse(dateInString);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tString by \u003d formatterOut.format(date);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tDeadline dead \u003d new Deadline(isDone, taskDesc, by);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\treturn dead;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tprivate Event loadEvent(boolean isDone, String description) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tint indexAt \u003d description.indexOf(\"/\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tif (indexAt \u003d\u003d -1) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tthrow new DukeException(\"Put / before at!\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tString taskDesc \u003d description.substring(0, indexAt - 1); // start after space, end before space before /"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tString dateInString \u003d description.substring(indexAt + 4);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tDate date \u003d formatterIn.parse(dateInString);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tString at \u003d formatterOut.format(date);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tEvent event \u003d new Event(isDone, taskDesc, at);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\treturn event;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tirameshu": 116
    }
  },
  {
    "path": "duke/src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "abstract class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tprotected String command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tprotected String remainingCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tprotected Task task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tpublic Command(String command, String remainingCommand) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tthis.command \u003d command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tthis.remainingCommand \u003d remainingCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tpublic boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\treturn this.command.equals(\"bye\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tabstract public void execute(TaskList tasks, Ui ui) throws DukeException, ParseException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tirameshu": 18
    }
  },
  {
    "path": "duke/src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        this.type \u003d \"deadline\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public Deadline(boolean isDone, String description, String by) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    \tsuper(isDone, description); // usually isDone \u003d true here"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    \tthis.by \u003d by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    \tthis.type \u003d \"deadline\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    \treturn this.description + \" /by \" + this.by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tirameshu": 26
    }
  },
  {
    "path": "duke/src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tpublic DeleteCommand(String command, String remainingCommand) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tsuper(command, remainingCommand);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tpublic void execute(TaskList tasks, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tArrayList\u003cTask\u003e list \u003d tasks.getList();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tif (list.isEmpty()) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tthrow new DukeException(\"You have no task to delete!\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t} else if (remainingCommand.isEmpty()) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tthrow new DukeException(\"Which task do you want to delete?\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tint index \u003d Integer.valueOf(remainingCommand); // assuming only has number left"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tTask task \u003d list.get(index - 1);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tlist.remove(task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tui.print(\"Noted. I\u0027ve removed this task:\\n  \" + task.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tui.print(\"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tirameshu": 21
    }
  },
  {
    "path": "duke/src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "class DoneCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tpublic DoneCommand(String command, String remainingCommand) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tsuper(command, remainingCommand);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tpublic void execute(TaskList tasks, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tArrayList\u003cTask\u003e list \u003d tasks.getList();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tif (list.isEmpty()) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tthrow new DukeException(\"You have no task to do!\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t} else if (remainingCommand.isEmpty()) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tthrow new DukeException(\"Do include the task number that you have done!\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tint index \u003d Integer.valueOf(remainingCommand); // assuming only has number left"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tTask task \u003d list.get(index - 1);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\ttask.markAsDone();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tui.print(\"Nice! I\u0027ve marked this task as done:\\n  \" + task.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tirameshu": 20
    }
  },
  {
    "path": "duke/src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t// private static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tprivate Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tprivate TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tprivate Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tprivate static String filename \u003d \"./data/duke.txt\"; // todo isDone? description"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tpublic Duke(String filename) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tstorage \u003d new Storage(filename);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\ttasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t} catch (FileNotFoundException fe) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tui.showError(fe.getMessage());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t} catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\ttasks \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tui.showLoadingError(); // i suppose this just says file is corrupted therefore creating new or sth"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t} catch (ParseException pe) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tui.showError(pe.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tpublic void run() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tui.showWelcome();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tboolean isExit \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\twhile (!isExit) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t        \tString command \u003d ui.readWord();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t            String remainingCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t            ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t            Command c \u003d Parser.parse(command, remainingCommand);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t            c.execute(tasks, ui);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t            storage.update(tasks, filename);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t        \tisExit \u003d c.isExit();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t        } catch (DukeException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t        \tui.showError(pe.getMessage());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t        } catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\tui.showError(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t} finally {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t            ui.showLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t// bye invoked"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t// update duke.txt with list"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tstorage.update(tasks, filename);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tui.showError(\"Something went wrong with the file: \" + e.getMessage());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tnew Duke(filename).run();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tirameshu": 69,
      "-": 3
    }
  },
  {
    "path": "duke/src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tirameshu": 7
    }
  },
  {
    "path": "duke/src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        this.type \u003d \"event\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public Event(boolean isDone, String description, String at) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    \tsuper(isDone, description); // usually isDone \u003d true here"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    \tthis.at \u003d at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    \tthis.type \u003d \"event\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    \treturn this.description + \" /at \" + this.at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tirameshu": 26
    }
  },
  {
    "path": "duke/src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "class ExitCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tpublic ExitCommand(String command, String remainingCommand) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tsuper(command, remainingCommand);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tpublic void execute(TaskList tasks, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tui.exit();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tirameshu": 11
    }
  },
  {
    "path": "duke/src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "class ListCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tpublic ListCommand(String command, String remainingCommand) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tsuper(command, remainingCommand);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tpublic void execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tui.print(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tArrayList\u003cTask\u003e list \u003d tasks.getList();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tfor (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tSystem.out.println((i + 1) + \".\" + list.get(i).toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tirameshu": 15
    }
  },
  {
    "path": "duke/src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t * Determines type of Command"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t * @param command as a String"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t * @return Command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tpublic static Command parse(String command, String remainingCommand) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tif (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\treturn new ListCommand(command, remainingCommand);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t} else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\treturn new DoneCommand(command, remainingCommand);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t} else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\treturn new DeleteCommand(command, remainingCommand);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t} else if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\treturn new ExitCommand(command, remainingCommand);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\treturn new AddCommand(command, remainingCommand);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t} "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t/*"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tprivate Consumer\u003cString\u003e parse \u003d (line) -\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tString[] parts \u003d line.split(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tboolean isDone;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tString type \u003d parts[0];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tint binary \u003d Integer.valueOf(parts[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tif (binary \u003d\u003d 1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tisDone \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tisDone \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tString description \u003d parts[2];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tloadLine(type, isDone, description);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t};"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tprivate void loadLine(String type, boolean isDone, String description) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tswitch(type) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tcase \"todo\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t    loadTodo(isDone, description);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t    break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tcase \"deadline\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t    loadDeadline(isDone, description);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t    break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tcase \"event\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t    loadEvent(isDone, description);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t    break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t*/"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tirameshu": 54
    }
  },
  {
    "path": "duke/src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tprotected String filename;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tpublic Storage(String filename) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tthis.filename \u003d filename;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tpublic ArrayList\u003cAddCommand\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tArrayList\u003cAddCommand\u003e commands \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tFile f \u003d new File(filename);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tScanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\twhile (s.hasNext()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tAddCommand c \u003d (AddCommand) Parser.parse(s.next(), s.nextLine().trim());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tcommands.add(c);\t\t"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\ts.close();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\treturn commands;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t * Writes updated todo list to file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tpublic void update(TaskList tasks, String filename) throws IOException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tFileWriter fw \u003d new FileWriter(filename, false); // rewrites the entire doc"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tfor (Task task: tasks.getList()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tString type \u003d task.getType();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tint binary \u003d task.isDone ? 1 : 0;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tString toWrite \u003d type + \" \" + binary + \" \" + task.getDescription();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tfw.write(toWrite + System.lineSeparator());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tfw.close();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tirameshu": 46
    }
  },
  {
    "path": "duke/src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    boolean isDone; // deliberate, else need overload with method for isDone"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        this.type \u003d \"task\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public Task(boolean isDone, String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        this.type \u003d \"task\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        return (isDone ? \"[\\u2713] \" + this.description : \"[\\u2718] \" + this.description); //return tick or X symbols"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tirameshu": 33
    }
  },
  {
    "path": "duke/src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tprotected ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tpublic TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tthis.list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tpublic TaskList(ArrayList\u003cAddCommand\u003e commands) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tthis.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tfor (AddCommand ac: commands) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\taddTask(ac.getTask());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tpublic ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\treturn list;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t * Adds new tasks to list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t * @param Task task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tpublic void addTask(Task task) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tlist.add(task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tirameshu": 32
    }
  },
  {
    "path": "duke/src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        this.type \u003d \"todo\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public Todo(boolean isDone, String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    \tsuper(isDone, description); // usually isDone \u003d true here"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    \tthis.type \u003d \"todo\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tirameshu": 17
    }
  },
  {
    "path": "duke/src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tprivate static SimpleDateFormat formatterIn \u003d new SimpleDateFormat(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tprivate static SimpleDateFormat formatterOut \u003d new SimpleDateFormat(\"d MMM yyyy ha\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tprivate Scanner scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tpublic Ui() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tthis.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tpublic void showWelcome() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tString logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t+ \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t+ \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t+ \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t+ \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tSystem.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tpublic String readWord() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\treturn scanner.next().trim();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t * @return Entire line of command"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tpublic String readCommand() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\treturn scanner.nextLine().trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tpublic void showLine() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tSystem.out.println(\"_______\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tpublic void print(String msg) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tSystem.out.println(msg);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tpublic void showError(String msg) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tprint(msg);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tpublic void showLoadingError() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tprint(\"Loading error! New file created.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tpublic void exit() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tscanner.close();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tprint(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tirameshu": 57
    }
  },
  {
    "path": "duke/src/main/java/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "todo 0 work"
      }
    ],
    "authorContributionMap": {
      "tirameshu": 1
    }
  },
  {
    "path": "duke/src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tirameshu": 10
    }
  }
]
